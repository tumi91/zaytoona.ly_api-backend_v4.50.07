{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "nopCommerce Web API Backend",
    "description" : "Official nopCommerce Web API for backend",
    "contact" : {
      "name" : "nopCommerce",
      "url" : "https://www.nopcommerce.com/"
    },
    "license" : {
      "name" : "License",
      "url" : "https://www.nopcommerce.com/web-api-license-terms"
    },
    "version" : "v4.50.07"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : {
    "/api-backend/Acl/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Acl" ],
        "summary" : "Deletes an ACL record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Acl/GetAclRecords/{entityId}" : {
      "get" : {
        "tags" : [ "Acl" ],
        "summary" : "Gets ACL records",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AclRecordDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Acl/InsertAclRecord/{customerRoleId}/{entityId}" : {
      "post" : {
        "tags" : [ "Acl" ],
        "summary" : "Inserts an ACL record",
        "parameters" : [ {
          "name" : "customerRoleId",
          "in" : "path",
          "description" : "Customer role Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "description" : "Entity type name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Acl/GetCustomerRoleIdsWithAccess/{entityId}" : {
      "get" : {
        "tags" : [ "Acl" ],
        "summary" : "Find customer role identifiers with granted access",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Acl/Authorize/{customerId}/{entityId}" : {
      "post" : {
        "tags" : [ "Acl" ],
        "summary" : "Authorize ACL permission",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "description" : "Entity type name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectToAcl",
          "in" : "query",
          "description" : "Is entity subject to ACL",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ActivityLog/GetAll" : {
      "get" : {
        "tags" : [ "ActivityLog" ],
        "summary" : "Gets all activity log items",
        "parameters" : [ {
          "name" : "createdOnFrom",
          "in" : "query",
          "description" : "Log item creation from; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdOnTo",
          "in" : "query",
          "description" : "Log item creation to; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "activityLogTypeId",
          "in" : "query",
          "description" : "Activity log type identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ipAddress",
          "in" : "query",
          "description" : "IP address; pass null or empty to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityName",
          "in" : "query",
          "description" : "Entity name; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "description" : "Entity identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityLogActivityLogDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ActivityLog/GetById/{id}" : {
      "get" : {
        "tags" : [ "ActivityLog" ],
        "summary" : "Gets an activity log item by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The activity log identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityLogDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ActivityLog/ClearAllActivities" : {
      "delete" : {
        "tags" : [ "ActivityLog" ],
        "summary" : "Clears activity log",
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ActivityLog/InsertActivity/{customerId}" : {
      "put" : {
        "tags" : [ "ActivityLog" ],
        "summary" : "Inserts an activity log item",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "systemKeyword",
          "in" : "query",
          "description" : "System keyword",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "comment",
          "in" : "query",
          "description" : "Comment",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityLogDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ActivityLogType/Update" : {
      "put" : {
        "tags" : [ "ActivityLogType" ],
        "summary" : "Update an activity log type item",
        "requestBody" : {
          "description" : "Activity log type item Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityLogTypeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityLogTypeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityLogTypeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityLogTypeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ActivityLogType/GetAll" : {
      "get" : {
        "tags" : [ "ActivityLogType" ],
        "summary" : "Gets all activity log type items",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityLogTypeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ActivityLogType/GetById/{id}" : {
      "get" : {
        "tags" : [ "ActivityLogType" ],
        "summary" : "Gets an activity log type item by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The activity log type identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityLogTypeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Address/GetAddressTotalByCountryId/{countryId}" : {
      "get" : {
        "tags" : [ "Address" ],
        "summary" : "Gets total number of addresses by country identifier",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "description" : "Country identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Address/GetAddressTotalByStateProvinceId/{stateProvinceId}" : {
      "get" : {
        "tags" : [ "Address" ],
        "summary" : "Gets total number of addresses by state/province identifier",
        "parameters" : [ {
          "name" : "stateProvinceId",
          "in" : "path",
          "description" : "State/province identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Address/IsAddressValid" : {
      "post" : {
        "tags" : [ "Address" ],
        "summary" : "Gets a value indicating whether address is valid (can be saved)",
        "requestBody" : {
          "description" : "Address to validate",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Address/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Address" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Address/GetById/{id}" : {
      "get" : {
        "tags" : [ "Address" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Address/Create" : {
      "post" : {
        "tags" : [ "Address" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Address/Update" : {
      "put" : {
        "tags" : [ "Address" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttribute/Delete/{id}" : {
      "delete" : {
        "tags" : [ "AddressAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttribute/GetById/{id}" : {
      "get" : {
        "tags" : [ "AddressAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressAttributeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttribute/GetAll" : {
      "get" : {
        "tags" : [ "AddressAttribute" ],
        "summary" : "Gets all address attributes",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttribute/Create" : {
      "post" : {
        "tags" : [ "AddressAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttribute/Update" : {
      "put" : {
        "tags" : [ "AddressAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeFormatter/FormatAttributes" : {
      "post" : {
        "tags" : [ "AddressAttributeFormatter" ],
        "summary" : "Formats attributes",
        "parameters" : [ {
          "name" : "separator",
          "in" : "query",
          "description" : "Separator",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "<br />"
          }
        }, {
          "name" : "htmlEncode",
          "in" : "query",
          "description" : "A value indicating whether to encode (HTML) values",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeParser/ParseAddressAttributes" : {
      "post" : {
        "tags" : [ "AddressAttributeParser" ],
        "summary" : "Gets selected address attributes",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeParser/ParseAddressAttributeValues" : {
      "post" : {
        "tags" : [ "AddressAttributeParser" ],
        "summary" : "Get address attribute values",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeParser/ParseValues/{addressAttributeId}" : {
      "post" : {
        "tags" : [ "AddressAttributeParser" ],
        "summary" : "Gets selected address attribute value",
        "parameters" : [ {
          "name" : "addressAttributeId",
          "in" : "path",
          "description" : "Address attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeParser/AddAddressAttribute/{addressAttributeId}" : {
      "post" : {
        "tags" : [ "AddressAttributeParser" ],
        "summary" : "Adds an attribute",
        "parameters" : [ {
          "name" : "addressAttributeId",
          "in" : "path",
          "description" : "Address attribute",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Value",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeParser/GetAttributeWarnings" : {
      "post" : {
        "tags" : [ "AddressAttributeParser" ],
        "summary" : "Validates address attributes",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeValue/Delete/{id}" : {
      "delete" : {
        "tags" : [ "AddressAttributeValue" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeValue/GetById/{id}" : {
      "get" : {
        "tags" : [ "AddressAttributeValue" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressAttributeValueDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeValue/GetAll/{addressAttributeId}" : {
      "get" : {
        "tags" : [ "AddressAttributeValue" ],
        "summary" : "Gets address attribute values by address attribute identifier",
        "parameters" : [ {
          "name" : "addressAttributeId",
          "in" : "path",
          "description" : "The address attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeValue/Create" : {
      "post" : {
        "tags" : [ "AddressAttributeValue" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressAttributeValueDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/AddressAttributeValue/Update" : {
      "put" : {
        "tags" : [ "AddressAttributeValue" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/GetAll" : {
      "get" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Gets all affiliates",
        "parameters" : [ {
          "name" : "friendlyUrlName",
          "in" : "query",
          "description" : "Friendly URL name; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "First name; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "Last name; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loadOnlyWithOrders",
          "in" : "query",
          "description" : "Value indicating whether to load affiliates only with orders placed (by affiliated customers)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "ordersCreatedFromUtc",
          "in" : "query",
          "description" : "Orders created date from (UTC); null to load all records. It's used only with \"loadOnlyWithOrders\" parameter st to \"true\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "ordersCreatedToUtc",
          "in" : "query",
          "description" : "Orders created date to (UTC); null to load all records. It's used only with \"loadOnlyWithOrders\" parameter st to \"true\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AffiliateDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/GetById/{id}" : {
      "get" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Gets an affiliate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Affiliate identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AffiliateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/GetByFriendlyUrlName" : {
      "get" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Gets an affiliate",
        "parameters" : [ {
          "name" : "friendlyUrlName",
          "in" : "query",
          "description" : "Affiliate friendly url name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AffiliateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/Create" : {
      "post" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Create affiliate",
        "requestBody" : {
          "description" : "Affiliate Dto",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AffiliateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/Update" : {
      "put" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Update affiliate by Id",
        "requestBody" : {
          "description" : "Affiliate Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffiliateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Delete affiliate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Affiliate identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/GetAffiliateFullName/{affiliateId}" : {
      "get" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Get full name",
        "parameters" : [ {
          "name" : "affiliateId",
          "in" : "path",
          "description" : "Affiliate Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/GenerateUrl/{affiliateId}" : {
      "get" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Generate affiliate URL",
        "parameters" : [ {
          "name" : "affiliateId",
          "in" : "path",
          "description" : "Affiliate Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Affiliates/ValidateFriendlyUrlName/{affiliateId}" : {
      "get" : {
        "tags" : [ "Affiliates" ],
        "summary" : "Validate friendly URL name",
        "parameters" : [ {
          "name" : "affiliateId",
          "in" : "path",
          "description" : "Affiliate Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "friendlyUrlName",
          "in" : "query",
          "description" : "Friendly URL name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Authenticate/GetToken" : {
      "post" : {
        "tags" : [ "Authenticate" ],
        "summary" : "Authenticate admin",
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthenticateAdminRequest"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthenticateAdminRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthenticateAdminRequest"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthenticateAdminRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BackInStockSubscription/GetAllByCustomerId/{customerId}" : {
      "get" : {
        "tags" : [ "BackInStockSubscription" ],
        "summary" : "Gets all subscriptions",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackInStockSubscriptionBackInStockSubscriptionDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BackInStockSubscription/FindSubscription/{customerId}/{productId}/{storeId}" : {
      "get" : {
        "tags" : [ "BackInStockSubscription" ],
        "summary" : "Gets all subscriptions",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackInStockSubscriptionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BackInStockSubscription/SendNotificationsToSubscribers/{productId}" : {
      "get" : {
        "tags" : [ "BackInStockSubscription" ],
        "summary" : "Send notification to subscribers",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BackInStockSubscription/GetAllByProduct/{productId}" : {
      "get" : {
        "tags" : [ "BackInStockSubscription" ],
        "summary" : "Gets all subscriptions",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackInStockSubscriptionBackInStockSubscriptionDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BackInStockSubscription/Delete/{id}" : {
      "delete" : {
        "tags" : [ "BackInStockSubscription" ],
        "summary" : "Delete a back in stock subscription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Subscription identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BackInStockSubscription/GetById/{id}" : {
      "get" : {
        "tags" : [ "BackInStockSubscription" ],
        "summary" : "Gets a subscription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Subscription identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackInStockSubscriptionDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BackInStockSubscription/Create" : {
      "post" : {
        "tags" : [ "BackInStockSubscription" ],
        "summary" : "Inserts subscription",
        "requestBody" : {
          "description" : "Subscription model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackInStockSubscriptionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackInStockSubscriptionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackInStockSubscriptionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackInStockSubscriptionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackInStockSubscriptionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPost/Delete/{id}" : {
      "delete" : {
        "tags" : [ "BlogPost" ],
        "summary" : "Deletes a blog post",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Blog post Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPost/GetById/{id}" : {
      "get" : {
        "tags" : [ "BlogPost" ],
        "summary" : "Gets a blog post",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Blog post identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPostDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPost/GetAll" : {
      "get" : {
        "tags" : [ "BlogPost" ],
        "summary" : "Gets all blog posts",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "The store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Filter by created date; null if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "Filter by created date; null if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "title",
          "in" : "query",
          "description" : "Filter by blog post title",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPostBlogPostDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPost/GetAllByTag" : {
      "get" : {
        "tags" : [ "BlogPost" ],
        "summary" : "Gets all blog posts",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "The store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier. 0 if you want to get all blog posts",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Tag",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPostBlogPostDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPost/Create" : {
      "post" : {
        "tags" : [ "BlogPost" ],
        "summary" : "Inserts a blog post",
        "requestBody" : {
          "description" : "Blog post Dto",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPostDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPost/Update" : {
      "put" : {
        "tags" : [ "BlogPost" ],
        "summary" : "Updates the blog post",
        "requestBody" : {
          "description" : "Blog post Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPost/ParseTags/{id}" : {
      "get" : {
        "tags" : [ "BlogPost" ],
        "summary" : "Parse tags",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Blog post id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPost/BlogPostIsAvailable/{id}" : {
      "get" : {
        "tags" : [ "BlogPost" ],
        "summary" : "Get a value indicating whether a blog post is available now (availability dates)",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Blog post id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "dateTime",
          "in" : "query",
          "description" : "Datetime to check; pass null to use current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/BlogPostTag/GetAll/{storeId}/{languageId}" : {
      "get" : {
        "tags" : [ "BlogPostTag" ],
        "summary" : "Gets all blog post tags",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "description" : "The store identifier; pass 0 to load all records",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language identifier. 0 if you want to get all blog posts",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Campaign/Create" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Create a campaign",
        "requestBody" : {
          "description" : "Campaign Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CampaignDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Campaign/Update" : {
      "put" : {
        "tags" : [ "Campaign" ],
        "summary" : "Update a campaign",
        "requestBody" : {
          "description" : "Campaign Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Campaign/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Campaign" ],
        "summary" : "Delete a campaign",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Campaign identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Campaign/GetById/{id}" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Gets a campaign by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The campaign identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CampaignDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Campaign/GetAll" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Gets all campaigns",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Campaign/SendCampaignToEmails/{id}/{emailAccountId}/{subscriptionIds}" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Sends a campaign to specified emails",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The campaign identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "emailAccountId",
          "in" : "path",
          "description" : "Email account identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "subscriptionIds",
          "in" : "path",
          "description" : "Subscription identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Campaign/SendCampaignToEmail/{id}/{emailAccountId}" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Sends a campaign to specified email",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The campaign identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "emailAccountId",
          "in" : "path",
          "description" : "Email account identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetAllCategoriesByParentCategoryId/{parentCategoryId}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Gets all categories filtered by parent category identifier",
        "parameters" : [ {
          "name" : "parentCategoryId",
          "in" : "path",
          "description" : "Parent category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetAllCategoriesDisplayedOnHomepage" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Gets all categories displayed on the home page",
        "parameters" : [ {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetChildCategoryIds/{parentCategoryId}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Gets child category identifiers",
        "parameters" : [ {
          "name" : "parentCategoryId",
          "in" : "path",
          "description" : "Parent category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetCategoriesByAppliedDiscount" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Get categories for which a discount is applied",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "query",
          "description" : "Discount identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to load deleted categories",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryCategoryDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/DeleteCategories/{ids}" : {
      "delete" : {
        "tags" : [ "Category" ],
        "summary" : "Delete a list of categories",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of category identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetNotExistingCategories/{idsNames}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Returns a list of names of not existing categories",
        "parameters" : [ {
          "name" : "idsNames",
          "in" : "path",
          "description" : "Array of names and/or IDs of the categories to check (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetCategoriesByIds/{ids}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Gets categories by identifier",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of category identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetFormattedBreadCrumb/{categoryId}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Get formatted category breadcrumb",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "separator",
          "in" : "query",
          "description" : "Separator",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ">>"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier for localization",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetCategoryBreadCrumb/{id}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Get category breadcrumb",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Category id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to load hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Category" ],
        "summary" : "Delete category",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Category",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetById/{id}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Gets a category",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetAll" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Gets all categories",
        "parameters" : [ {
          "name" : "categoryName",
          "in" : "query",
          "description" : "Category name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "overridePublished",
          "in" : "query",
          "description" : "null - process \"Published\" property according to \"showHidden\" parameter\r\ntrue - load only \"Published\" products\r\nfalse - load only \"Unpublished\" products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryCategoryDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/Create" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "Inserts category",
        "requestBody" : {
          "description" : "Category",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/Update" : {
      "put" : {
        "tags" : [ "Category" ],
        "summary" : "Updates the category",
        "requestBody" : {
          "description" : "Category",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/InsertDiscountCategoryMapping" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "Inserts a discount-category mapping record",
        "requestBody" : {
          "description" : "Discount-category mapping",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/DeleteDiscountCategoryMapping/{id}" : {
      "delete" : {
        "tags" : [ "Category" ],
        "summary" : "Deletes a discount-category mapping record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Discount-category mapping",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Category/GetDiscountAppliedToCategory/{categoryId}/{discountId}" : {
      "get" : {
        "tags" : [ "Category" ],
        "summary" : "Get a discount-category mapping record",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CategoryTemplate/Delete/{id}" : {
      "delete" : {
        "tags" : [ "CategoryTemplate" ],
        "summary" : "Delete category template",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Category template identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CategoryTemplate/GetById/{id}" : {
      "get" : {
        "tags" : [ "CategoryTemplate" ],
        "summary" : "Gets a category template",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Category template identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryTemplateDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CategoryTemplate/GetAll" : {
      "get" : {
        "tags" : [ "CategoryTemplate" ],
        "summary" : "Gets all category templates",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryTemplateDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CategoryTemplate/Create" : {
      "post" : {
        "tags" : [ "CategoryTemplate" ],
        "summary" : "Inserts category template",
        "requestBody" : {
          "description" : "Category template",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryTemplateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CategoryTemplate/Update" : {
      "put" : {
        "tags" : [ "CategoryTemplate" ],
        "summary" : "Updates the category template",
        "requestBody" : {
          "description" : "Category template",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttribute/DeleteByIds/{ids}" : {
      "delete" : {
        "tags" : [ "CheckoutAttribute" ],
        "summary" : "Deletes checkout attributes",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of checkout attributes identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttribute/GetAll" : {
      "get" : {
        "tags" : [ "CheckoutAttribute" ],
        "summary" : "Gets all checkout attributes",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "excludeShippableAttributes",
          "in" : "query",
          "description" : "A value indicating whether we should exclude shippable attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CheckoutAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttribute/GetById/{id}" : {
      "get" : {
        "tags" : [ "CheckoutAttribute" ],
        "summary" : "Gets a checkout attribute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Checkout attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckoutAttributeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttribute/GetByIds/{ids}" : {
      "get" : {
        "tags" : [ "CheckoutAttribute" ],
        "summary" : "Gets checkout attributes",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of checkout attribute identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CheckoutAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttribute/Create" : {
      "post" : {
        "tags" : [ "CheckoutAttribute" ],
        "summary" : "Create a checkout attribute",
        "requestBody" : {
          "description" : "Checkout attribute Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckoutAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttribute/Update" : {
      "put" : {
        "tags" : [ "CheckoutAttribute" ],
        "summary" : "Update a checkout attribute",
        "requestBody" : {
          "description" : "Checkout attribute Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeFormatter/FormatAttributes/{customerId}" : {
      "post" : {
        "tags" : [ "CheckoutAttributeFormatter" ],
        "summary" : "Formats attributes",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "separator",
          "in" : "query",
          "description" : "Separator",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "<br />"
          }
        }, {
          "name" : "htmlEncode",
          "in" : "query",
          "description" : "A value indicating whether to encode (HTML) values",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "renderPrices",
          "in" : "query",
          "description" : "A value indicating whether to render prices",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "allowHyperlinks",
          "in" : "query",
          "description" : "A value indicating whether to HTML hyperlink tags could be rendered (if required)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeParser/ParseCheckoutAttributes" : {
      "post" : {
        "tags" : [ "CheckoutAttributeParser" ],
        "summary" : "Gets selected checkout attributes",
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CheckoutAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeParser/ParseCheckoutAttributeValues" : {
      "post" : {
        "tags" : [ "CheckoutAttributeParser" ],
        "summary" : "Get checkout attribute values",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ParseCheckoutAttributeValuesResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeParser/ParseValues/{attributeId}" : {
      "post" : {
        "tags" : [ "CheckoutAttributeParser" ],
        "summary" : "Gets selected checkout attribute value",
        "parameters" : [ {
          "name" : "attributeId",
          "in" : "path",
          "description" : "Checkout attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeParser/AddCheckoutAttribute/{checkoutAttributeId}" : {
      "post" : {
        "tags" : [ "CheckoutAttributeParser" ],
        "summary" : "Adds an attribute",
        "parameters" : [ {
          "name" : "checkoutAttributeId",
          "in" : "path",
          "description" : "Checkout attribute",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Value",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeParser/IsConditionMet/{attributeId}" : {
      "post" : {
        "tags" : [ "CheckoutAttributeParser" ],
        "summary" : "Check whether condition of some attribute is met (if specified). Return \"null\" if not condition is specified",
        "parameters" : [ {
          "name" : "attributeId",
          "in" : "path",
          "description" : "Checkout attribute Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Selected attributes (XML format)",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeParser/RemoveCheckoutAttribute/{attributeId}" : {
      "post" : {
        "tags" : [ "CheckoutAttributeParser" ],
        "summary" : "Remove an attribute",
        "parameters" : [ {
          "name" : "attributeId",
          "in" : "path",
          "description" : "Checkout attribute Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeValue/Delete/{id}" : {
      "delete" : {
        "tags" : [ "CheckoutAttributeValue" ],
        "summary" : "Deletes a checkout attribute value",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Checkout attribute value identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeValue/GetByCheckoutAttributeId/{id}" : {
      "get" : {
        "tags" : [ "CheckoutAttributeValue" ],
        "summary" : "Gets checkout attribute values by checkout attribute identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Checkout attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeValue/GetById/{id}" : {
      "get" : {
        "tags" : [ "CheckoutAttributeValue" ],
        "summary" : "Gets a checkout attribute value",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Checkout attribute value identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeValue/Create" : {
      "post" : {
        "tags" : [ "CheckoutAttributeValue" ],
        "summary" : "Create a checkout attribute value",
        "requestBody" : {
          "description" : "Checkout attribute value Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckoutAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CheckoutAttributeValue/Update" : {
      "put" : {
        "tags" : [ "CheckoutAttributeValue" ],
        "summary" : "Update a checkout attribute value",
        "requestBody" : {
          "description" : "Checkout attribute value Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CompareProducts/ClearCompareProducts" : {
      "get" : {
        "tags" : [ "CompareProducts" ],
        "summary" : "Clears a \"compare products\" list",
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CompareProducts/GetComparedProducts" : {
      "get" : {
        "tags" : [ "CompareProducts" ],
        "summary" : "Gets a \"compare products\" list",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CompareProducts/RemoveProductFromCompareList/{productId}" : {
      "get" : {
        "tags" : [ "CompareProducts" ],
        "summary" : "Removes a product from a \"compare products\" list",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CompareProducts/AddProductToCompareList/{productId}" : {
      "get" : {
        "tags" : [ "CompareProducts" ],
        "summary" : "Adds a product to a \"compare products\" list",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CopyProduct/CopyProduct/{productId}" : {
      "get" : {
        "tags" : [ "CopyProduct" ],
        "summary" : "Create a copy of product with all depended data",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product id to copy",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "newName",
          "in" : "query",
          "description" : "The name of product duplicate",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isPublished",
          "in" : "query",
          "description" : "A value indicating whether the product duplicate should be published",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "copyImages",
          "in" : "query",
          "description" : "A value indicating whether the product images should be copied",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "copyAssociatedProducts",
          "in" : "query",
          "description" : "A value indicating whether the copy associated products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/GetAllCountries" : {
      "get" : {
        "tags" : [ "Country" ],
        "summary" : "Gets all countries",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier. It's used to sort countries by localized names (if specified); pass 0 to skip it",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CountryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/GetAllCountriesForBilling" : {
      "get" : {
        "tags" : [ "Country" ],
        "summary" : "Gets all countries that allow billing",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier. It's used to sort countries by localized names (if specified); pass 0 to skip it",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CountryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/GetAllCountriesForShipping" : {
      "get" : {
        "tags" : [ "Country" ],
        "summary" : "Gets all countries that allow shipping",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier. It's used to sort countries by localized names (if specified); pass 0 to skip it",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CountryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/GetCountryByAddress/{addressId}" : {
      "get" : {
        "tags" : [ "Country" ],
        "summary" : "Gets a country by address",
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "Address identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/GetCountriesByIds/{ids}" : {
      "get" : {
        "tags" : [ "Country" ],
        "summary" : "Get countries by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of country identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CountryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Country" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/GetById/{id}" : {
      "get" : {
        "tags" : [ "Country" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/GetCountryByTwoLetterIsoCode" : {
      "get" : {
        "tags" : [ "Country" ],
        "summary" : "Gets a country by two letter ISO code",
        "parameters" : [ {
          "name" : "twoLetterIsoCode",
          "in" : "query",
          "description" : "Country two letter ISO code",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/GetCountryByThreeLetterIsoCode" : {
      "get" : {
        "tags" : [ "Country" ],
        "summary" : "Gets a country by three letter ISO code",
        "parameters" : [ {
          "name" : "threeLetterIsoCode",
          "in" : "query",
          "description" : "Country three letter ISO code",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/Create" : {
      "post" : {
        "tags" : [ "Country" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Country/Update" : {
      "put" : {
        "tags" : [ "Country" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CrossSellProduct/Delete/{id}" : {
      "delete" : {
        "tags" : [ "CrossSellProduct" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CrossSellProduct/GetById/{id}" : {
      "get" : {
        "tags" : [ "CrossSellProduct" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CrossSellProductDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CrossSellProduct/GetCrossSellProductsByProductId1/{productId1}" : {
      "get" : {
        "tags" : [ "CrossSellProduct" ],
        "summary" : "Gets cross-sell products by product identifier",
        "parameters" : [ {
          "name" : "productId1",
          "in" : "path",
          "description" : "The first product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CrossSellProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CrossSellProduct/GetCrossSellProductsByShoppingCart/{cart}" : {
      "get" : {
        "tags" : [ "CrossSellProduct" ],
        "summary" : "Gets a cross-sells",
        "parameters" : [ {
          "name" : "cart",
          "in" : "path",
          "description" : "Array of Shopping cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "numberOfProducts",
          "in" : "query",
          "description" : "Number of products to return",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CrossSellProduct/Create" : {
      "post" : {
        "tags" : [ "CrossSellProduct" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CrossSellProductDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CrossSellProductDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CrossSellProductDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CrossSellProductDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CrossSellProductDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Currency" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/GetById/{id}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/GetCurrencyByCode" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Gets a currency by code",
        "parameters" : [ {
          "name" : "currencyCode",
          "in" : "query",
          "description" : "Currency code",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/GetAll" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Gets all currencies",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Load records allowed only in a specified store; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCurrencyDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/Create" : {
      "post" : {
        "tags" : [ "Currency" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/Update" : {
      "put" : {
        "tags" : [ "Currency" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/GetCurrencyLiveRates" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Gets live rates regarding the passed currency",
        "parameters" : [ {
          "name" : "currencyCode",
          "in" : "query",
          "description" : "Currency code; pass null to use primary exchange rate currency",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ExchangeRateDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/ConvertCurrency" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Converts currency",
        "parameters" : [ {
          "name" : "amount",
          "in" : "query",
          "description" : "Amount",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "exchangeRate",
          "in" : "query",
          "description" : "Currency exchange rate",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/ConvertToPrimaryStoreCurrency/{currencyId}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Converts to primary store currency",
        "parameters" : [ {
          "name" : "amount",
          "in" : "query",
          "description" : "Amount",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "currencyId",
          "in" : "path",
          "description" : "Source currency Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/ConvertFromPrimaryStoreCurrency/{currencyId}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Converts from primary store currency",
        "parameters" : [ {
          "name" : "amount",
          "in" : "query",
          "description" : "Amount",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "currencyId",
          "in" : "path",
          "description" : "Target currency Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/ConvertCurrency/{sourceCurrencyId}/{targetCurrencyId}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Converts currency",
        "parameters" : [ {
          "name" : "amount",
          "in" : "query",
          "description" : "Amount",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "sourceCurrencyId",
          "in" : "path",
          "description" : "Source currency code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "targetCurrencyId",
          "in" : "path",
          "description" : "Target currency code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/ConvertToPrimaryExchangeRateCurrency/{currencyId}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Converts to primary exchange rate currency",
        "parameters" : [ {
          "name" : "amount",
          "in" : "query",
          "description" : "Amount",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "currencyId",
          "in" : "path",
          "description" : "Source currency Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Currency/ConvertFromPrimaryExchangeRateCurrency/{currencyId}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Converts from primary exchange rate currency",
        "parameters" : [ {
          "name" : "amount",
          "in" : "query",
          "description" : "Amount",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "currencyId",
          "in" : "path",
          "description" : "Target currency code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetOnlineCustomers/{ids}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets online customers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "A list of customer role identifiers (separator - ;) to filter by (at least one match); pass null or empty list in order to load all customers;",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastActivityFromUtc",
          "in" : "query",
          "description" : "Customer last activity date (from)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerCustomerDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomersWithShoppingCarts" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets customers with shopping carts",
        "parameters" : [ {
          "name" : "shoppingCartType",
          "in" : "query",
          "description" : "Shopping cart type; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShoppingCartType"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "Billing country identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerCustomerDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomersByIds/{ids}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customers by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of customer identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerByGuid" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets a customer by GUID",
        "parameters" : [ {
          "name" : "guid",
          "in" : "query",
          "description" : "Customer GUID",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerByEmail" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer by email",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "Email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerBySystemName" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer by system role",
        "parameters" : [ {
          "name" : "systemName",
          "in" : "query",
          "description" : "System name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerByUsername" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer by username",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "Username",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/ResetCheckoutData/{customerId}/{storeId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Reset data required for checkout",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "clearCouponCodes",
          "in" : "query",
          "description" : "A value indicating whether to clear coupon code",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "clearCheckoutAttributes",
          "in" : "query",
          "description" : "A value indicating whether to clear selected checkout attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "clearRewardPoints",
          "in" : "query",
          "description" : "A value indicating whether to clear \"Use reward points\" flag",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "clearShippingMethod",
          "in" : "query",
          "description" : "A value indicating whether to clear selected shipping method",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "clearPaymentMethod",
          "in" : "query",
          "description" : "A value indicating whether to clear selected payment method",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/DeleteGuestCustomers/onlyWithoutShoppingCart" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete guest customer records",
        "parameters" : [ {
          "name" : "createdFromUtc",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "onlyWithoutShoppingCart",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerDefaultTaxDisplayType/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets a default tax display type (if configured)",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerFullName/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get full name",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/FormatUsername/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Formats the customer name",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Source",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "stripTooLong",
          "in" : "query",
          "description" : "Strip too long customer name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "maxLength",
          "in" : "query",
          "description" : "Maximum customer name length",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/ParseAppliedDiscountCouponCodes/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets coupon codes",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/ApplyDiscountCouponCode/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Adds a coupon code",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "couponCode",
          "in" : "query",
          "description" : "Coupon code",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/RemoveDiscountCouponCode/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Removes a coupon code",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "couponCode",
          "in" : "query",
          "description" : "Coupon code to remove",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/ParseAppliedGiftCardCouponCodes/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets coupon codes",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/ApplyGiftCardCouponCode/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Adds a coupon code",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "couponCode",
          "in" : "query",
          "description" : "Coupon code to remove",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/RemoveGiftCardCouponCode/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Removes a coupon code",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "couponCode",
          "in" : "query",
          "description" : "Coupon code to remove",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Customer" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetById/{id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetAll" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets all customers",
        "parameters" : [ {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "affiliateId",
          "in" : "query",
          "description" : "Affiliate identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "customerRoleIds",
          "in" : "query",
          "description" : "A list of customer role identifiers (separator - ;) to filter by (at least one match); pass null or empty list in order to load all customers;",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email; null to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "Username; null to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "First name; null to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "Last name; null to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dayOfBirth",
          "in" : "query",
          "description" : "Day of birth; 0 to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "monthOfBirth",
          "in" : "query",
          "description" : "Month of birth; 0 to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "company",
          "in" : "query",
          "description" : "Company; null to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phone",
          "in" : "query",
          "description" : "Phone; null to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zipPostalCode",
          "in" : "query",
          "description" : "Phone; null to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ipAddress",
          "in" : "query",
          "description" : "IP address; null to load all customers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "getOnlyTotalCount",
          "in" : "query",
          "description" : "A value in indicating whether you want to load only total number of records. Set to \"true\" if you don't want to load data from database",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerCustomerDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/Create" : {
      "post" : {
        "tags" : [ "Customer" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/Update" : {
      "put" : {
        "tags" : [ "Customer" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetAddressesByCustomerId/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets a list of addresses mapped to customer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerAddress/{customerId}/{addressId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets a address mapped to customer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addressId",
          "in" : "path",
          "description" : "Address identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerBillingAddress/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets a customer billing address",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/GetCustomerShippingAddress/{customerId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Gets a customer shipping address",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/RemoveCustomerAddress/{customerId}/{addressId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Remove a customer-address mapping record",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addressId",
          "in" : "path",
          "description" : "Address identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Customer/InsertCustomerAddress/{customerId}/{addressId}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Inserts a customer-address mapping record",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addressId",
          "in" : "path",
          "description" : "Address identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttribute/Delete/{id}" : {
      "delete" : {
        "tags" : [ "CustomerAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttribute/GetById/{id}" : {
      "get" : {
        "tags" : [ "CustomerAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerAttributeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttribute/GetAll" : {
      "post" : {
        "tags" : [ "CustomerAttribute" ],
        "summary" : "Gets all customer attributes",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttribute/Create" : {
      "post" : {
        "tags" : [ "CustomerAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttribute/Update" : {
      "put" : {
        "tags" : [ "CustomerAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeFormatter/FormatAttributes" : {
      "post" : {
        "tags" : [ "CustomerAttributeFormatter" ],
        "summary" : "Formats attributes",
        "parameters" : [ {
          "name" : "separator",
          "in" : "query",
          "description" : "Separator",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "<br />"
          }
        }, {
          "name" : "htmlEncode",
          "in" : "query",
          "description" : "A value indicating whether to encode (HTML) values",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeParser/ParseCustomerAttributes" : {
      "post" : {
        "tags" : [ "CustomerAttributeParser" ],
        "summary" : "Gets selected customer attributes",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeParser/ParseCustomerAttributeValues" : {
      "post" : {
        "tags" : [ "CustomerAttributeParser" ],
        "summary" : "Get customer attribute values",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeParser/ParseValues/{attributeId}" : {
      "post" : {
        "tags" : [ "CustomerAttributeParser" ],
        "summary" : "Gets selected customer attribute value",
        "parameters" : [ {
          "name" : "attributeId",
          "in" : "path",
          "description" : "Customer attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeParser/AddCustomerAttribute/{customerAttributeId}" : {
      "post" : {
        "tags" : [ "CustomerAttributeParser" ],
        "summary" : "Adds an attribute",
        "parameters" : [ {
          "name" : "customerAttributeId",
          "in" : "path",
          "description" : "Customer attribute",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Value",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeParser/GetAttributeWarnings" : {
      "post" : {
        "tags" : [ "CustomerAttributeParser" ],
        "summary" : "Validates customer attributes",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeValue/Delete/{id}" : {
      "delete" : {
        "tags" : [ "CustomerAttributeValue" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeValue/GetById/{id}" : {
      "get" : {
        "tags" : [ "CustomerAttributeValue" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerAttributeValueDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeValue/GetAll/{attributeId}" : {
      "get" : {
        "tags" : [ "CustomerAttributeValue" ],
        "summary" : "Gets customer attribute values by customer attribute identifier",
        "parameters" : [ {
          "name" : "attributeId",
          "in" : "path",
          "description" : "The customer attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeValue/Create" : {
      "post" : {
        "tags" : [ "CustomerAttributeValue" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerAttributeValueDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerAttributeValue/Update" : {
      "put" : {
        "tags" : [ "CustomerAttributeValue" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerPassword/GetCurrentPassword/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerPassword" ],
        "summary" : "Get current customer password",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPasswordDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerPassword/IsPasswordRecoveryTokenValid/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerPassword" ],
        "summary" : "Check whether password recovery token is valid",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "token",
          "in" : "query",
          "description" : "Token to validate",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerPassword/IsPasswordRecoveryLinkExpired/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerPassword" ],
        "summary" : "Check whether password recovery link is expired",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerPassword/IsPasswordExpired/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerPassword" ],
        "summary" : "Check whether customer password is expired",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerPassword/GetAll" : {
      "get" : {
        "tags" : [ "CustomerPassword" ],
        "summary" : "Gets customer passwords",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "passwordFormat",
          "in" : "query",
          "description" : "Password format; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PasswordFormat"
          }
        }, {
          "name" : "passwordsToReturn",
          "in" : "query",
          "description" : "Number of returning passwords; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerPasswordDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerPassword/Create" : {
      "post" : {
        "tags" : [ "CustomerPassword" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPasswordDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPasswordDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPasswordDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPasswordDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPasswordDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerPassword/Update" : {
      "put" : {
        "tags" : [ "CustomerPassword" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPasswordDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPasswordDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPasswordDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPasswordDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRegistration/ValidateCustomer" : {
      "get" : {
        "tags" : [ "CustomerRegistration" ],
        "summary" : "Validate customer",
        "parameters" : [ {
          "name" : "usernameOrEmail",
          "in" : "query",
          "description" : "Username or email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "Password",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRegistration/RegisterCustomer/{storeId}/{customerId}" : {
      "post" : {
        "tags" : [ "CustomerRegistration" ],
        "summary" : "Register customer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "Username",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "Password",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "passwordFormat",
          "in" : "query",
          "description" : "Password format",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PasswordFormat"
          }
        }, {
          "name" : "isApproved",
          "in" : "query",
          "description" : "Is approved",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRegistrationResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRegistration/ChangePassword" : {
      "put" : {
        "tags" : [ "CustomerRegistration" ],
        "summary" : "Change password",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "Email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validateRequest",
          "in" : "query",
          "description" : "A value indicating whether we should validate request",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "passwordFormat",
          "in" : "query",
          "description" : "Password format",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PasswordFormat"
          }
        }, {
          "name" : "newPassword",
          "in" : "query",
          "description" : "New password",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oldPassword",
          "in" : "query",
          "description" : "Old password",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hashedPasswordFormat",
          "in" : "query",
          "description" : "Hashed password format (e.g. SHA1, SHA512)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChangePasswordResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRegistration/SetEmail/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRegistration" ],
        "summary" : "Sets a user email",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "newEmail",
          "in" : "query",
          "description" : "New email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requireValidation",
          "in" : "query",
          "description" : "Require validation of new email address",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRegistration/SetUsername/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRegistration" ],
        "summary" : "Sets a customer username",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "newUsername",
          "in" : "query",
          "description" : "New Username",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerReport/GetRegisteredCustomersReport" : {
      "get" : {
        "tags" : [ "CustomerReport" ],
        "summary" : "Gets a report of customers registered in the last days",
        "parameters" : [ {
          "name" : "days",
          "in" : "query",
          "description" : "Customers registered in the last days",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerReport/GetBestCustomersReport" : {
      "get" : {
        "tags" : [ "CustomerReport" ],
        "summary" : "Get best customers",
        "parameters" : [ {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Order created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Order created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "orderStatus",
          "in" : "query",
          "description" : "Order status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/OrderStatus"
          }
        }, {
          "name" : "paymentStatus",
          "in" : "query",
          "description" : "Order payment status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaymentStatus"
          }
        }, {
          "name" : "shippingStatus",
          "in" : "query",
          "description" : "Order shipment status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShippingStatus"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "1 - order by order total, 2 - order by number of orders",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/OrderByEnum"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 214748364
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BestCustomerReportLineBestCustomerReportLineDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/AddCustomerRoleMapping" : {
      "post" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Add a customer-customer role mapping",
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerCustomerRoleMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerCustomerRoleMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerCustomerRoleMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerCustomerRoleMappingDto"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/RemoveCustomerRoleMapping/{customerId}/{roleId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Remove a customer-customer role mapping",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "Customer role Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/GetCustomerRoleIds/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Get customer role identifiers",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to load hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/GetCustomerRoles/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets list of customer roles",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to load hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerRoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/IsInCustomerRole/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets a value indicating whether customer is in a certain customer role",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerRoleSystemName",
          "in" : "query",
          "description" : "Customer role system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "onlyActiveCustomerRoles",
          "in" : "query",
          "description" : "A value indicating whether we should look only in active customer roles",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/IsAdmin/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets a value indicating whether customer is administrator",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "onlyActive",
          "in" : "query",
          "description" : "A value indicating whether we should look only in active customer roles",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/IsForumModerator/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets a value indicating whether customer is a forum moderator",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "onlyActive",
          "in" : "query",
          "description" : "A value indicating whether we should look only in active customer roles",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/IsRegistered/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets a value indicating whether customer is registered",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "onlyActive",
          "in" : "query",
          "description" : "A value indicating whether we should look only in active customer roles",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/IsGuest/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets a value indicating whether customer is guest",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "onlyActive",
          "in" : "query",
          "description" : "A value indicating whether we should look only in active customer roles",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/IsVendor/{customerId}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets a value indicating whether customer is vendor",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "onlyActive",
          "in" : "query",
          "description" : "A value indicating whether we should look only in active customer roles",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/Delete/{id}" : {
      "delete" : {
        "tags" : [ "CustomerRole" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/GetById/{id}" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRoleDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/GetCustomerRoleBySystemName" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets a customer role",
        "parameters" : [ {
          "name" : "systemName",
          "in" : "query",
          "description" : "Customer role system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRoleDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/GetAll" : {
      "get" : {
        "tags" : [ "CustomerRole" ],
        "summary" : "Gets all customer roles",
        "parameters" : [ {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRoleCustomerRoleDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/Create" : {
      "post" : {
        "tags" : [ "CustomerRole" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRoleDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRoleDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRoleDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRoleDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRoleDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/CustomerRole/Update" : {
      "put" : {
        "tags" : [ "CustomerRole" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRoleDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRoleDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRoleDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRoleDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DeliveryDate/GetAll" : {
      "get" : {
        "tags" : [ "DeliveryDate" ],
        "summary" : "Get all delivery dates",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeliveryDateDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DeliveryDate/GetById/{id}" : {
      "get" : {
        "tags" : [ "DeliveryDate" ],
        "summary" : "Get a delivery date",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The delivery date identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeliveryDateDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DeliveryDate/Create" : {
      "post" : {
        "tags" : [ "DeliveryDate" ],
        "summary" : "Create a delivery date",
        "requestBody" : {
          "description" : "Delivery date Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryDateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryDateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryDateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryDateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeliveryDateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DeliveryDate/Update" : {
      "put" : {
        "tags" : [ "DeliveryDate" ],
        "summary" : "Update a delivery date",
        "requestBody" : {
          "description" : "Delivery date Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryDateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryDateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryDateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryDateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DeliveryDate/Delete/{id}" : {
      "delete" : {
        "tags" : [ "DeliveryDate" ],
        "summary" : "Delete a delivery date",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Delivery date identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Discount/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Discount" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Discount/GetById/{id}" : {
      "get" : {
        "tags" : [ "Discount" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Discount/GetAll" : {
      "get" : {
        "tags" : [ "Discount" ],
        "summary" : "Gets all discounts",
        "parameters" : [ {
          "name" : "discountType",
          "in" : "query",
          "description" : "Discount type; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/DiscountType"
          }
        }, {
          "name" : "couponCode",
          "in" : "query",
          "description" : "Coupon code to find (exact match); pass null or empty to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "discountName",
          "in" : "query",
          "description" : "Discount name; pass null or empty to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show expired and not started discounts",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "startDateUtc",
          "in" : "query",
          "description" : "Discount start date; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDateUtc",
          "in" : "query",
          "description" : "Discount end date; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiscountDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Discount/Create" : {
      "post" : {
        "tags" : [ "Discount" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Discount/Update" : {
      "put" : {
        "tags" : [ "Discount" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Discount/ValidateDiscount/{discountId}/{customerId}" : {
      "get" : {
        "tags" : [ "Discount" ],
        "summary" : "Validate discount",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "couponCodesToValidate",
          "in" : "query",
          "description" : "Coupon codes to validate(separator - ;)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountValidationResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountCategoryMapping/Delete/{id}" : {
      "delete" : {
        "tags" : [ "DiscountCategoryMapping" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountCategoryMapping/GetDiscountAppliedToCategory/{categoryId}/{discountId}" : {
      "get" : {
        "tags" : [ "DiscountCategoryMapping" ],
        "summary" : "Get a discount-category mapping record",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountCategoryMapping/Create" : {
      "post" : {
        "tags" : [ "DiscountCategoryMapping" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountCategoryMapping/ClearDiscountCategoryMapping/{discountId}" : {
      "get" : {
        "tags" : [ "DiscountCategoryMapping" ],
        "summary" : "Clean up category references for a specified discount",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountCategoryMapping/GetAppliedCategoryIds/{discountId}/{customerId}" : {
      "get" : {
        "tags" : [ "DiscountCategoryMapping" ],
        "summary" : "Get category identifiers to which a discount is applied",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountManufacturerMapping/Delete/{id}" : {
      "delete" : {
        "tags" : [ "DiscountManufacturerMapping" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountManufacturerMapping/GetDiscountAppliedToManufacturer/{manufacturerId}/{discountId}" : {
      "get" : {
        "tags" : [ "DiscountManufacturerMapping" ],
        "summary" : "Get a discount-manufacturer mapping record",
        "parameters" : [ {
          "name" : "manufacturerId",
          "in" : "path",
          "description" : "Manufacturer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountManufacturerMapping/Create" : {
      "post" : {
        "tags" : [ "DiscountManufacturerMapping" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountManufacturerMapping/ClearDiscountManufacturerMapping/{discountId}" : {
      "get" : {
        "tags" : [ "DiscountManufacturerMapping" ],
        "summary" : "Clean up manufacturer references for a specified discount",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountManufacturerMapping/GetAppliedManufacturerIds/{discountId}/{customerId}" : {
      "get" : {
        "tags" : [ "DiscountManufacturerMapping" ],
        "summary" : "Get manufacturer identifiers to which a discount is applied",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountRequirement/Delete/{id}" : {
      "delete" : {
        "tags" : [ "DiscountRequirement" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "recursively",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountRequirement/GetById/{id}" : {
      "get" : {
        "tags" : [ "DiscountRequirement" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountRequirementDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountRequirement/GetDiscountRequirementsByParent/{discountRequirementId}" : {
      "get" : {
        "tags" : [ "DiscountRequirement" ],
        "summary" : "Gets child discount requirements",
        "parameters" : [ {
          "name" : "discountRequirementId",
          "in" : "path",
          "description" : "Parent discount requirement Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiscountRequirementDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountRequirement/GetAll" : {
      "get" : {
        "tags" : [ "DiscountRequirement" ],
        "summary" : "Get all discount requirements",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "query",
          "description" : "Discount identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "topLevelOnly",
          "in" : "query",
          "description" : "Whether to load top-level requirements only (without parent identifier)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiscountRequirementDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountRequirement/Create" : {
      "post" : {
        "tags" : [ "DiscountRequirement" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountRequirementDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountRequirementDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountRequirementDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountRequirementDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountRequirementDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountRequirement/Update" : {
      "put" : {
        "tags" : [ "DiscountRequirement" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountRequirementDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountRequirementDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountRequirementDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountRequirementDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountUsageHistory/Delete/{id}" : {
      "delete" : {
        "tags" : [ "DiscountUsageHistory" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountUsageHistory/GetById/{id}" : {
      "get" : {
        "tags" : [ "DiscountUsageHistory" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountUsageHistoryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountUsageHistory/GetAll" : {
      "get" : {
        "tags" : [ "DiscountUsageHistory" ],
        "summary" : "Gets all discount usage history records",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "query",
          "description" : "Discount identifier; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "query",
          "description" : "Order identifier; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountUsageHistoryDiscountUsageHistoryDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/DiscountUsageHistory/Create" : {
      "post" : {
        "tags" : [ "DiscountUsageHistory" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountUsageHistoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountUsageHistoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountUsageHistoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountUsageHistoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountUsageHistoryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Download/GetById/{id}" : {
      "get" : {
        "tags" : [ "Download" ],
        "summary" : "Gets a download by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The download identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DownloadDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Download/GetByGuid" : {
      "get" : {
        "tags" : [ "Download" ],
        "summary" : "Gets a download by GUID",
        "parameters" : [ {
          "name" : "guid",
          "in" : "query",
          "description" : "The download GUID",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DownloadDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Download/Create" : {
      "post" : {
        "tags" : [ "Download" ],
        "summary" : "Create a download",
        "requestBody" : {
          "description" : "Download Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DownloadDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DownloadDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DownloadDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DownloadDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DownloadDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Download/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Download" ],
        "summary" : "Delete a download",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Download identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/EmailAccount/Create" : {
      "post" : {
        "tags" : [ "EmailAccount" ],
        "summary" : "Create a email account",
        "requestBody" : {
          "description" : "Email account Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailAccountDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/EmailAccount/Update" : {
      "put" : {
        "tags" : [ "EmailAccount" ],
        "summary" : "Update a email account",
        "requestBody" : {
          "description" : "Email account Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailAccountDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailAccountDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailAccountDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailAccountDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/EmailAccount/Delete/{id}" : {
      "delete" : {
        "tags" : [ "EmailAccount" ],
        "summary" : "Delete a email account",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Email account identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/EmailAccount/GetById/{id}" : {
      "get" : {
        "tags" : [ "EmailAccount" ],
        "summary" : "Gets a email account by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The email account identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailAccountDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/EmailAccount/GetAll" : {
      "get" : {
        "tags" : [ "EmailAccount" ],
        "summary" : "Gets all email accounts",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EmailAccountDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Forum" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/GetById/{id}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/GetAll/{forumGroupId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Gets forums by group identifier",
        "parameters" : [ {
          "name" : "forumGroupId",
          "in" : "path",
          "description" : "The forum group identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ForumDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/Create" : {
      "post" : {
        "tags" : [ "Forum" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/Update" : {
      "put" : {
        "tags" : [ "Forum" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToCreateTopic/{customerId}/{forumId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to create new topics",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forumId",
          "in" : "path",
          "description" : "Forum Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToEditTopic/{customerId}/{topicId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to edit topic",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "topicId",
          "in" : "path",
          "description" : "Topic Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToMoveTopic/{customerId}/{topicId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to move topic",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "topicId",
          "in" : "path",
          "description" : "Topic Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToDeleteTopic/{customerId}/{topicId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to delete topic",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "topicId",
          "in" : "path",
          "description" : "Topic Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToCreatePost/{customerId}/{topicId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to create new post",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "topicId",
          "in" : "path",
          "description" : "Topic Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToEditPost/{customerId}/{postId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to edit post",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "Topic post Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToDeletePost/{customerId}/{postId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to delete post",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "Topic post Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToSetTopicPriority/{customerId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to set topic priority",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Forum/IsCustomerAllowedToSubscribe/{customerId}" : {
      "get" : {
        "tags" : [ "Forum" ],
        "summary" : "Check whether customer is allowed to watch topics",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumGroup/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ForumGroup" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumGroup/GetById/{id}" : {
      "get" : {
        "tags" : [ "ForumGroup" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumGroupDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumGroup/GetAll" : {
      "get" : {
        "tags" : [ "ForumGroup" ],
        "summary" : "Gets all forum groups",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumGroupForumGroupDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumGroup/Create" : {
      "post" : {
        "tags" : [ "ForumGroup" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumGroupDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumGroupDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumGroupDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumGroupDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumGroupDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumGroup/Update" : {
      "put" : {
        "tags" : [ "ForumGroup" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumGroupDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumGroupDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumGroupDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumGroupDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPost/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ForumPost" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPost/GetById/{id}" : {
      "get" : {
        "tags" : [ "ForumPost" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumPostDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPost/GetAll" : {
      "get" : {
        "tags" : [ "ForumPost" ],
        "summary" : "Gets all forum posts",
        "parameters" : [ {
          "name" : "forumTopicId",
          "in" : "query",
          "description" : "The forum topic identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "The customer identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Keywords",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "ascSort",
          "in" : "query",
          "description" : "Sort order",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumPostForumPostDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPost/Create" : {
      "post" : {
        "tags" : [ "ForumPost" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumPostDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPost/Update" : {
      "put" : {
        "tags" : [ "ForumPost" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPostVote/GetPostVote/{postId}/{customerId}" : {
      "get" : {
        "tags" : [ "ForumPostVote" ],
        "summary" : "Get a post vote",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "Post identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumPostVoteDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPostVote/GetNumberOfPostVotes/{customerId}" : {
      "get" : {
        "tags" : [ "ForumPostVote" ],
        "summary" : "Get post vote made since the parameter date",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "сreatedFromUtc",
          "in" : "query",
          "description" : "Date",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPostVote/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ForumPostVote" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumPostVote/Create" : {
      "post" : {
        "tags" : [ "ForumPostVote" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostVoteDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostVoteDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostVoteDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumPostVoteDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumPostVoteDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumSubscription/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ForumSubscription" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumSubscription/GetById/{id}" : {
      "get" : {
        "tags" : [ "ForumSubscription" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumSubscriptionDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumSubscription/GetAll" : {
      "get" : {
        "tags" : [ "ForumSubscription" ],
        "summary" : "Gets forum subscriptions",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "The customer identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "forumId",
          "in" : "query",
          "description" : "The forum identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "topicId",
          "in" : "query",
          "description" : "The topic identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumSubscriptionForumSubscriptionDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumSubscription/Create" : {
      "post" : {
        "tags" : [ "ForumSubscription" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumSubscriptionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumSubscriptionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumSubscriptionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumSubscriptionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumSubscriptionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumTopic/MoveTopic/{forumTopicId}/{newForumId}" : {
      "get" : {
        "tags" : [ "ForumTopic" ],
        "summary" : "Moves the forum topic",
        "parameters" : [ {
          "name" : "forumTopicId",
          "in" : "path",
          "description" : "The forum topic identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "newForumId",
          "in" : "path",
          "description" : "New forum identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumTopicDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumTopic/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ForumTopic" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumTopic/GetById/{id}" : {
      "get" : {
        "tags" : [ "ForumTopic" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumTopicDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumTopic/GetAll" : {
      "get" : {
        "tags" : [ "ForumTopic" ],
        "summary" : "Gets all forum topics",
        "parameters" : [ {
          "name" : "forumId",
          "in" : "query",
          "description" : "The forum identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "The customer identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Keywords",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "searchType",
          "in" : "query",
          "description" : "Search type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ForumSearchType"
          }
        }, {
          "name" : "limitDays",
          "in" : "query",
          "description" : "Limit by the last number days; 0 to load all topics",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumTopicForumTopicDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumTopic/GetActiveTopics" : {
      "get" : {
        "tags" : [ "ForumTopic" ],
        "summary" : "Gets active forum topics",
        "parameters" : [ {
          "name" : "forumId",
          "in" : "query",
          "description" : "The forum identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumTopicForumTopicDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumTopic/Create" : {
      "post" : {
        "tags" : [ "ForumTopic" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumTopicDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumTopicDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumTopicDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumTopicDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForumTopicDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ForumTopic/Update" : {
      "put" : {
        "tags" : [ "ForumTopic" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumTopicDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumTopicDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumTopicDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForumTopicDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Gdpr/PermanentDeleteCustomer/{customerId}" : {
      "delete" : {
        "tags" : [ "Gdpr" ],
        "summary" : "Permanent delete of customer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GdprConsent/GetById/{id}" : {
      "get" : {
        "tags" : [ "GdprConsent" ],
        "summary" : "Gets a GDPR consent by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The GDPR consent identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GdprConsentDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GdprConsent/GetAll" : {
      "get" : {
        "tags" : [ "GdprConsent" ],
        "summary" : "Gets all GDPR consents",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GdprConsentDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GdprConsent/Create" : {
      "post" : {
        "tags" : [ "GdprConsent" ],
        "summary" : "Create a GDPR consent",
        "requestBody" : {
          "description" : "GDPR consent Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GdprConsentDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GdprConsentDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GdprConsentDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GdprConsentDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GdprConsentDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GdprConsent/Update" : {
      "put" : {
        "tags" : [ "GdprConsent" ],
        "summary" : "Update a GDPR consent",
        "requestBody" : {
          "description" : "GDPR consent Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GdprConsentDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GdprConsentDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GdprConsentDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GdprConsentDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GdprConsent/Delete/{id}" : {
      "delete" : {
        "tags" : [ "GdprConsent" ],
        "summary" : "Delete a GDPR consent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "GDPR consent identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GdprConsent/IsConsentAccepted/{consentId}/{customerId}" : {
      "get" : {
        "tags" : [ "GdprConsent" ],
        "summary" : "Gets the latest selected value (a consent is accepted or not by a customer)",
        "parameters" : [ {
          "name" : "consentId",
          "in" : "path",
          "description" : "Consent identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GdprLog/GetAll" : {
      "get" : {
        "tags" : [ "GdprLog" ],
        "summary" : "Get all GDPR log records",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "consentId",
          "in" : "query",
          "description" : "Consent identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "customerInfo",
          "in" : "query",
          "description" : "Customer info (Exact match)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "requestType",
          "in" : "query",
          "description" : "GDPR request type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/GdprRequestType"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GdprLogGdprLogDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GenericAttribute/DeleteAttributes/{ids}" : {
      "get" : {
        "tags" : [ "GenericAttribute" ],
        "summary" : "Deletes an attributes",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of attributes identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GenericAttribute/GetAttributesForEntity/{entityId}" : {
      "get" : {
        "tags" : [ "GenericAttribute" ],
        "summary" : "Get attributes",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "keyGroup",
          "in" : "query",
          "description" : "Key group",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GenericAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GenericAttribute/SaveAttribute/{storeId}/{entityId}" : {
      "post" : {
        "tags" : [ "GenericAttribute" ],
        "summary" : "Save attribute value",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier; pass 0 if this attribute will be available for all stores",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "description" : "Entity type name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "Key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Value",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GenericAttribute/GetAttribute/{entityId}" : {
      "get" : {
        "tags" : [ "GenericAttribute" ],
        "summary" : "Get an attribute of an entity",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "defaultValue",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : { }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GenericAttribute/Delete/{id}" : {
      "delete" : {
        "tags" : [ "GenericAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GenericAttribute/GetById/{id}" : {
      "get" : {
        "tags" : [ "GenericAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericAttributeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GenericAttribute/Create" : {
      "post" : {
        "tags" : [ "GenericAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GenericAttribute/Update" : {
      "put" : {
        "tags" : [ "GenericAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenericAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GeoLookup/LookupCountryIsoCode" : {
      "get" : {
        "tags" : [ "GeoLookup" ],
        "summary" : "Get country ISO code",
        "parameters" : [ {
          "name" : "ipAddress",
          "in" : "query",
          "description" : "IP address",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GeoLookup/LookupCountryName" : {
      "get" : {
        "tags" : [ "GeoLookup" ],
        "summary" : "Get country name",
        "parameters" : [ {
          "name" : "ipAddress",
          "in" : "query",
          "description" : "IP address",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/Delete/{id}" : {
      "delete" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Delete a gift card",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Gift card identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/GetById/{id}" : {
      "get" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Gets a gift card",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Gift card identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GiftCardDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/GetAll" : {
      "get" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Gets all gift cards",
        "parameters" : [ {
          "name" : "purchasedWithOrderId",
          "in" : "query",
          "description" : "Associated order ID; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "usedWithOrderId",
          "in" : "query",
          "description" : "The order ID in which the gift card was used; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "isGiftCardActivated",
          "in" : "query",
          "description" : "Value indicating whether gift card is activated; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "giftCardCouponCode",
          "in" : "query",
          "description" : "Gift card coupon code; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recipientName",
          "in" : "query",
          "description" : "Recipient name; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GiftCardGiftCardDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/Create" : {
      "post" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Create an gift card",
        "requestBody" : {
          "description" : "Gift card Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GiftCardDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/Update" : {
      "put" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Update an gift card",
        "requestBody" : {
          "description" : "Gift card Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/GetByPurchasedWithOrderItemId/{id}" : {
      "get" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Gets gift cards by 'PurchasedWithOrderItemId'",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Purchased with order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GiftCardDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/GetAppliedByCustomer/{id}" : {
      "get" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Get active gift cards that are applied by a customer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GiftCardDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/IsGiftCardValid/{id}" : {
      "get" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Is gift card valid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Gift card identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCard/GetGiftCardRemainingAmount/{id}" : {
      "get" : {
        "tags" : [ "GiftCard" ],
        "summary" : "Gets a gift card remaining amount",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Gift card identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCardUsageHistory/GetGiftCardUsageHistoryByGiftCard/{id}" : {
      "get" : {
        "tags" : [ "GiftCardUsageHistory" ],
        "summary" : "Gets a gift card usage history entries by Gift card",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Gift card identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GiftCardUsageHistoryDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCardUsageHistory/GetGiftCardUsageHistoryByOrder/{id}" : {
      "get" : {
        "tags" : [ "GiftCardUsageHistory" ],
        "summary" : "Gets a gift card usage history entries by order",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GiftCardUsageHistoryDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/GiftCardUsageHistory/Create" : {
      "post" : {
        "tags" : [ "GiftCardUsageHistory" ],
        "summary" : "Create a gift card usage history entry",
        "requestBody" : {
          "description" : "Gift card usage history Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardUsageHistoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardUsageHistoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardUsageHistoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GiftCardUsageHistoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GiftCardUsageHistoryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/ExportResourcesToXml/{id}" : {
      "get" : {
        "tags" : [ "Language" ],
        "summary" : "Export language resources to XML",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/GetLocalizedPermissionName/{permissionRecordId}" : {
      "get" : {
        "tags" : [ "Language" ],
        "summary" : "Get localized permission name",
        "parameters" : [ {
          "name" : "permissionRecordId",
          "in" : "path",
          "description" : "Permission record identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/SaveLocalizedPermissionName/{permissionRecordId}" : {
      "get" : {
        "tags" : [ "Language" ],
        "summary" : "Save localized name of a permission",
        "parameters" : [ {
          "name" : "permissionRecordId",
          "in" : "path",
          "description" : "Permission record identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/DeleteLocalizedPermissionName/{permissionRecordId}" : {
      "delete" : {
        "tags" : [ "Language" ],
        "summary" : "Delete a localized name of a permission",
        "parameters" : [ {
          "name" : "permissionRecordId",
          "in" : "path",
          "description" : "Permission record identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Language" ],
        "summary" : "Delete a language",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/GetAll" : {
      "get" : {
        "tags" : [ "Language" ],
        "summary" : "Gets all languages",
        "parameters" : [ {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Load records allowed only in a specified store; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LanguageDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/GetById/{id}" : {
      "get" : {
        "tags" : [ "Language" ],
        "summary" : "Gets a language",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/Create" : {
      "post" : {
        "tags" : [ "Language" ],
        "summary" : "Create a language",
        "requestBody" : {
          "description" : "Language Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanguageDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanguageDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanguageDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanguageDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguageDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/Update" : {
      "put" : {
        "tags" : [ "Language" ],
        "summary" : "Update a language",
        "requestBody" : {
          "description" : "Language Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanguageDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanguageDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanguageDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LanguageDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Language/GetTwoLetterIsoLanguageName/{id}" : {
      "get" : {
        "tags" : [ "Language" ],
        "summary" : "Get 2 letter ISO language code",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/Delete/{id}" : {
      "delete" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Delete a locale string resource",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Locale string resource identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/GetById/{id}" : {
      "get" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Gets a locale string resource by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The locale string resource identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocaleStringResourceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/GetByName/{languageId}" : {
      "get" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Gets a locale string resource by name",
        "parameters" : [ {
          "name" : "resourceName",
          "in" : "query",
          "description" : "A string representing a resource name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "logIfNotFound",
          "in" : "query",
          "description" : "A value indicating whether to log error if locale string resource is not found",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocaleStringResourceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/Create" : {
      "post" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Create a locale string resource",
        "requestBody" : {
          "description" : "Locale string resource Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleStringResourceDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleStringResourceDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleStringResourceDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleStringResourceDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocaleStringResourceDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/Update" : {
      "put" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Update the locale string resource",
        "requestBody" : {
          "description" : "Locale string resource Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleStringResourceDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleStringResourceDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleStringResourceDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleStringResourceDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/GetAllResourceValues/{languageId}" : {
      "get" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Gets all locale string resources by language identifier",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "loadPublicLocales",
          "in" : "query",
          "description" : "A value indicating whether to load data for the public store only (if \"false\", then for admin area only. If null, then load all locales. We use it for performance optimization of the site startup",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/Int32StringKeyValuePair"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/GetResource/{languageId}" : {
      "get" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Gets a resource string based on the specified ResourceKey property.",
        "parameters" : [ {
          "name" : "resourceKey",
          "in" : "query",
          "description" : "A string representing a ResourceKey.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "logIfNotFound",
          "in" : "query",
          "description" : "A value indicating whether to log error if locale string resource is not found",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "defaultValue",
          "in" : "query",
          "description" : "Default value",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "returnEmptyIfNotFound",
          "in" : "query",
          "description" : "A value indicating whether an empty string will be returned if a resource is not found and default value is set to empty string",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/AddOrUpdateLocaleResource" : {
      "put" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Add a locale resource (if new) or update an existing one",
        "parameters" : [ {
          "name" : "resourceName",
          "in" : "query",
          "description" : "Resource name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceValue",
          "in" : "query",
          "description" : "Resource value",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageCulture",
          "in" : "query",
          "description" : "Language culture code. If null or empty, then a resource will be added for all languages",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/DeleteLocaleResource" : {
      "delete" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Delete a locale resource by name (for all languages)",
        "parameters" : [ {
          "name" : "resourceName",
          "in" : "query",
          "description" : "Resource name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/DeleteLocaleResources" : {
      "delete" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Delete locale resources",
        "parameters" : [ {
          "name" : "resourceNames",
          "in" : "query",
          "description" : "Resource names (Separator - ;)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier; pass null to delete the passed resources from all languages",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocaleStringResource/DeleteLocaleResourcesByPrefix" : {
      "delete" : {
        "tags" : [ "LocaleStringResource" ],
        "summary" : "Delete locale resources by the passed name prefix",
        "parameters" : [ {
          "name" : "resourceNamePrefix",
          "in" : "query",
          "description" : "Resource name prefix",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier; pass null to delete resources by prefix from all languages",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Localization/GetLocalizedEnum" : {
      "get" : {
        "tags" : [ "Localization" ],
        "summary" : "Get localized value of enum",
        "parameters" : [ {
          "name" : "enumeTypeName",
          "in" : "query",
          "description" : "Enume type name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enumValue",
          "in" : "query",
          "description" : "Enum value",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier; pass null to use the current working language",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Localization/GetLocalizedFriendlyName/{languageId}" : {
      "get" : {
        "tags" : [ "Localization" ],
        "summary" : "Get localized friendly name of a plugin",
        "parameters" : [ {
          "name" : "pluginSystemName",
          "in" : "query",
          "description" : "Plugin",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pluginFriendlyName",
          "in" : "query",
          "description" : "Plugin",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "returnDefaultValue",
          "in" : "query",
          "description" : "A value indicating whether to return default value (if localized is not found)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Localization/GetLocalized/{entityId}" : {
      "get" : {
        "tags" : [ "Localization" ],
        "summary" : "Get localized property of an entity",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "localeKeyGroup",
          "in" : "query",
          "description" : "Locale key group",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "localeKey",
          "in" : "query",
          "description" : "Locale key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier; pass null to use the current working language; pass 0 to get standard language value",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ensureTwoPublishedLanguages",
          "in" : "query",
          "description" : "A value indicating whether to ensure that we have at least two published languages; otherwise, load only default value",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocalizedEntity/GetLocalizedValue/{languageId}/{entityId}" : {
      "get" : {
        "tags" : [ "LocalizedEntity" ],
        "summary" : "Find localized value",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "localeKeyGroup",
          "in" : "query",
          "description" : "Locale key group",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "localeKey",
          "in" : "query",
          "description" : "Locale key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/LocalizedEntity/SaveLocalizedValue/{languageId}/{entityId}" : {
      "post" : {
        "tags" : [ "LocalizedEntity" ],
        "summary" : "Save localized value",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "localeKeyGroup",
          "in" : "query",
          "description" : "Locale key group",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "localeKey",
          "in" : "query",
          "description" : "Locale key",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Locale value",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Maintenance/GetAllBackupFiles" : {
      "get" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Gets all backup files",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Maintenance/CreateNewBackupFilePath" : {
      "get" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Creates a path to a new database backup file",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Maintenance/GetBackupPath" : {
      "get" : {
        "tags" : [ "Maintenance" ],
        "summary" : "Returns the path to the backup file",
        "parameters" : [ {
          "name" : "backupFileName",
          "in" : "query",
          "description" : "The name of the backup file",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/GetManufacturersByCategoryId/{categoryId}" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Gets the manufacturers by category identifier",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Cateogry identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ManufacturerDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/GetManufacturersByIds/{ids}" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Gets manufacturers by identifier",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of manufacturer identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ManufacturerDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/GetManufacturersWithAppliedDiscount" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Get manufacturers for which a discount is applied",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "query",
          "description" : "Discount identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to load deleted manufacturers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManufacturerManufacturerDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/GetNotExistingManufacturers/{idsNames}" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Returns a list of names of not existing manufacturers",
        "parameters" : [ {
          "name" : "idsNames",
          "in" : "path",
          "description" : "The names and/or IDs of the manufacturers to check",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/DeleteManufacturers/{ids}" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Delete manufacturers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of manufacturer identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Manufacturer" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/GetById/{id}" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManufacturerDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/GetAll" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Gets all manufacturers",
        "parameters" : [ {
          "name" : "manufacturerName",
          "in" : "query",
          "description" : "Manufacturer name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "overridePublished",
          "in" : "query",
          "description" : "null - process \"Published\" property according to \"showHidden\" parameter\r\ntrue - load only \"Published\" products\r\nfalse - load only \"Unpublished\" products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManufacturerManufacturerDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/Create" : {
      "post" : {
        "tags" : [ "Manufacturer" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManufacturerDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/Update" : {
      "put" : {
        "tags" : [ "Manufacturer" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/ClearDiscountManufacturerMapping/{discountId}" : {
      "delete" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Clean up manufacturer references for a specified discount",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/DeleteDiscountManufacturerMapping/{mappingId}" : {
      "delete" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Deletes a discount-manufacturer mapping record",
        "parameters" : [ {
          "name" : "mappingId",
          "in" : "path",
          "description" : "Discount-manufacturer mapping Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/GetAppliedManufacturerIds/{discountId}/{customerId}" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Get manufacturer identifiers to which a discount is applied",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/GetDiscountAppliedToManufacturer/{manufacturerId}/{discountId}" : {
      "get" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Get a discount-manufacturer mapping record",
        "parameters" : [ {
          "name" : "manufacturerId",
          "in" : "path",
          "description" : "Manufacturer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountCategoryMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Manufacturer/InsertDiscountManufacturerMapping" : {
      "post" : {
        "tags" : [ "Manufacturer" ],
        "summary" : "Inserts a discount-manufacturer mapping record",
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountManufacturerMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ManufacturerTemplate/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ManufacturerTemplate" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ManufacturerTemplate/GetById/{id}" : {
      "get" : {
        "tags" : [ "ManufacturerTemplate" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManufacturerTemplateDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ManufacturerTemplate/GetAll" : {
      "get" : {
        "tags" : [ "ManufacturerTemplate" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ManufacturerTemplateDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ManufacturerTemplate/Create" : {
      "post" : {
        "tags" : [ "ManufacturerTemplate" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManufacturerTemplateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ManufacturerTemplate/Update" : {
      "put" : {
        "tags" : [ "ManufacturerTemplate" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManufacturerTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/ConvertDimension/{sourceMeasureDimensionId}/{targetMeasureDimensionId}" : {
      "get" : {
        "tags" : [ "MeasureDimension" ],
        "summary" : "Converts dimension",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Value to convert",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "sourceMeasureDimensionId",
          "in" : "path",
          "description" : "Source dimension",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "targetMeasureDimensionId",
          "in" : "path",
          "description" : "Target dimension",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "round",
          "in" : "query",
          "description" : "A value indicating whether a result should be rounded",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/ConvertFromPrimaryMeasureDimension/{measureDimensionId}" : {
      "get" : {
        "tags" : [ "MeasureDimension" ],
        "summary" : "Converts from primary dimension",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Value to convert",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "measureDimensionId",
          "in" : "path",
          "description" : "Target dimension Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/ConvertToPrimaryMeasureDimension/{measureDimensionId}" : {
      "get" : {
        "tags" : [ "MeasureDimension" ],
        "summary" : "Converts to primary measure dimension",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Value to convert",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "measureDimensionId",
          "in" : "path",
          "description" : "Source dimension Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/Delete/{id}" : {
      "delete" : {
        "tags" : [ "MeasureDimension" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/GetById/{id}" : {
      "get" : {
        "tags" : [ "MeasureDimension" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasureDimensionDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/GetBySystemKeyword" : {
      "get" : {
        "tags" : [ "MeasureDimension" ],
        "summary" : "Gets a measure dimension by system keyword",
        "parameters" : [ {
          "name" : "systemKeyword",
          "in" : "query",
          "description" : "The system keyword",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasureDimensionDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/GetAll" : {
      "get" : {
        "tags" : [ "MeasureDimension" ],
        "summary" : "Gets all measure dimensions",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MeasureDimensionDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/Create" : {
      "post" : {
        "tags" : [ "MeasureDimension" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureDimensionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureDimensionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureDimensionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureDimensionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasureDimensionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureDimension/Update" : {
      "put" : {
        "tags" : [ "MeasureDimension" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureDimensionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureDimensionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureDimensionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureDimensionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/GetBySystemKeyword" : {
      "get" : {
        "tags" : [ "MeasureWeight" ],
        "summary" : "Gets a measure weight by system keyword",
        "parameters" : [ {
          "name" : "systemKeyword",
          "in" : "query",
          "description" : "The system keyword",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasureWeightDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/ConvertWeight/{sourceMeasureWeightId}/{targetMeasureWeightId}" : {
      "get" : {
        "tags" : [ "MeasureWeight" ],
        "summary" : "Converts weight",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Value to convert",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "sourceMeasureWeightId",
          "in" : "path",
          "description" : "Source weight",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "targetMeasureWeightId",
          "in" : "path",
          "description" : "Target weight",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "round",
          "in" : "query",
          "description" : "A value indicating whether a result should be rounded",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/ConvertFromPrimaryMeasureWeight/{measureWeightId}" : {
      "get" : {
        "tags" : [ "MeasureWeight" ],
        "summary" : "Converts from primary weight",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Value to convert",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "measureWeightId",
          "in" : "path",
          "description" : "Target weight Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/ConvertToPrimaryMeasureWeight/{measureWeightId}" : {
      "get" : {
        "tags" : [ "MeasureWeight" ],
        "summary" : "Converts to primary measure weight",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Value to convert",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "measureWeightId",
          "in" : "path",
          "description" : "Source weight Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/Delete/{id}" : {
      "delete" : {
        "tags" : [ "MeasureWeight" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/GetById/{id}" : {
      "get" : {
        "tags" : [ "MeasureWeight" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasureWeightDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/GetAll" : {
      "get" : {
        "tags" : [ "MeasureWeight" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MeasureWeightDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/Create" : {
      "post" : {
        "tags" : [ "MeasureWeight" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureWeightDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureWeightDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureWeightDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureWeightDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasureWeightDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MeasureWeight/Update" : {
      "put" : {
        "tags" : [ "MeasureWeight" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureWeightDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureWeightDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureWeightDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeasureWeightDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MessageTemplate/Delete/{id}" : {
      "delete" : {
        "tags" : [ "MessageTemplate" ],
        "summary" : "Delete a message template",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Message template identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MessageTemplate/Create" : {
      "post" : {
        "tags" : [ "MessageTemplate" ],
        "summary" : "Create a message template",
        "requestBody" : {
          "description" : "Message template Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageTemplateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MessageTemplate/Update" : {
      "put" : {
        "tags" : [ "MessageTemplate" ],
        "summary" : "Update a message template",
        "requestBody" : {
          "description" : "Message template Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MessageTemplate/GetById/{id}" : {
      "get" : {
        "tags" : [ "MessageTemplate" ],
        "summary" : "Gets a message template by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The message template identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageTemplateDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MessageTemplate/GetByName" : {
      "get" : {
        "tags" : [ "MessageTemplate" ],
        "summary" : "Gets a message templates by name",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "The message template name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MessageTemplateDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MessageTemplate/GetAll/{storeId}" : {
      "get" : {
        "tags" : [ "MessageTemplate" ],
        "summary" : "Gets all message templates",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Keywords to search body or subject",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MessageTemplateDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/MessageTemplate/Copy" : {
      "post" : {
        "tags" : [ "MessageTemplate" ],
        "summary" : "Create a copy of message template with all depended data",
        "requestBody" : {
          "description" : "Message template Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageTemplateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsComment/GetAll" : {
      "get" : {
        "tags" : [ "NewsComment" ],
        "summary" : "Gets all news comment",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "newsItemId",
          "in" : "query",
          "description" : "News item ID; 0 or null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "approved",
          "in" : "query",
          "description" : "A value indicating whether to content is approved; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fromUtc",
          "in" : "query",
          "description" : "Item creation from; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "toUtc",
          "in" : "query",
          "description" : "Item creation to; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "commentText",
          "in" : "query",
          "description" : "Search comment text; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NewsCommentDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsComment/GetById/{id}" : {
      "get" : {
        "tags" : [ "NewsComment" ],
        "summary" : "Gets a news comment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News comment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsCommentDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsComment/GetByIds/{ids}" : {
      "get" : {
        "tags" : [ "NewsComment" ],
        "summary" : "Get news comments by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of news comment identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NewsCommentDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsComment/Create" : {
      "post" : {
        "tags" : [ "NewsComment" ],
        "summary" : "Create a news comment",
        "requestBody" : {
          "description" : "News comment Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsCommentDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsCommentDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsCommentDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsCommentDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsCommentDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsComment/Update" : {
      "put" : {
        "tags" : [ "NewsComment" ],
        "summary" : "Update a news comment",
        "requestBody" : {
          "description" : "News comment Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsCommentDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsCommentDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsCommentDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsCommentDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsComment/Delete/{id}" : {
      "delete" : {
        "tags" : [ "NewsComment" ],
        "summary" : "Delete a news comment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News comment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsComment/DeleteByIds/{ids}" : {
      "delete" : {
        "tags" : [ "NewsComment" ],
        "summary" : "Deletes a news comments by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of news comment identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsComment/GetNewsCommentsCount/{newsItemId}" : {
      "get" : {
        "tags" : [ "NewsComment" ],
        "summary" : "Get the count of news comments",
        "parameters" : [ {
          "name" : "newsItemId",
          "in" : "path",
          "description" : "News item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "isApproved",
          "in" : "query",
          "description" : "A value indicating whether to count only approved or not approved comments; pass null to get number of all comments",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsItem/GetAll" : {
      "get" : {
        "tags" : [ "NewsItem" ],
        "summary" : "Gets all news items",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "title",
          "in" : "query",
          "description" : "Filter by news item title",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsItemNewsItemDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsItem/GetById/{id}" : {
      "get" : {
        "tags" : [ "NewsItem" ],
        "summary" : "Gets a news",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsItemDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsItem/Create" : {
      "post" : {
        "tags" : [ "NewsItem" ],
        "summary" : "Create a news",
        "requestBody" : {
          "description" : "News item Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsItemDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsItemDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsItemDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsItemDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsItemDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsItem/Update" : {
      "put" : {
        "tags" : [ "NewsItem" ],
        "summary" : "Update a news",
        "requestBody" : {
          "description" : "News item Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsItemDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsItemDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsItemDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsItemDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsItem/Delete/{id}" : {
      "delete" : {
        "tags" : [ "NewsItem" ],
        "summary" : "Delete a news",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsItem/IsNewsAvailable/{newsItemId}" : {
      "get" : {
        "tags" : [ "NewsItem" ],
        "summary" : "Get a value indicating whether a news item is available now (availability dates)",
        "parameters" : [ {
          "name" : "newsItemId",
          "in" : "path",
          "description" : "News item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "dateTime",
          "in" : "query",
          "description" : "Datetime to check; pass null to use current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsLetterSubscription/Create" : {
      "post" : {
        "tags" : [ "NewsLetterSubscription" ],
        "summary" : "Create a newsletter subscription",
        "requestBody" : {
          "description" : "NewsLetter subscription Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsLetterSubscription/Update" : {
      "put" : {
        "tags" : [ "NewsLetterSubscription" ],
        "summary" : "Update a newsletter subscription",
        "requestBody" : {
          "description" : "NewsLetter subscription Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsLetterSubscription/Delete/{id}" : {
      "delete" : {
        "tags" : [ "NewsLetterSubscription" ],
        "summary" : "Delete a newsLetter subscription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "NewsLetter subscription identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsLetterSubscription/GetById/{id}" : {
      "get" : {
        "tags" : [ "NewsLetterSubscription" ],
        "summary" : "Gets a newsletter subscription by newsletter subscription identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The newsletter subscription identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsLetterSubscription/GetByGuid" : {
      "get" : {
        "tags" : [ "NewsLetterSubscription" ],
        "summary" : "Gets a newsletter subscription by newsletter subscription GUID",
        "parameters" : [ {
          "name" : "guid",
          "in" : "query",
          "description" : "The newsletter subscription GUID",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsLetterSubscription/GetByEmailAndStoreId/{storeId}" : {
      "get" : {
        "tags" : [ "NewsLetterSubscription" ],
        "summary" : "Gets a newsletter subscription by newsletter subscription identifier",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "The newsletter subscription email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/NewsLetterSubscription/GetAll" : {
      "get" : {
        "tags" : [ "NewsLetterSubscription" ],
        "summary" : "Gets the newsletter subscription list",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "Email to search or string. Empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier. 0 to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "Value indicating whether subscriber record should be active or not; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "customerRoleId",
          "in" : "query",
          "description" : "Customer role identifier. Used to filter subscribers by customer role. 0 to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewsLetterSubscriptionNewsLetterSubscriptionDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/GetById/{id}" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Gets a order",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/GetByCustomOrderNumber" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Gets a order by custome order number",
        "parameters" : [ {
          "name" : "customOrderNumber",
          "in" : "query",
          "description" : "The custom order number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/GetByOrderItem/{orderItemId}" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Gets a order by order item identifier",
        "parameters" : [ {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "The order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/GetByIds/{ids}" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Get orders by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of order identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrderDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/GetByGuid" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Gets an order by GUID",
        "parameters" : [ {
          "name" : "guid",
          "in" : "query",
          "description" : "The order GUID",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Order" ],
        "summary" : "Delete a order",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/Create" : {
      "post" : {
        "tags" : [ "Order" ],
        "summary" : "Create an order",
        "requestBody" : {
          "description" : "Order Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/Update" : {
      "put" : {
        "tags" : [ "Order" ],
        "summary" : "Update an order",
        "requestBody" : {
          "description" : "Order Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/Search" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Search orders",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; null to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product identifier which was purchased in an order; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "affiliateId",
          "in" : "query",
          "description" : "Affiliate identifier; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "description" : "Warehouse identifier, only orders with products from a specified warehouse will be loaded; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "billingCountryId",
          "in" : "query",
          "description" : "Billing country identifier; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "osIds",
          "in" : "query",
          "description" : "Order status identifiers; null to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "psIds",
          "in" : "query",
          "description" : "Payment status identifiers; null to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ssIds",
          "in" : "query",
          "description" : "Shipping status identifiers; null to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billingPhone",
          "in" : "query",
          "description" : "Billing phone. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billingEmail",
          "in" : "query",
          "description" : "Billing email. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billingLastName",
          "in" : "query",
          "description" : "Billing last name. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "orderNotes",
          "in" : "query",
          "description" : "Search in order notes. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "getOnlyTotalCount",
          "in" : "query",
          "description" : "A value in indicating whether you want to load only total number of records. Set to \"true\" if you don't want to load data from database",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderOrderDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/ParseTaxRates/{orderId}" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Parse tax rates",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "taxRates",
          "in" : "query",
          "description" : "Tax rates",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "number",
                    "format" : "double"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/HasItemsToAddToShipment/{orderId}" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Gets a value indicating whether an order has items to be added to a shipment",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "The order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/HasItemsToShip/{orderId}" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Gets a value indicating whether an order has items to ship",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "The order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Order/HasItemsToDeliver/{orderId}" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Gets a value indicating whether an order has items to deliver",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "The order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/GetById/{id}" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets a order item",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderItemDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/GetProductByOrderItemId/{id}" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets a product of specify order item",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/GetOrderItems/{orderId}" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets a list items of order",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "isNotReturnable",
          "in" : "query",
          "description" : "Value indicating whether this product is returnable; pass null to ignore",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "isShipEnabled",
          "in" : "query",
          "description" : "Value indicating whether the entity is ship enabled; pass null to ignore",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; pass 0 to ignore",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrderItemDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/GetByGuid" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets an order item by GUID",
        "parameters" : [ {
          "name" : "guid",
          "in" : "query",
          "description" : "The order GUID",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderItemDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/GetOrderItemsByCustomer/{customerId}" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets all downloadable order items",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrderItemDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/Delete/{id}" : {
      "delete" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Delete a order item",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/GetTotalNumberOfItemsInAllShipments/{orderItemId}" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets a total number of items in all shipments",
        "parameters" : [ {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "The order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/GetTotalNumberOfItemsCanBeAddedToShipment/{orderItemId}" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets a total number of already items which can be added to new shipments",
        "parameters" : [ {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "The order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/IsDownloadAllowed/{orderItemId}" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets a value indicating whether download is allowed",
        "parameters" : [ {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "The order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/IsLicenseDownloadAllowed/{orderItemId}" : {
      "get" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Gets a value indicating whether license download is allowed",
        "parameters" : [ {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "The order item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/Create" : {
      "post" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Create an order item",
        "requestBody" : {
          "description" : "Order item Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderItemDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderItemDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderItemDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderItemDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderItemDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderItem/Update" : {
      "put" : {
        "tags" : [ "OrderItem" ],
        "summary" : "Update an order item",
        "requestBody" : {
          "description" : "Order item Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderItemDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderItemDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderItemDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderItemDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderNote/GetById/{id}" : {
      "get" : {
        "tags" : [ "OrderNote" ],
        "summary" : "Gets a order note",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order note identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderNoteDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderNote/GetOrderNotesByOrderId/{orderId}" : {
      "get" : {
        "tags" : [ "OrderNote" ],
        "summary" : "Gets a list notes of order",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "displayToCustomer",
          "in" : "query",
          "description" : "Value indicating whether a customer can see a note; pass null to ignore",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrderNoteDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderNote/Delete/{id}" : {
      "delete" : {
        "tags" : [ "OrderNote" ],
        "summary" : "Delete a order note",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order note identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderNote/FormatOrderNoteText/{id}" : {
      "get" : {
        "tags" : [ "OrderNote" ],
        "summary" : "Formats the order note text",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Order note identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderNote/Create" : {
      "post" : {
        "tags" : [ "OrderNote" ],
        "summary" : "Create an order note",
        "requestBody" : {
          "description" : "Order note Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderNoteDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderNoteDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderNoteDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrderNoteDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderNoteDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CheckOrderStatus/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Checks order status",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/DeleteOrder/{orderId}" : {
      "delete" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Deletes an order",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "The order",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanCancelOrder/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether cancel is allowed",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CancelOrder/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Cancels order",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "notifyCustomer",
          "in" : "query",
          "description" : "True to notify customer",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanMarkOrderAsAuthorized/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether order can be marked as authorized",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/MarkAsAuthorized/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Marks order as authorized",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanCapture/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether capture from admin panel is allowed",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/Capture/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Capture an order (from admin panel)",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanMarkOrderAsPaid/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether order can be marked as paid",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/MarkOrderAsPaid/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Marks order as paid",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanRefund/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether refund from admin panel is allowed",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/Refund/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Refunds an order (from admin panel)",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanRefundOffline/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether order can be marked as refunded",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/RefundOffline/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Refunds an order (offline)",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanPartiallyRefund/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether partial refund from admin panel is allowed",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "amountToRefund",
          "in" : "query",
          "description" : "Amount to refund",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/PartiallyRefund/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Partially refunds an order (from admin panel)",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "amountToRefund",
          "in" : "query",
          "description" : "Amount to refund",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanPartiallyRefundOffline/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether order can be marked as partially refunded",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "amountToRefund",
          "in" : "query",
          "description" : "Amount to refund",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/PartiallyRefundOffline/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Partially refunds an order (offline)",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "amountToRefund",
          "in" : "query",
          "description" : "Amount to refund",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanVoid/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether void from admin panel is allowed",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/Void/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Voids order (from admin panel)",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/CanVoidOffline/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether order can be marked as voided",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/VoidOffline/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Voids order (offline)",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/ReOrder/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Place order items in current user shopping cart.",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "The order",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/IsReturnRequestAllowed/{orderId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Check whether return request is allowed",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/PlaceOrder" : {
      "post" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Places an order",
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProcessPaymentRequestDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProcessPaymentRequestDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProcessPaymentRequestDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProcessPaymentRequestDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaceOrderResultDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/UpdateOrderTotals" : {
      "post" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Update order totals",
        "requestBody" : {
          "description" : "Parameters for the updating order",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderParametersDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderParametersDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderParametersDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderParametersDto"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/Ship/{shipmentId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Send a shipment",
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "description" : "Shipment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "notifyCustomer",
          "in" : "query",
          "description" : "True to notify customer",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/Deliver/{shipmentId}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Marks a shipment as delivered",
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "description" : "Shipment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "notifyCustomer",
          "in" : "query",
          "description" : "True to notify customer",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/IsPaymentWorkflowRequired/{ids}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Gets a value indicating whether payment workflow is required",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of Shopping cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "useRewardPoints",
          "in" : "query",
          "description" : "A value indicating reward points should be used; null to detect current choice of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/ValidateMinOrderSubtotalAmount/{ids}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Validate minimum order sub-total amount",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of Shopping cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderProcessing/ValidateMinOrderTotalAmount/{ids}" : {
      "get" : {
        "tags" : [ "OrderProcessing" ],
        "summary" : "Validate minimum order total amount",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of Shopping cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderReport/GetCountryReport" : {
      "get" : {
        "tags" : [ "OrderReport" ],
        "summary" : "Get \"order by country\" report",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "os",
          "in" : "query",
          "description" : "Order status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/OrderStatus"
          }
        }, {
          "name" : "ps",
          "in" : "query",
          "description" : "Payment status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaymentStatus"
          }
        }, {
          "name" : "ss",
          "in" : "query",
          "description" : "Shipping status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShippingStatus"
          }
        }, {
          "name" : "startTimeUtc",
          "in" : "query",
          "description" : "Start date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeUtc",
          "in" : "query",
          "description" : "End date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrderByCountryReportLineResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderReport/GetOrderAverageReportLine" : {
      "get" : {
        "tags" : [ "OrderReport" ],
        "summary" : "Get order average report",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to ignore this parameter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; pass 0 to ignore this parameter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product identifier which was purchased in an order; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "description" : "Warehouse identifier; pass 0 to ignore this parameter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "billingCountryId",
          "in" : "query",
          "description" : "Billing country identifier; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "orderId",
          "in" : "query",
          "description" : "Order identifier; pass 0 to ignore this parameter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osIds",
          "in" : "query",
          "description" : "Order status identifiers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "psIds",
          "in" : "query",
          "description" : "Payment status identifiers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ssIds",
          "in" : "query",
          "description" : "Shipping status identifiers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimeUtc",
          "in" : "query",
          "description" : "Start date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeUtc",
          "in" : "query",
          "description" : "End date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "billingPhone",
          "in" : "query",
          "description" : "Billing phone. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billingEmail",
          "in" : "query",
          "description" : "Billing email. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billingLastName",
          "in" : "query",
          "description" : "Billing last name. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "orderNotes",
          "in" : "query",
          "description" : "Search in order notes. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderAverageReportLineResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderReport/SalesSummaryReport" : {
      "get" : {
        "tags" : [ "OrderReport" ],
        "summary" : "Get sales summary report",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "query",
          "description" : "Category identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "manufacturerId",
          "in" : "query",
          "description" : "Manufacturer identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier (orders placed in a specific store); 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Order created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Order created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "os",
          "in" : "query",
          "description" : "Order status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/OrderStatus"
          }
        }, {
          "name" : "ps",
          "in" : "query",
          "description" : "Order payment status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaymentStatus"
          }
        }, {
          "name" : "billingCountryId",
          "in" : "query",
          "description" : "Billing country identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "groupBy",
          "in" : "query",
          "description" : "0 - group by day, 1 - group by week, 2 - group by total month",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/GroupByOptions"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesSummaryReportLineSalesSummaryReportLineDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderReport/BestSellersReport" : {
      "get" : {
        "tags" : [ "OrderReport" ],
        "summary" : "Get best sellers report",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "query",
          "description" : "Category identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "manufacturerId",
          "in" : "query",
          "description" : "Manufacturer identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier (orders placed in a specific store); 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Order created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Order created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "os",
          "in" : "query",
          "description" : "Order status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/OrderStatus"
          }
        }, {
          "name" : "ps",
          "in" : "query",
          "description" : "Order payment status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaymentStatus"
          }
        }, {
          "name" : "ss",
          "in" : "query",
          "description" : "Shipping status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShippingStatus"
          }
        }, {
          "name" : "billingCountryId",
          "in" : "query",
          "description" : "Billing country identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "1 - order by quantity, 2 - order by total amount",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/OrderByEnum"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BestsellersReportLineBestsellersReportLineDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderReport/BestSellersReportTotalAmount" : {
      "get" : {
        "tags" : [ "OrderReport" ],
        "summary" : "Get best sellers total amount",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "query",
          "description" : "Category identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "manufacturerId",
          "in" : "query",
          "description" : "Manufacturer identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier (orders placed in a specific store); 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Order created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Order created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "os",
          "in" : "query",
          "description" : "Order status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/OrderStatus"
          }
        }, {
          "name" : "ps",
          "in" : "query",
          "description" : "Order payment status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaymentStatus"
          }
        }, {
          "name" : "ss",
          "in" : "query",
          "description" : "Shipping status; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShippingStatus"
          }
        }, {
          "name" : "billingCountryId",
          "in" : "query",
          "description" : "Billing country identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderReport/GetAlsoPurchasedProductsIds/{storeId}/{productId}" : {
      "get" : {
        "tags" : [ "OrderReport" ],
        "summary" : "Get best sellers total amount",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "recordsToReturn",
          "in" : "query",
          "description" : "Records to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5
          }
        }, {
          "name" : "visibleIndividuallyOnly",
          "in" : "query",
          "description" : "A values indicating whether to load only products marked as \"visible individually\"; \"false\" to load all records; \"true\" to load \"visible individually\" only",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderReport/ProductsNeverSold" : {
      "get" : {
        "tags" : [ "OrderReport" ],
        "summary" : "Gets a list of products that were never sold",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier (filter products by a specific vendor); 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier (filter products by a specific store); 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "categoryId",
          "in" : "query",
          "description" : "Category identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "manufacturerId",
          "in" : "query",
          "description" : "Manufacturer identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Order created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Order created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductProductDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderReport/ProfitReport" : {
      "get" : {
        "tags" : [ "OrderReport" ],
        "summary" : "Get profit report",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to ignore this parameter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; pass 0 to ignore this parameter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product identifier which was purchased in an order; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "description" : "Warehouse identifier; pass 0 to ignore this parameter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "billingCountryId",
          "in" : "query",
          "description" : "Billing country identifier; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "orderId",
          "in" : "query",
          "description" : "Order identifier; pass 0 to ignore this parameter",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osIds",
          "in" : "query",
          "description" : "Order status identifiers; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "psIds",
          "in" : "query",
          "description" : "Payment status identifiers; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ssIds",
          "in" : "query",
          "description" : "Shipping status identifiers; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimeUtc",
          "in" : "query",
          "description" : "Start date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeUtc",
          "in" : "query",
          "description" : "End date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "billingPhone",
          "in" : "query",
          "description" : "Billing phone. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billingEmail",
          "in" : "query",
          "description" : "Billing email. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billingLastName",
          "in" : "query",
          "description" : "Billing last name. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "orderNotes",
          "in" : "query",
          "description" : "Search in order notes. Leave empty to load all records.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/GetShoppingCartSubTotal/{cartItemIds}" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Gets shopping cart subtotal",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includingTax",
          "in" : "query",
          "description" : "A value indicating whether calculated price should include tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetShoppingCartSubTotalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/IsFreeShipping/{ids}" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Gets a value indicating whether shipping is free",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Cart ids (Separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subTotal",
          "in" : "query",
          "description" : "Subtotal amount; pass null to calculate subtotal",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/AdjustShippingRate/{cartItemIds}" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Adjust shipping rate (free shipping, additional charges, discounts)",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shippingRate",
          "in" : "query",
          "description" : "Shipping rate to adjust",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "applyToPickupInStore",
          "in" : "query",
          "description" : "Adjust shipping rate to pickup in store shipping option rate",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjustShippingRateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/GetShoppingCartShippingTotal/{cartItemIds}" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Gets shopping cart shipping total",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includingTax",
          "in" : "query",
          "description" : "A value indicating whether calculated price should include tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetShoppingCartShippingTotalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/GetTaxTotal/{cartItemIds}" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Gets tax",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "usePaymentMethodAdditionalFee",
          "in" : "query",
          "description" : "A value indicating whether we should use payment method additional fee when calculating tax",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetTaxTotalTaxRateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/GetShoppingCartTotal/{cartItemIds}" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Gets tax",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "useRewardPoints",
          "in" : "query",
          "description" : "A value indicating reward points should be used; null to detect current choice of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "usePaymentMethodAdditionalFee",
          "in" : "query",
          "description" : "A value indicating whether we should use payment method additional fee when calculating order total",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetShoppingCartTotalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/ConvertRewardPointsToAmount" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Converts existing reward points to amount",
        "parameters" : [ {
          "name" : "rewardPoints",
          "in" : "query",
          "description" : "Reward points",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/CheckMinimumRewardPointsToUseRequirement" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Gets a value indicating whether a customer has minimum amount of reward points to use (if enabled)",
        "parameters" : [ {
          "name" : "rewardPoints",
          "in" : "query",
          "description" : "Reward points to check",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/CalculateApplicableOrderTotalForRewardPoints" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Calculate how order total (maximum amount) for which reward points could be earned/reduced",
        "parameters" : [ {
          "name" : "orderShippingInclTax",
          "in" : "query",
          "description" : "Order shipping (including tax)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "orderTotal",
          "in" : "query",
          "description" : "Order total",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/CalculateRewardPoints/{customerId}" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Calculate how much reward points will be earned/reduced based on certain amount spent",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "amount",
          "in" : "query",
          "description" : "Amount (in primary store currency)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/OrderTotalCalculation/CalculatePaymentAdditionalFee/{cartItemIds}" : {
      "get" : {
        "tags" : [ "OrderTotalCalculation" ],
        "summary" : "Calculate payment method fee",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fee",
          "in" : "query",
          "description" : "Fee value",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "usePercentage",
          "in" : "query",
          "description" : "Is fee amount specified as percentage or fixed value?",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Payment/CanRePostProcessPayment/{orderId}" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Gets a value indicating whether customers can complete a payment after order is placed but not completed (for redirection payment methods)",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Payment/GetAdditionalHandlingFee/{cartItemIds}" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Gets an additional handling fee of a payment method",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Payment/SupportCapture" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Gets a value indicating whether capture is supported by payment method",
        "parameters" : [ {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Payment/SupportPartiallyRefund" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Gets a value indicating whether partial refund is supported by payment method",
        "parameters" : [ {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Payment/SupportRefund" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Gets a value indicating whether refund is supported by payment method",
        "parameters" : [ {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Payment/SupportVoid" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Gets a value indicating whether void is supported by payment method",
        "parameters" : [ {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Payment/GetRecurringPaymentType" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Gets a recurring payment type of payment method",
        "parameters" : [ {
          "name" : "paymentMethodSystemName",
          "in" : "query",
          "description" : "Payment method system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecurringPaymentType"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecord/GetAll" : {
      "get" : {
        "tags" : [ "PermissionRecord" ],
        "summary" : "Gets all permissions",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PermissionRecordDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecord/GetById/{id}" : {
      "get" : {
        "tags" : [ "PermissionRecord" ],
        "summary" : "Gets a permission",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Permission identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionRecordDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecord/Create" : {
      "post" : {
        "tags" : [ "PermissionRecord" ],
        "summary" : "Create a permission",
        "requestBody" : {
          "description" : "Permission Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionRecordDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecord/Update" : {
      "put" : {
        "tags" : [ "PermissionRecord" ],
        "summary" : "Update a permission by Id",
        "requestBody" : {
          "description" : "Permission record Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecord/Delete/{id}" : {
      "delete" : {
        "tags" : [ "PermissionRecord" ],
        "summary" : "Delete a permission",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Permission identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecord/GetActiveSlug/{customerRoleId}" : {
      "get" : {
        "tags" : [ "PermissionRecord" ],
        "summary" : "Authorize permission",
        "parameters" : [ {
          "name" : "systemName",
          "in" : "query",
          "description" : "Permission record system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerRoleId",
          "in" : "path",
          "description" : "Customer role identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecordCustomerRoleMapping/GetById/{id}" : {
      "get" : {
        "tags" : [ "PermissionRecordCustomerRoleMapping" ],
        "summary" : "Gets a permission record-customer role mapping",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Permission identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PermissionRecordCustomerRoleMappingDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecordCustomerRoleMapping/Create" : {
      "post" : {
        "tags" : [ "PermissionRecordCustomerRoleMapping" ],
        "summary" : "Create a permission record-customer role mapping",
        "requestBody" : {
          "description" : "Permission record-customer role mapping Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordCustomerRoleMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordCustomerRoleMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordCustomerRoleMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermissionRecordCustomerRoleMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionRecordCustomerRoleMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PermissionRecordCustomerRoleMapping/Delete/{permissionId}/{customerRoleId}" : {
      "delete" : {
        "tags" : [ "PermissionRecordCustomerRoleMapping" ],
        "summary" : "Delete a permission record-customer role mapping",
        "parameters" : [ {
          "name" : "permissionId",
          "in" : "path",
          "description" : "Permission identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerRoleId",
          "in" : "path",
          "description" : "Customer role identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/GetById/{id}" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Gets a picture by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The picture identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PictureDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Picture" ],
        "summary" : "Delete a picture",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Picture identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/GetPictures" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Gets a collection of pictures",
        "parameters" : [ {
          "name" : "virtualPath",
          "in" : "query",
          "description" : "Virtual path",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Current page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Items on each page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PicturePictureDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/GetByProductId/{id}" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Gets a picture by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "recordsToReturn",
          "in" : "query",
          "description" : "Number of records to return. 0 if you want to get all items",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PictureDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/InsertPicture" : {
      "put" : {
        "tags" : [ "Picture" ],
        "summary" : "Inserts a picture",
        "parameters" : [ {
          "name" : "mimeType",
          "in" : "query",
          "description" : "The picture MIME type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "seoFilename",
          "in" : "query",
          "description" : "The SEO filename",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "altAttribute",
          "in" : "query",
          "description" : "\"alt\" attribute for \"img\" HTML element",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "titleAttribute",
          "in" : "query",
          "description" : "\"title\" attribute for \"img\" HTML element",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isNew",
          "in" : "query",
          "description" : "A value indicating whether the picture is new",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "validateBinary",
          "in" : "query",
          "description" : "A value indicating whether to validated provided picture binary",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "The picture binary",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PictureDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/UpdatePicture/{pictureId}" : {
      "put" : {
        "tags" : [ "Picture" ],
        "summary" : "Update a picture",
        "parameters" : [ {
          "name" : "pictureId",
          "in" : "path",
          "description" : "The picture identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "mimeType",
          "in" : "query",
          "description" : "The picture MIME type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "seoFilename",
          "in" : "query",
          "description" : "The SEO filename",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "altAttribute",
          "in" : "query",
          "description" : "\"alt\" attribute for \"img\" HTML element",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "titleAttribute",
          "in" : "query",
          "description" : "\"title\" attribute for \"img\" HTML element",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isNew",
          "in" : "query",
          "description" : "A value indicating whether the picture is new",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "validateBinary",
          "in" : "query",
          "description" : "A value indicating whether to validated provided picture binary",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "The picture binary",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PictureDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/Update" : {
      "put" : {
        "tags" : [ "Picture" ],
        "summary" : "Update a picture",
        "requestBody" : {
          "description" : "Picture Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PictureDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PictureDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PictureDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PictureDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/SetSeoFilename/{pictureId}" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Updates a SEO filename of a picture",
        "parameters" : [ {
          "name" : "pictureId",
          "in" : "path",
          "description" : "The picture identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "seoFilename",
          "in" : "query",
          "description" : "The SEO filename",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PictureDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/GetProductPicture/{productId}" : {
      "post" : {
        "tags" : [ "Picture" ],
        "summary" : "Get product picture (for shopping cart and order details pages)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PictureDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/LoadPictureBinary/{pictureId}" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Gets the loaded picture binary depending on picture storage settings",
        "parameters" : [ {
          "name" : "pictureId",
          "in" : "path",
          "description" : "The picture identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/GetPictureSeName" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Get picture SEO friendly name",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/GetDefaultPictureUrl" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Gets the default picture URL",
        "parameters" : [ {
          "name" : "targetSize",
          "in" : "query",
          "description" : "The target picture size (longest side)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "defaultPictureType",
          "in" : "query",
          "description" : "Default picture type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PictureType"
          }
        }, {
          "name" : "storeLocation",
          "in" : "query",
          "description" : "Store location URL; null to use determine the current store location automatically",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/GetPictureUrl/{pictureId}" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Get a picture URL",
        "parameters" : [ {
          "name" : "pictureId",
          "in" : "path",
          "description" : "Reference instance of Picture",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "targetSize",
          "in" : "query",
          "description" : "The target picture size (longest side)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showDefaultPicture",
          "in" : "query",
          "description" : "A value indicating whether the default picture is shown",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "storeLocation",
          "in" : "query",
          "description" : "Store location URL; null to use determine the current store location automatically",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "defaultPictureType",
          "in" : "query",
          "description" : "Default picture type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PictureType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPictureUrlResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Picture/GetThumbLocalPath/{pictureId}" : {
      "get" : {
        "tags" : [ "Picture" ],
        "summary" : "Get a picture local path",
        "parameters" : [ {
          "name" : "pictureId",
          "in" : "path",
          "description" : "Picture identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "targetSize",
          "in" : "query",
          "description" : "The target picture size (longest side)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showDefaultPicture",
          "in" : "query",
          "description" : "A value indicating whether the default picture is shown",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PictureBinary/GetByPictureId/{id}" : {
      "get" : {
        "tags" : [ "PictureBinary" ],
        "summary" : "Gets a product picture binary by picture identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The picture identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PictureBinaryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PictureBinary/ValidatePicture" : {
      "post" : {
        "tags" : [ "PictureBinary" ],
        "summary" : "Validates input picture dimensions",
        "parameters" : [ {
          "name" : "mimeType",
          "in" : "query",
          "description" : "The picture MIME type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The picture binary",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Plugin/GetPluginDescriptors" : {
      "get" : {
        "tags" : [ "Plugin" ],
        "summary" : "Get plugin descriptors",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Filter by  customer; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Filter by store; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "Filter by plugin group; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dependsOnSystemName",
          "in" : "query",
          "description" : "System name of the plugin to define dependencies",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "friendlyName",
          "in" : "query",
          "description" : "Filter by plugin friendly name; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Filter by plugin author; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PluginDescriptorDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Poll/GetAll/{storeId}" : {
      "get" : {
        "tags" : [ "Poll" ],
        "summary" : "Gets all polls",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "description" : "The store identifier; pass 0 to load all records",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "Whether to show hidden records (not published, not started and expired)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "loadShownOnHomepageOnly",
          "in" : "query",
          "description" : "Retrieve only shown on home page polls",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "systemKeyword",
          "in" : "query",
          "description" : "The poll system keyword; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PollPollDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Poll/GetById/{id}" : {
      "get" : {
        "tags" : [ "Poll" ],
        "summary" : "Gets a poll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PollDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Poll/Create" : {
      "post" : {
        "tags" : [ "Poll" ],
        "summary" : "Create a poll",
        "requestBody" : {
          "description" : "Poll Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PollDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Poll/Update" : {
      "put" : {
        "tags" : [ "Poll" ],
        "summary" : "Update a poll",
        "requestBody" : {
          "description" : "Poll Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Poll/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Poll" ],
        "summary" : "Delete a poll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PollAnswer/GetById/{id}" : {
      "get" : {
        "tags" : [ "PollAnswer" ],
        "summary" : "Gets a poll answer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll answer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PollAnswerDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PollAnswer/GetByPollId/{id}" : {
      "get" : {
        "tags" : [ "PollAnswer" ],
        "summary" : "Gets a poll answer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PollAnswerPollAnswerDtoPagedListDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PollAnswer/Create" : {
      "post" : {
        "tags" : [ "PollAnswer" ],
        "summary" : "Create a poll answer",
        "requestBody" : {
          "description" : "Poll answer Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollAnswerDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollAnswerDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollAnswerDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollAnswerDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PollAnswerDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PollAnswer/Update" : {
      "put" : {
        "tags" : [ "PollAnswer" ],
        "summary" : "Update a poll answer",
        "requestBody" : {
          "description" : "Poll answer Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollAnswerDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollAnswerDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollAnswerDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollAnswerDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PollAnswer/Delete/{id}" : {
      "delete" : {
        "tags" : [ "PollAnswer" ],
        "summary" : "Delete a poll answer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll answer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PollVotingRecord/GetByPollAnswerId/{id}" : {
      "get" : {
        "tags" : [ "PollVotingRecord" ],
        "summary" : "Gets a poll voting records by parent answer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll answer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PollVotingRecordPollVotingRecordDtoPagedListDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PollVotingRecord/Create" : {
      "post" : {
        "tags" : [ "PollVotingRecord" ],
        "summary" : "Create a poll voting record",
        "requestBody" : {
          "description" : "Poll voting record Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollVotingRecordDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollVotingRecordDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollVotingRecordDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PollVotingRecordDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PollAnswerDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PollVotingRecord/AlreadyVoted/{pollId}/{customerId}" : {
      "get" : {
        "tags" : [ "PollVotingRecord" ],
        "summary" : "Gets a value indicating whether customer already voted for this poll",
        "parameters" : [ {
          "name" : "pollId",
          "in" : "path",
          "description" : "Poll identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PredefinedProductAttributeValue/Delete/{id}" : {
      "delete" : {
        "tags" : [ "PredefinedProductAttributeValue" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PredefinedProductAttributeValue/GetById/{id}" : {
      "get" : {
        "tags" : [ "PredefinedProductAttributeValue" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PredefinedProductAttributeValue/GetAll/{productAttributeId}" : {
      "get" : {
        "tags" : [ "PredefinedProductAttributeValue" ],
        "parameters" : [ {
          "name" : "productAttributeId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PredefinedProductAttributeValue/Create" : {
      "post" : {
        "tags" : [ "PredefinedProductAttributeValue" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PredefinedProductAttributeValue/Update" : {
      "put" : {
        "tags" : [ "PredefinedProductAttributeValue" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredefinedProductAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceCalculation/GetFinalPrice/{productId}/{customerId}" : {
      "get" : {
        "tags" : [ "PriceCalculation" ],
        "summary" : "Gets the final price",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "overriddenProductPrice",
          "in" : "query",
          "description" : "Overridden product price. If specified, then it'll be used instead of a product price. For example, used with product attribute combinations",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "additionalCharge",
          "in" : "query",
          "description" : "Additional charge",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "includeDiscounts",
          "in" : "query",
          "description" : "A value indicating whether include discounts or not for final price computation",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "Shopping cart item quantity",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "rentalStartDate",
          "in" : "query",
          "description" : "Rental period start date (for rental products)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "rentalEndDate",
          "in" : "query",
          "description" : "Rental period end date (for rental products)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FinalPriceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceCalculation/GetProductCost/{productId}" : {
      "post" : {
        "tags" : [ "PriceCalculation" ],
        "summary" : "Gets the product cost (one item)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Shopping cart item attributes in XML",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceCalculation/GetProductAttributeValuePriceAdjustment/{productId}/{valueId}/{customerId}" : {
      "get" : {
        "tags" : [ "PriceCalculation" ],
        "summary" : "Get a price adjustment of a product attribute value",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "valueId",
          "in" : "path",
          "description" : "Product attribute value id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productPrice",
          "in" : "query",
          "description" : "Product price (null for using the base product price)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceCalculation/RoundPrice" : {
      "post" : {
        "tags" : [ "PriceCalculation" ],
        "summary" : "Round a product or order total for the currency",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Value to round",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "currencyId",
          "in" : "query",
          "description" : "Currency Id; pass null to use the primary store currency",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceCalculation/Round" : {
      "get" : {
        "tags" : [ "PriceCalculation" ],
        "summary" : "Round",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "description" : "Value to round",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "roundingType",
          "in" : "query",
          "description" : "The rounding type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/RoundingType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceFormatter/FormatPrice/{languageId}" : {
      "get" : {
        "tags" : [ "PriceFormatter" ],
        "summary" : "Formats the price",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "showCurrency",
          "in" : "query",
          "description" : "A value indicating whether to show a currency",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "targetCurrency",
          "in" : "query",
          "description" : "Target currency code",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "priceIncludesTax",
          "in" : "query",
          "description" : "A value indicating whether price includes tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "showTax",
          "in" : "query",
          "description" : "A value indicating whether to show tax suffix",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceFormatter/FormatOrderPrice/{languageId}/{primaryStoreCurrencyId}" : {
      "get" : {
        "tags" : [ "PriceFormatter" ],
        "summary" : "Formats the order price",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "primaryStoreCurrencyId",
          "in" : "path",
          "description" : "Primary store currency id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "currencyRate",
          "in" : "query",
          "description" : "Currency rate",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "customerCurrencyCode",
          "in" : "query",
          "description" : "Customer currency code",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "displayCustomerCurrency",
          "in" : "query",
          "description" : "A value indicating whether to display price on customer currency",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "priceIncludesTax",
          "in" : "query",
          "description" : "A value indicating whether price includes tax",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "showTax",
          "in" : "query",
          "description" : "A value indicating whether to show tax suffix",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceFormatter/FormatRentalProductPeriod/{productId}" : {
      "get" : {
        "tags" : [ "PriceFormatter" ],
        "summary" : "Formats the price of rental product (with rental period)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceFormatter/FormatShippingPrice/{languageId}" : {
      "get" : {
        "tags" : [ "PriceFormatter" ],
        "summary" : "Formats the shipping price",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "showCurrency",
          "in" : "query",
          "description" : "A value indicating whether to show a currency",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "currencyCode",
          "in" : "query",
          "description" : "Currency code",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "priceIncludesTax",
          "in" : "query",
          "description" : "A value indicating whether price includes tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceFormatter/FormatPaymentMethodAdditionalFee/{languageId}" : {
      "get" : {
        "tags" : [ "PriceFormatter" ],
        "summary" : "Formats the payment method additional fee",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "showCurrency",
          "in" : "query",
          "description" : "A value indicating whether to show a currency",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "currencyCode",
          "in" : "query",
          "description" : "Currency code",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "priceIncludesTax",
          "in" : "query",
          "description" : "A value indicating whether price includes tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceFormatter/FormatTaxRate" : {
      "get" : {
        "tags" : [ "PriceFormatter" ],
        "summary" : "Formats a tax rate",
        "parameters" : [ {
          "name" : "taxRate",
          "in" : "query",
          "description" : "Tax rate",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PriceFormatter/FormatBasePrice/{productId}" : {
      "get" : {
        "tags" : [ "PriceFormatter" ],
        "summary" : "Format base price (PAngV)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productPrice",
          "in" : "query",
          "description" : "Product price (in primary currency). Pass null if you want to use a default produce price",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "totalWeight",
          "in" : "query",
          "description" : "Total weight of product (with attribute weight adjustment). Pass null if you want to use a default produce weight",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PrivateMessage/Delete/{id}" : {
      "delete" : {
        "tags" : [ "PrivateMessage" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PrivateMessage/GetById/{id}" : {
      "get" : {
        "tags" : [ "PrivateMessage" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateMessageDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PrivateMessage/GetAll/{storeId}/{fromCustomerId}/{toCustomerId}" : {
      "get" : {
        "tags" : [ "PrivateMessage" ],
        "summary" : "Gets private messages",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "description" : "The store identifier; pass 0 to load all messages",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "fromCustomerId",
          "in" : "path",
          "description" : "The customer identifier who sent the message",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "toCustomerId",
          "in" : "path",
          "description" : "The customer identifier who should receive the message",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "isRead",
          "in" : "query",
          "description" : "A value indicating whether loaded messages are read. false - to load not read messages only, 1 to load read messages only, null to load all messages",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "isDeletedByAuthor",
          "in" : "query",
          "description" : "A value indicating whether loaded messages are deleted by author. false - messages are not deleted by author, null to load all messages",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "isDeletedByRecipient",
          "in" : "query",
          "description" : "A value indicating whether loaded messages are deleted by recipient. false - messages are not deleted by recipient, null to load all messages",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Keywords",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateMessagePrivateMessageDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PrivateMessage/Create" : {
      "post" : {
        "tags" : [ "PrivateMessage" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateMessageDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateMessageDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateMessageDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateMessageDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateMessageDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/PrivateMessage/Update" : {
      "put" : {
        "tags" : [ "PrivateMessage" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateMessageDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateMessageDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateMessageDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateMessageDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/DeleteProducts/{ids}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Delete products",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of product identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetAllProductsDisplayedOnHomepage" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets all products displayed on the home page",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetCategoryFeaturedProducts/{categoryId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets featured products by a category identifier",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetManufacturerFeaturedProducts/{manufacturerId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets featured products by a manufacturer identifier",
        "parameters" : [ {
          "name" : "manufacturerId",
          "in" : "path",
          "description" : "Manufacturer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetProductsMarkedAsNew" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets products which marked as new",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 if you want to get all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetProductsByIds/{ids}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets products by identifier",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of product identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetNumberOfProductsInCategory" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get number of product (published and visible) in certain category",
        "parameters" : [ {
          "name" : "categoryIds",
          "in" : "query",
          "description" : "Array of category identifiers (separator - ;)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetProductsByProductAtributeId/{productAttributeId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets products by product attribute",
        "parameters" : [ {
          "name" : "productAttributeId",
          "in" : "path",
          "description" : "Product attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductProductDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetAssociatedProducts/{parentGroupedProductId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets associated products",
        "parameters" : [ {
          "name" : "parentGroupedProductId",
          "in" : "path",
          "description" : "Parent product identifier (used with grouped products)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/UpdateProductReviewTotals/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Update product review totals",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetLowStockProducts" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get low stock products",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "loadPublishedOnly",
          "in" : "query",
          "description" : "Whether to load published products only; pass null to load all products, pass true to load only published products, pass false to load only unpublished products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "getOnlyTotalCount",
          "in" : "query",
          "description" : "A value in indicating whether you want to load only total number of records. Set to \"true\" if you don't want to load data from database",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductProductDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetLowStockProductCombinations" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get low stock product combinations",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "loadPublishedOnly",
          "in" : "query",
          "description" : "Whether to load combinations of published products only; pass null to load all products, pass true to load only published products, pass false to load only unpublished products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "getOnlyTotalCount",
          "in" : "query",
          "description" : "A value in indicating whether you want to load only total number of records. Set to \"true\" if you don't want to load data from database",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeCombinationProductAttributeCombinationDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetProductBySku" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets a product by SKU",
        "parameters" : [ {
          "name" : "sku",
          "in" : "query",
          "description" : "SKU",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetProductsBySku" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets a products by SKU array",
        "parameters" : [ {
          "name" : "skuArray",
          "in" : "query",
          "description" : "SKU array (separator - ;)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor ID; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/UpdateHasTierPricesProperty/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Update HasTierPrices property (used for performance optimization)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/UpdateHasDiscountsApplied/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Update HasDiscountsApplied property (used for performance optimization)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetNumberOfProductsByVendorId/{vendorId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets number of products by vendor identifier",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "path",
          "description" : "Vendor identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/ParseRequiredProductIds/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Parse \"required product Ids\" property",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/ProductIsAvailable/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get a value indicating whether a product is available now (availability dates)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "dateTime",
          "in" : "query",
          "description" : "Datetime to check; pass null to use current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/ParseAllowedQuantities/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get a list of allowed quantities (parse 'AllowedQuantities' property)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetTotalStockQuantity/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get total quantity",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "useReservedQuantity",
          "in" : "query",
          "description" : "A value indicating whether we should consider \"Reserved Quantity\" property \r\nwhen \"multiple warehouses\" are used",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "description" : "Warehouse identifier. Used to limit result to certain warehouse.\r\nUsed only with \"multiple warehouses\" enabled.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetRentalPeriods/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get number of rental periods (price ratio)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/FormatStockMessage/{productId}" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Formats the stock availability/quantity message",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Selected product attributes in XML format (if specified)",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/FormatSku/{productId}" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Formats SKU",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/FormatMpn/{productId}" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Formats manufacturer part number",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/FormatGtin/{productId}" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Formats GTIN",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/FormatRentalDate/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Formats start/end date for rental product",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "date",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/UpdateProductStoreMappings/{productId}/{storesIds}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Update product store mappings",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storesIds",
          "in" : "path",
          "description" : "A list of store ids for mapping (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/HasAnyDownloadableProduct/{productIds}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets the value whether the sequence contains downloadable products",
        "parameters" : [ {
          "name" : "productIds",
          "in" : "path",
          "description" : "Product identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/HasAnyGiftCardProduct/{productIds}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets the value whether the sequence contains gift card products",
        "parameters" : [ {
          "name" : "productIds",
          "in" : "path",
          "description" : "Product identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/HasAnyRecurringProduct/{productIds}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Gets the value whether the sequence contains recurring products",
        "parameters" : [ {
          "name" : "productIds",
          "in" : "path",
          "description" : "Product identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Product" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetById/{id}" : {
      "get" : {
        "tags" : [ "Product" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetAll" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Search products",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "categoryIds",
          "in" : "query",
          "description" : "Category identifiers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "manufacturerIds",
          "in" : "query",
          "description" : "Manufacturer identifiers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "description" : "Warehouse identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "productType",
          "in" : "query",
          "description" : "Product type; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ProductType"
          }
        }, {
          "name" : "visibleIndividuallyOnly",
          "in" : "query",
          "description" : "A values indicating whether to load only products marked as \"visible individually\"; \"false\" to load all records; \"true\" to load \"visible individually\" only",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "excludeFeaturedProducts",
          "in" : "query",
          "description" : "A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers); \"false\" (by default) to load all records; \"true\" to exclude featured products from results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "priceMin",
          "in" : "query",
          "description" : "Minimum price; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "priceMax",
          "in" : "query",
          "description" : "Maximum price; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "productTagId",
          "in" : "query",
          "description" : "Product tag identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Keywords",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchDescriptions",
          "in" : "query",
          "description" : "A value indicating whether to search by a specified \"keyword\" in product descriptions",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchManufacturerPartNumber",
          "in" : "query",
          "description" : "A value indicating whether to search by a specified \"keyword\" in manufacturer part number",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "searchSku",
          "in" : "query",
          "description" : "A value indicating whether to search by a specified \"keyword\" in product SKU",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "searchProductTags",
          "in" : "query",
          "description" : "A value indicating whether to search by a specified \"keyword\" in product tags",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier (search for text searching)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "filteredSpecOptionIds",
          "in" : "query",
          "description" : "Specification options list to filter products; null to load all records (separator - ;)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderByType",
          "in" : "query",
          "description" : "Order by",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ProductSortingEnum"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "overridePublished",
          "in" : "query",
          "description" : "null - process \"Published\" property according to \"showHidden\" parameter\r\ntrue - load only \"Published\" products\r\nfalse - load only \"Unpublished\" products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductProductDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetProductsWithAppliedDiscount" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get products for which a discount is applied",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "query",
          "description" : "Discount identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to load deleted products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductProductDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/Create" : {
      "post" : {
        "tags" : [ "Product" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/Update" : {
      "put" : {
        "tags" : [ "Product" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/AdjustInventory/{productId}" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Adjust inventory",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "quantityToChange",
          "in" : "query",
          "description" : "Quantity to increase or decrease",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message for the stock quantity history",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "default" : ""
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "default" : ""
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "default" : ""
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "default" : ""
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/BookReservedInventory/{productId}/{warehouseId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Book the reserved quantity",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "warehouseId",
          "in" : "path",
          "description" : "Warehouse identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "Quantity, must be negative",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message for the stock quantity history",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/ReverseBookedInventory/{productId}/{shipmentItemId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Reverse booked inventory (if acceptable)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "shipmentItemId",
          "in" : "path",
          "description" : "Shipment item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message for the stock quantity history",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/AddStockQuantityHistoryEntry/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Add stock quantity change entry",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "quantityAdjustment",
          "in" : "query",
          "description" : "Quantity adjustment",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "stockQuantity",
          "in" : "query",
          "description" : "Current stock quantity",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "description" : "Warehouse identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "combinationId",
          "in" : "query",
          "description" : "Product attribute combination identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Product/GetStockQuantityHistory/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get the history of the product stock quantity changes",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "description" : "Warehouse identifier; pass 0 to load all entries",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "combinationId",
          "in" : "query",
          "description" : "Product attribute combination identifier; pass 0 to load all entries",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockQuantityHistoryStockQuantityHistoryDtoPagedListDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttribute/DeleteProductAttributes/{ids}" : {
      "get" : {
        "tags" : [ "ProductAttribute" ],
        "summary" : "Delete a list of product attributes",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of product attribute identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttribute/GetProductAttributeByIds/{ids}" : {
      "get" : {
        "tags" : [ "ProductAttribute" ],
        "summary" : "Gets product attributes",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of product attribute identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttribute/GetNotExistingAttributes/{idsNames}" : {
      "get" : {
        "tags" : [ "ProductAttribute" ],
        "summary" : "Returns a list of IDs of not existing attributes",
        "parameters" : [ {
          "name" : "idsNames",
          "in" : "path",
          "description" : "Array of IDs of the attributes to check",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttribute/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttribute/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttribute/GetAll" : {
      "get" : {
        "tags" : [ "ProductAttribute" ],
        "summary" : "Gets all product attributes",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeProductAttributeDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttribute/Create" : {
      "post" : {
        "tags" : [ "ProductAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttribute/Update" : {
      "put" : {
        "tags" : [ "ProductAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeCombination/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductAttributeCombination" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeCombination/GetBySku" : {
      "get" : {
        "tags" : [ "ProductAttributeCombination" ],
        "summary" : "Gets a product attribute combination by SKU",
        "parameters" : [ {
          "name" : "sku",
          "in" : "query",
          "description" : "SKU",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeCombination/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductAttributeCombination" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeCombination/GetAll/{productId}" : {
      "get" : {
        "tags" : [ "ProductAttributeCombination" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeCombination/Create" : {
      "post" : {
        "tags" : [ "ProductAttributeCombination" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeCombination/Update" : {
      "put" : {
        "tags" : [ "ProductAttributeCombination" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeFormatter/FormatAttributes/{productId}" : {
      "post" : {
        "tags" : [ "ProductAttributeFormatter" ],
        "summary" : "Formats attributes",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeFormatter/FormatAttributes/{productId}/{customerId}" : {
      "post" : {
        "tags" : [ "ProductAttributeFormatter" ],
        "summary" : "Formats attributes",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "separator",
          "in" : "query",
          "description" : "Separator",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "<br />"
          }
        }, {
          "name" : "htmlEncode",
          "in" : "query",
          "description" : "A value indicating whether to encode (HTML) values",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "renderPrices",
          "in" : "query",
          "description" : "A value indicating whether to render prices",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "renderProductAttributes",
          "in" : "query",
          "description" : "A value indicating whether to render product attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "renderGiftCardAttributes",
          "in" : "query",
          "description" : "A value indicating whether to render gift card attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "allowHyperlinks",
          "in" : "query",
          "description" : "A value indicating whether to HTML hyperink tags could be rendered (if required)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeMapping/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductAttributeMapping" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeMapping/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductAttributeMapping" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeMappingDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeMapping/GetAllByProductId/{productId}" : {
      "get" : {
        "tags" : [ "ProductAttributeMapping" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductAttributeMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeMapping/Create" : {
      "post" : {
        "tags" : [ "ProductAttributeMapping" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeMapping/Update" : {
      "put" : {
        "tags" : [ "ProductAttributeMapping" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/ParseProductAttributeMappings" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Gets selected product attribute mappings",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductAttributeMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/ParseProductAttributeValues" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Get product attribute values",
        "parameters" : [ {
          "name" : "mappingId",
          "in" : "query",
          "description" : "Product attribute mapping identifier; pass 0 to load all values",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/ParseValues/{mappingId}" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Gets selected product attribute values",
        "parameters" : [ {
          "name" : "mappingId",
          "in" : "path",
          "description" : "Product attribute mapping identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/AddProductAttribute/{productAttributeMappingId}" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Adds an attribute",
        "parameters" : [ {
          "name" : "productAttributeMappingId",
          "in" : "path",
          "description" : "Product attribute mapping",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Value",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "Quantity (used with AttributeValueType.AssociatedToProduct to specify the quantity entered by the customer)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/RemoveProductAttribute/{mappingId}" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Remove an attribute",
        "parameters" : [ {
          "name" : "mappingId",
          "in" : "path",
          "description" : "Product attribute mapping id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/AreProductAttributesEqual" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Are attributes equal",
        "parameters" : [ {
          "name" : "ignoreNonCombinableAttributes",
          "in" : "query",
          "description" : "A value indicating whether we should ignore non-combinable attributes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "ignoreQuantity",
          "in" : "query",
          "description" : "A value indicating whether we should ignore the quantity of attribute value entered by the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "The attributes of the compared products",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AreProductAttributesEqualRequest"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AreProductAttributesEqualRequest"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AreProductAttributesEqualRequest"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AreProductAttributesEqualRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/IsConditionMet/{mappingId}" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Check whether condition of some attribute is met (if specified). Return \"null\" if not condition is specified",
        "parameters" : [ {
          "name" : "mappingId",
          "in" : "path",
          "description" : "Product attribute mapping Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Selected attributes (XML format)",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/FindProductAttributeCombination/{productId}" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Finds a product attribute combination by attributes stored in XML",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ignoreNonCombinableAttributes",
          "in" : "query",
          "description" : "A value indicating whether we should ignore non-combinable attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/GenerateAllCombinations/{productId}" : {
      "get" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Generate all combinations",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ignoreNonCombinableAttributes",
          "in" : "query",
          "description" : "A value indicating whether we should ignore non-combinable attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "ids",
          "in" : "query",
          "description" : "List of allowed attribute identifiers (separator - ;). If null or empty then all attributes would be used.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/AddGiftCardAttribute" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Add gift card attributes",
        "parameters" : [ {
          "name" : "recipientName",
          "in" : "query",
          "description" : "Recipient name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recipientEmail",
          "in" : "query",
          "description" : "Recipient email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "senderName",
          "in" : "query",
          "description" : "Sender name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "senderEmail",
          "in" : "query",
          "description" : "Sender email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "giftCardMessage",
          "in" : "query",
          "description" : "Message",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeParser/GetGiftCardAttribute" : {
      "post" : {
        "tags" : [ "ProductAttributeParser" ],
        "summary" : "Get gift card attributes",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GiftCardAttributeResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeValue/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductAttributeValue" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeValue/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductAttributeValue" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeValueDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeValue/GetAll/{mappingId}" : {
      "get" : {
        "tags" : [ "ProductAttributeValue" ],
        "parameters" : [ {
          "name" : "mappingId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeValue/Create" : {
      "post" : {
        "tags" : [ "ProductAttributeValue" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAttributeValueDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAttributeValue/Update" : {
      "put" : {
        "tags" : [ "ProductAttributeValue" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAvailabilityRange/GetAll" : {
      "get" : {
        "tags" : [ "ProductAvailabilityRange" ],
        "summary" : "Get all product availability ranges",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAvailabilityRange/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductAvailabilityRange" ],
        "summary" : "Get all product availability ranges",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The product availability range identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAvailabilityRange/Create" : {
      "post" : {
        "tags" : [ "ProductAvailabilityRange" ],
        "summary" : "Create a product availability range",
        "requestBody" : {
          "description" : "Product availability range Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAvailabilityRange/Update" : {
      "put" : {
        "tags" : [ "ProductAvailabilityRange" ],
        "summary" : "Update a product availability range",
        "requestBody" : {
          "description" : "Product availability range Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductAvailabilityRangeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductAvailabilityRange/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductAvailabilityRange" ],
        "summary" : "Delete a product availability range",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product availability range identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductCategory/GetProductCategoriesByCategoryId/{categoryId}" : {
      "get" : {
        "tags" : [ "ProductCategory" ],
        "summary" : "Gets product category mapping collection",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductCategoryProductCategoryDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductCategory/GetProductCategoriesByProductId/{productId}" : {
      "get" : {
        "tags" : [ "ProductCategory" ],
        "summary" : "Gets a product category mapping collection",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductCategory/GetProductCategoryIds/{ids}" : {
      "get" : {
        "tags" : [ "ProductCategory" ],
        "summary" : "Get category IDs for products",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of Products Id (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "type" : "integer",
                      "format" : "int32"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductCategory/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductCategory" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductCategory/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductCategory" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductCategoryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductCategory/Create" : {
      "post" : {
        "tags" : [ "ProductCategory" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductCategoryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductCategory/Update" : {
      "put" : {
        "tags" : [ "ProductCategory" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductDiscounts/ClearDiscountProductMapping/{discountId}" : {
      "get" : {
        "tags" : [ "ProductDiscounts" ],
        "summary" : "Clean up product references for a specified discount",
        "parameters" : [ {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductDiscounts/GetAllDiscountsAppliedToProduct/{productId}" : {
      "get" : {
        "tags" : [ "ProductDiscounts" ],
        "summary" : "Get a discount-product mapping records by product identifier",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiscountProductMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductDiscounts/GetDiscountAppliedToProduct/{productId}/{discountId}" : {
      "get" : {
        "tags" : [ "ProductDiscounts" ],
        "summary" : "Get a discount-product mapping record",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "discountId",
          "in" : "path",
          "description" : "Discount identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountProductMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductDiscounts/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductDiscounts" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductDiscounts/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductDiscounts" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountProductMappingDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductDiscounts/Create" : {
      "post" : {
        "tags" : [ "ProductDiscounts" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountProductMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountProductMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountProductMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscountProductMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiscountProductMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductManufacturer/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductManufacturer" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductManufacturer/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductManufacturer" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductManufacturerDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductManufacturer/GetProductManufacturersByProductId/{productId}" : {
      "get" : {
        "tags" : [ "ProductManufacturer" ],
        "summary" : "Gets a product manufacturer mapping collection",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductManufacturerDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductManufacturer/GetProductManufacturerIds/{ids}" : {
      "get" : {
        "tags" : [ "ProductManufacturer" ],
        "summary" : "Get manufacturer IDs for products",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of Products Id (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "type" : "integer",
                      "format" : "int32"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductManufacturer/GetProductManufacturersByManufacturerId/{manufacturerId}" : {
      "get" : {
        "tags" : [ "ProductManufacturer" ],
        "summary" : "Gets product manufacturer collection",
        "parameters" : [ {
          "name" : "manufacturerId",
          "in" : "path",
          "description" : "Manufacturer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductManufacturerProductManufacturerDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductManufacturer/Create" : {
      "post" : {
        "tags" : [ "ProductManufacturer" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductManufacturerDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductManufacturerDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductManufacturerDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductManufacturerDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductManufacturerDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductManufacturer/Update" : {
      "put" : {
        "tags" : [ "ProductManufacturer" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductManufacturerDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductManufacturerDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductManufacturerDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductManufacturerDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductPictures/GetProductPicturesByProductId/{productId}" : {
      "get" : {
        "tags" : [ "ProductPictures" ],
        "summary" : "Gets a product pictures by product identifier",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "The product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductPictureDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductPictures/GetProductsImagesIds/{productsIds}" : {
      "get" : {
        "tags" : [ "ProductPictures" ],
        "summary" : "Get the IDs of all product images",
        "parameters" : [ {
          "name" : "productsIds",
          "in" : "path",
          "description" : "Array of product identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "type" : "integer",
                      "format" : "int32"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductPictures/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductPictures" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductPictures/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductPictures" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPictureDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductPictures/Create" : {
      "post" : {
        "tags" : [ "ProductPictures" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPictureDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPictureDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPictureDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPictureDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPictureDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductPictures/Update" : {
      "put" : {
        "tags" : [ "ProductPictures" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPictureDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPictureDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPictureDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductPictureDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/GetProductReviewsByIds/{ids}" : {
      "get" : {
        "tags" : [ "ProductReview" ],
        "summary" : "Get product reviews by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of Product review identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductReviewDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/DeleteProductReviews/{ids}" : {
      "get" : {
        "tags" : [ "ProductReview" ],
        "summary" : "Deletes product reviews",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of Product review identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/SetProductReviewHelpfulness/{productReviewId}" : {
      "get" : {
        "tags" : [ "ProductReview" ],
        "summary" : "Sets or create a product review helpfulness record",
        "parameters" : [ {
          "name" : "productReviewId",
          "in" : "path",
          "description" : "Product review identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "helpfulness",
          "in" : "query",
          "description" : "Value indicating whether a review a helpful",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/UpdateProductReviewHelpfulnessTotals/{productReviewId}" : {
      "get" : {
        "tags" : [ "ProductReview" ],
        "summary" : "Updates a totals helpfulness count for product review",
        "parameters" : [ {
          "name" : "productReviewId",
          "in" : "path",
          "description" : "Product review identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/CanAddReview/{productId}" : {
      "get" : {
        "tags" : [ "ProductReview" ],
        "summary" : "Check possibility added review for current customer",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Current product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "The store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductReview" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductReview" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductReviewDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/GetAll" : {
      "get" : {
        "tags" : [ "ProductReview" ],
        "summary" : "Gets all product reviews",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier (who wrote a review); 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "approved",
          "in" : "query",
          "description" : "A value indicating whether to content is approved; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fromUtc",
          "in" : "query",
          "description" : "Item creation from; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "toUtc",
          "in" : "query",
          "description" : "Item item creation to; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Search title or review text; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "The store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "The product identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "The vendor identifier (limit to products of this vendor); pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductReviewProductReviewDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/Create" : {
      "post" : {
        "tags" : [ "ProductReview" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductReviewDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReview/Update" : {
      "put" : {
        "tags" : [ "ProductReview" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReviewReviewTypeMapping/GetProductReviewReviewTypeMappingsByProductReviewId/{productReviewId}" : {
      "get" : {
        "tags" : [ "ProductReviewReviewTypeMapping" ],
        "summary" : "Get product review and review type mappings by product review identifier",
        "parameters" : [ {
          "name" : "productReviewId",
          "in" : "path",
          "description" : "The product review identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductReviewReviewTypeMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductReviewReviewTypeMapping/InsertProductReviewReviewTypeMappings" : {
      "post" : {
        "tags" : [ "ProductReviewReviewTypeMapping" ],
        "summary" : "Inserts a product review and review type mapping",
        "requestBody" : {
          "description" : "Product review and review type mapping",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewReviewTypeMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewReviewTypeMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewReviewTypeMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductReviewReviewTypeMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductReviewReviewTypeMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductSpecificationAttribute/GetProductSpecificationAttributeCount" : {
      "get" : {
        "tags" : [ "ProductSpecificationAttribute" ],
        "summary" : "Gets a count of product specification attribute mapping records",
        "parameters" : [ {
          "name" : "productId",
          "in" : "query",
          "description" : "Product identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "specificationAttributeOptionId",
          "in" : "query",
          "description" : "The specification attribute option identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductSpecificationAttribute/GetProductsBySpecificationAttributeId/{specificationAttributeId}" : {
      "get" : {
        "tags" : [ "ProductSpecificationAttribute" ],
        "summary" : "Get mapped products for specification attribute",
        "parameters" : [ {
          "name" : "specificationAttributeId",
          "in" : "path",
          "description" : "The specification attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductProductDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductSpecificationAttribute/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductSpecificationAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductSpecificationAttribute/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductSpecificationAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductSpecificationAttribute/GetAll" : {
      "get" : {
        "tags" : [ "ProductSpecificationAttribute" ],
        "summary" : "Gets a product specification attribute mapping collection",
        "parameters" : [ {
          "name" : "productId",
          "in" : "query",
          "description" : "Product identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "specificationAttributeOptionId",
          "in" : "query",
          "description" : "Specification attribute option identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "allowFiltering",
          "in" : "query",
          "description" : "0 to load attributes with AllowFiltering set to false, 1 to load attributes with AllowFiltering set to true, null to load all attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "showOnProductPage",
          "in" : "query",
          "description" : "0 to load attributes with ShowOnProductPage set to false, 1 to load attributes with ShowOnProductPage set to true, null to load all attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "specificationAttributeGroupId",
          "in" : "query",
          "description" : "Specification attribute group identifier; 0 to load all records; null to load attributes without group",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductSpecificationAttribute/Create" : {
      "post" : {
        "tags" : [ "ProductSpecificationAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductSpecificationAttribute/Update" : {
      "put" : {
        "tags" : [ "ProductSpecificationAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductSpecificationAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/DeleteProductTags/{ids}" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "summary" : "Delete product tags",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of product tag identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/GetCategoriesByIds/{ids}" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "summary" : "Gets product tags by identifier",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of product tags identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/GetAllProductTagsByProductId/{productId}" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "summary" : "Gets all product tags by product identifier",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/GetProductCountByProductTagId/{productTagId}/{storeId}" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "summary" : "Get products quantity linked to a passed tag identifier",
        "parameters" : [ {
          "name" : "productTagId",
          "in" : "path",
          "description" : "Product tag identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/GetProductCount/{storeId}" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "summary" : "Get product count for every linked tag",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/UpdateProductTags/{productId}/{productTags}" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "summary" : "Update product tags",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id for update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productTags",
          "in" : "path",
          "description" : "Array of product tags (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductTag" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductTagDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/GetAll" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "summary" : "Gets all product tags",
        "parameters" : [ {
          "name" : "tagName",
          "in" : "query",
          "description" : "Tag name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductTagDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/Update" : {
      "put" : {
        "tags" : [ "ProductTag" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTagDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTagDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTagDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTagDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTag/InsertProductProductTagMapping" : {
      "post" : {
        "tags" : [ "ProductTag" ],
        "summary" : "Inserts a product-product tag mapping",
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductProductTagMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductProductTagMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductProductTagMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductProductTagMappingDto"
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTemplate/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductTemplate" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTemplate/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductTemplate" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductTemplateDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTemplate/GetAll" : {
      "get" : {
        "tags" : [ "ProductTemplate" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductTemplateDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTemplate/Create" : {
      "post" : {
        "tags" : [ "ProductTemplate" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductTemplateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductTemplate/Update" : {
      "put" : {
        "tags" : [ "ProductTemplate" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductWarehouse/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ProductWarehouse" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductWarehouse/GetById/{id}" : {
      "get" : {
        "tags" : [ "ProductWarehouse" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductWarehouse/GetWarehousesById/{id}" : {
      "get" : {
        "tags" : [ "ProductWarehouse" ],
        "summary" : "Gets a warehouse by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Warehouse identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WarehouseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductWarehouse/GetAllProductWarehouseInventoryRecords/{productId}" : {
      "get" : {
        "tags" : [ "ProductWarehouse" ],
        "summary" : "Get a product warehouse-inventory records by product identifier",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductWarehouse/Create" : {
      "post" : {
        "tags" : [ "ProductWarehouse" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ProductWarehouse/Update" : {
      "put" : {
        "tags" : [ "ProductWarehouse" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductWarehouseInventoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/GetById/{id}" : {
      "get" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Gets a queued email by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Queued email identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueuedEmailDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/GetByIds/{ids}" : {
      "get" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Get queued email by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of queued email identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QueuedEmailDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/Create" : {
      "post" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Create a queued email",
        "requestBody" : {
          "description" : "Queued email Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueuedEmailDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueuedEmailDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueuedEmailDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueuedEmailDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueuedEmailDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/Update" : {
      "put" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Update a queued email",
        "requestBody" : {
          "description" : "Queued email Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueuedEmailDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueuedEmailDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueuedEmailDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueuedEmailDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/Delete/{id}" : {
      "delete" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Delete a queued email",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Queued email identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/DeleteByIds/{ids}" : {
      "delete" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Delete queued emails by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of queued email identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/DeleteAll" : {
      "delete" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Delete all queued emails",
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/DeleteAlreadySentEmails" : {
      "delete" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Delete all queued emails",
        "parameters" : [ {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/QueuedEmail/SearchEmails" : {
      "get" : {
        "tags" : [ "QueuedEmail" ],
        "summary" : "Gets all queued emails",
        "parameters" : [ {
          "name" : "fromEmail",
          "in" : "query",
          "description" : "From Email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toEmail",
          "in" : "query",
          "description" : "To Email",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "loadNotSentItemsOnly",
          "in" : "query",
          "description" : "A value indicating whether to load only not sent emails",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "loadOnlyItemsToBeSent",
          "in" : "query",
          "description" : "A value indicating whether to load only emails for ready to be sent",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "maxSendTries",
          "in" : "query",
          "description" : "Maximum send tries",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "loadNewest",
          "in" : "query",
          "description" : "A value indicating whether we should sort queued email descending; otherwise, ascending.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueuedEmailQueuedEmailDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecentlyViewedProducts/GetRecentlyViewedProducts" : {
      "get" : {
        "tags" : [ "RecentlyViewedProducts" ],
        "summary" : "Gets a \"recently viewed products\" list",
        "parameters" : [ {
          "name" : "number",
          "in" : "query",
          "description" : "Number of products to load",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecentlyViewedProducts/AddProductToRecentlyViewedList/{productId}" : {
      "get" : {
        "tags" : [ "RecentlyViewedProducts" ],
        "summary" : "Adds a product to a recently viewed products list",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecurringPayment/GetById/{id}" : {
      "get" : {
        "tags" : [ "RecurringPayment" ],
        "summary" : "Gets a recurring payment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Recurring payment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecurringPaymentDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecurringPayment/Delete/{id}" : {
      "delete" : {
        "tags" : [ "RecurringPayment" ],
        "summary" : "Delete a recurring payment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Recurring payment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecurringPayment/Create" : {
      "post" : {
        "tags" : [ "RecurringPayment" ],
        "summary" : "Create an recurring payment",
        "requestBody" : {
          "description" : "Recurring payment Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecurringPaymentDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecurringPayment/Update" : {
      "put" : {
        "tags" : [ "RecurringPayment" ],
        "summary" : "Update the recurring payment",
        "requestBody" : {
          "description" : "Recurring payment Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecurringPayment/Search" : {
      "get" : {
        "tags" : [ "RecurringPayment" ],
        "summary" : "Search recurring payments",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "The store identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "The customer identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "initialOrderId",
          "in" : "query",
          "description" : "The initial order identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "initialOrderStatus",
          "in" : "query",
          "description" : "Initial order status identifier; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/OrderStatus"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecurringPaymentRecurringPaymentDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecurringPaymentHistory/GetByRecurringPaymentId/{id}" : {
      "get" : {
        "tags" : [ "RecurringPaymentHistory" ],
        "summary" : "Gets a recurring payment history by recurring payment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Recurring payment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RecurringPaymentHistoryDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RecurringPaymentHistory/Create" : {
      "post" : {
        "tags" : [ "RecurringPaymentHistory" ],
        "summary" : "Create an recurring payment history entry",
        "requestBody" : {
          "description" : "Recurring payment history Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentHistoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentHistoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentHistoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecurringPaymentHistoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecurringPaymentDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RelatedProducts/Delete/{id}" : {
      "delete" : {
        "tags" : [ "RelatedProducts" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RelatedProducts/GetById/{id}" : {
      "get" : {
        "tags" : [ "RelatedProducts" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelatedProductDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RelatedProducts/GetRelatedProductsByProductId1/{productId1}" : {
      "get" : {
        "tags" : [ "RelatedProducts" ],
        "summary" : "Gets related products by product identifier",
        "parameters" : [ {
          "name" : "productId1",
          "in" : "path",
          "description" : "The first product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RelatedProductDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RelatedProducts/Create" : {
      "post" : {
        "tags" : [ "RelatedProducts" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelatedProductDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelatedProductDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelatedProductDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelatedProductDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelatedProductDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RelatedProducts/Update" : {
      "put" : {
        "tags" : [ "RelatedProducts" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelatedProductDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelatedProductDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelatedProductDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelatedProductDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequest/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ReturnRequest" ],
        "summary" : "Delete a return request",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Return request identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequest/GetById/{id}" : {
      "get" : {
        "tags" : [ "ReturnRequest" ],
        "summary" : "Gets a return request",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Return request identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReturnRequestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequest/Search" : {
      "get" : {
        "tags" : [ "ReturnRequest" ],
        "summary" : "Search return requests",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; 0 to load all entries",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier; 0 to load all entries",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "orderItemId",
          "in" : "query",
          "description" : "Order item identifier; 0 to load all entries",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "customNumber",
          "in" : "query",
          "description" : "Custom number; null or empty to load all entries",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rs",
          "in" : "query",
          "description" : "Return request status; null to load all entries",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ReturnRequestStatus"
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "getOnlyTotalCount",
          "in" : "query",
          "description" : "A value in indicating whether you want to load only total number of records. Set to \"true\" if you don't want to load data from database",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReturnRequestReturnRequestDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequest/Create" : {
      "post" : {
        "tags" : [ "ReturnRequest" ],
        "summary" : "Create a return request",
        "requestBody" : {
          "description" : "Return request Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReturnRequestDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequest/Update" : {
      "put" : {
        "tags" : [ "ReturnRequest" ],
        "summary" : "Update a return request",
        "requestBody" : {
          "description" : "Return request Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestAction/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ReturnRequestAction" ],
        "summary" : "Delete a return request action",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Return request action identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestAction/GetAll" : {
      "get" : {
        "tags" : [ "ReturnRequestAction" ],
        "summary" : "Gets all return request actions",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReturnRequestActionDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestAction/GetById/{id}" : {
      "get" : {
        "tags" : [ "ReturnRequestAction" ],
        "summary" : "Gets a return request action",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Return request action identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReturnRequestActionDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestAction/Create" : {
      "post" : {
        "tags" : [ "ReturnRequestAction" ],
        "summary" : "Create a return request action",
        "requestBody" : {
          "description" : "Return request action Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestActionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestActionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestActionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestActionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReturnRequestActionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestAction/Update" : {
      "put" : {
        "tags" : [ "ReturnRequestAction" ],
        "summary" : "Update a return request action",
        "requestBody" : {
          "description" : "Return request action Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestActionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestActionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestActionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestActionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestReason/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ReturnRequestReason" ],
        "summary" : "Delete a return request reasons",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Return request reasons identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestReason/GetAll" : {
      "get" : {
        "tags" : [ "ReturnRequestReason" ],
        "summary" : "Gets all return request reasons",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReturnRequestReasonDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestReason/GetById/{id}" : {
      "get" : {
        "tags" : [ "ReturnRequestReason" ],
        "summary" : "Gets a return request reason",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Return request reason identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReturnRequestReasonDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestReason/Create" : {
      "post" : {
        "tags" : [ "ReturnRequestReason" ],
        "summary" : "Create a return request reason",
        "requestBody" : {
          "description" : "Return request reason Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestReasonDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestReasonDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestReasonDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestReasonDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReturnRequestReasonDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReturnRequestReason/Update" : {
      "put" : {
        "tags" : [ "ReturnRequestReason" ],
        "summary" : "Update a return request reason",
        "requestBody" : {
          "description" : "Return request reason Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestReasonDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestReasonDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestReasonDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReturnRequestReasonDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReviewType/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ReviewType" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReviewType/GetById/{id}" : {
      "get" : {
        "tags" : [ "ReviewType" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewTypeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReviewType/GetAll" : {
      "post" : {
        "tags" : [ "ReviewType" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReviewTypeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReviewType/Create" : {
      "post" : {
        "tags" : [ "ReviewType" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewTypeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewTypeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewTypeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewTypeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewTypeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ReviewType/Update" : {
      "put" : {
        "tags" : [ "ReviewType" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewTypeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewTypeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewTypeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewTypeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RewardPointsHistory/GetRewardPointsHistory" : {
      "get" : {
        "tags" : [ "RewardPointsHistory" ],
        "summary" : "Load reward point history records",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Customer identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "showNotActivated",
          "in" : "query",
          "description" : "A value indicating whether to show reward points that did not yet activated",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "orderGuid",
          "in" : "query",
          "description" : "Order Guid; pass null to load all record",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RewardPointsHistoryRewardPointsHistoryDtoPagedListDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RewardPointsHistory/GetRewardPointsBalance/{customerId}/{storeId}" : {
      "get" : {
        "tags" : [ "RewardPointsHistory" ],
        "summary" : "Gets reward points balance",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RewardPointsHistory/AddRewardPointsHistoryEntry/{customerId}/{storeId}" : {
      "get" : {
        "tags" : [ "RewardPointsHistory" ],
        "summary" : "Add reward points history record",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "points",
          "in" : "query",
          "description" : "Number of points to add",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "usedWithOrderId",
          "in" : "query",
          "description" : "The order identifier for which points were redeemed (spent) as a payment",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "usedAmount",
          "in" : "query",
          "description" : "Used amount",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0
          }
        }, {
          "name" : "activatingDate",
          "in" : "query",
          "description" : "Date and time of activating reward points; pass null to immediately activating",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "Date and time when the reward points will no longer be valid; pass null to add date termless points",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RewardPointsHistory/GetById/{id}" : {
      "get" : {
        "tags" : [ "RewardPointsHistory" ],
        "summary" : "Gets a reward point history entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Reward point history entry identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RewardPointsHistoryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RewardPointsHistory/Update" : {
      "put" : {
        "tags" : [ "RewardPointsHistory" ],
        "summary" : "Update the reward point history entry",
        "requestBody" : {
          "description" : "Reward point history Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RewardPointsHistoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RewardPointsHistoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RewardPointsHistoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RewardPointsHistoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/RewardPointsHistory/Delete/{id}" : {
      "delete" : {
        "tags" : [ "RewardPointsHistory" ],
        "summary" : "Delete the reward point history entry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Reward point history identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ScheduleTask/GetAll" : {
      "get" : {
        "tags" : [ "ScheduleTask" ],
        "summary" : "Gets all schedule tasks",
        "parameters" : [ {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ScheduleTaskDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ScheduleTask/GetById/{id}" : {
      "get" : {
        "tags" : [ "ScheduleTask" ],
        "summary" : "Gets a task by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleTaskDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ScheduleTask/GetByType" : {
      "get" : {
        "tags" : [ "ScheduleTask" ],
        "summary" : "Gets a schedule task by its type",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Task type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleTaskDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ScheduleTask/Create" : {
      "post" : {
        "tags" : [ "ScheduleTask" ],
        "summary" : "Create a task",
        "requestBody" : {
          "description" : "Schedule task Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTaskDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTaskDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTaskDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTaskDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleTaskDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ScheduleTask/Update" : {
      "put" : {
        "tags" : [ "ScheduleTask" ],
        "summary" : "Update a task",
        "requestBody" : {
          "description" : "Schedule task Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTaskDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTaskDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTaskDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTaskDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ScheduleTask/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ScheduleTask" ],
        "summary" : "Delete a task",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SearchTerm/GetSearchTermByKeyword/{storeId}" : {
      "get" : {
        "tags" : [ "SearchTerm" ],
        "summary" : "Gets a search term record by keyword",
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "Search term keyword",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchTermDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SearchTerm/GetStats" : {
      "get" : {
        "tags" : [ "SearchTerm" ],
        "summary" : "Gets a search term statistics",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchTermReportLineSearchTermReportLineDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SearchTerm/Create" : {
      "post" : {
        "tags" : [ "SearchTerm" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTermDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTermDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTermDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTermDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchTermDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SearchTerm/Update" : {
      "put" : {
        "tags" : [ "SearchTerm" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTermDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTermDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTermDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchTermDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Shipment/GetAll" : {
      "get" : {
        "tags" : [ "Shipment" ],
        "summary" : "Gets all shipments",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "description" : "Warehouse identifier, only shipments with products from a specified warehouse will be loaded; 0 to load all orders",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "shippingCountryId",
          "in" : "query",
          "description" : "Shipping country identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "shippingStateId",
          "in" : "query",
          "description" : "Shipping state identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "shippingCounty",
          "in" : "query",
          "description" : "Shipping county; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shippingCity",
          "in" : "query",
          "description" : "Shipping city; null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "trackingNumber",
          "in" : "query",
          "description" : "Search by tracking number",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loadNotShipped",
          "in" : "query",
          "description" : "A value indicating whether we should load only not shipped shipments",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "loadNotReadyForPickup",
          "in" : "query",
          "description" : "A value indicating whether we should load only not ready for pickup shipments",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "loadNotDelivered",
          "in" : "query",
          "description" : "A value indicating whether we should load only not delivered shipments",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "orderId",
          "in" : "query",
          "description" : "Order identifier; 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShipmentShipmentDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Shipment/GetById/{id}" : {
      "get" : {
        "tags" : [ "Shipment" ],
        "summary" : "Gets a shipment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Shipment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShipmentDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Shipment/GetByIds/{ids}" : {
      "get" : {
        "tags" : [ "Shipment" ],
        "summary" : "Gets a shipment by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of shipment identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShipmentDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Shipment/GetByOrderId/{orderId}" : {
      "get" : {
        "tags" : [ "Shipment" ],
        "summary" : "Gets a list of order shipments",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "shipped",
          "in" : "query",
          "description" : "A value indicating whether to count only shipped or not shipped shipments; pass null to ignore",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "readyForPickup",
          "in" : "query",
          "description" : "A value indicating whether to load only ready for pickup shipments; pass null to ignore",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "vendorId",
          "in" : "query",
          "description" : "Vendor identifier; pass 0 to ignore",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShipmentDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Shipment/Create" : {
      "post" : {
        "tags" : [ "Shipment" ],
        "summary" : "Create a shipment",
        "requestBody" : {
          "description" : "Shipment Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShipmentDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Shipment/Update" : {
      "put" : {
        "tags" : [ "Shipment" ],
        "summary" : "Update a shipment",
        "requestBody" : {
          "description" : "Shipment Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Shipment/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Shipment" ],
        "summary" : "Delete a shipment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Shipment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShipmentItem/GetById/{id}" : {
      "get" : {
        "tags" : [ "ShipmentItem" ],
        "summary" : "Gets a shipment item",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Shipment item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShipmentItemDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShipmentItem/GetByShipmentId/{id}" : {
      "get" : {
        "tags" : [ "ShipmentItem" ],
        "summary" : "Gets a shipment items of shipment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Shipment identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShipmentItemDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShipmentItem/Create" : {
      "post" : {
        "tags" : [ "ShipmentItem" ],
        "summary" : "Create a shipment item",
        "requestBody" : {
          "description" : "Shipment item Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentItemDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentItemDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentItemDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentItemDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShipmentDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShipmentItem/Update" : {
      "put" : {
        "tags" : [ "ShipmentItem" ],
        "summary" : "Update a shipment item",
        "requestBody" : {
          "description" : "Shipment item Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentItemDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentItemDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentItemDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShipmentItemDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShipmentItem/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ShipmentItem" ],
        "summary" : "Delete a shipment item",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Shipment item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShipmentItem/GetQuantityInShipments/{productId}/{warehouseId}" : {
      "get" : {
        "tags" : [ "ShipmentItem" ],
        "summary" : "Get quantity in shipments. For example, get planned quantity to be shipped",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "warehouseId",
          "in" : "path",
          "description" : "Warehouse identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ignoreShipped",
          "in" : "query",
          "description" : "Ignore already shipped shipments",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "ignoreDelivered",
          "in" : "query",
          "description" : "Ignore already delivered shipments",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethod/GetAll" : {
      "get" : {
        "tags" : [ "ShippingMethod" ],
        "summary" : "Gets all shipping methods",
        "parameters" : [ {
          "name" : "filterByCountryId",
          "in" : "query",
          "description" : "The country identifier to filter by",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShippingMethodDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethod/GetById/{id}" : {
      "get" : {
        "tags" : [ "ShippingMethod" ],
        "summary" : "Gets a shipping method",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The shipping method identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShippingMethodDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethod/Create" : {
      "post" : {
        "tags" : [ "ShippingMethod" ],
        "summary" : "Create a shipping method",
        "requestBody" : {
          "description" : "Shipping method Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShippingMethodDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethod/Update" : {
      "put" : {
        "tags" : [ "ShippingMethod" ],
        "summary" : "Update the shipping method",
        "requestBody" : {
          "description" : "Shipping method Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethod/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ShippingMethod" ],
        "summary" : "Delete a shipping method",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The shipping method identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethod/CountryRestrictionExists/{id}/{countryId}" : {
      "get" : {
        "tags" : [ "ShippingMethod" ],
        "summary" : "Does country restriction exist",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Shipping method identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Country identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethodCountryMapping/Get" : {
      "post" : {
        "tags" : [ "ShippingMethodCountryMapping" ],
        "summary" : "Gets shipping country mappings",
        "requestBody" : {
          "description" : "Shipping country mapping Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethodCountryMapping/Create" : {
      "post" : {
        "tags" : [ "ShippingMethodCountryMapping" ],
        "summary" : "Create a shipping country mapping",
        "requestBody" : {
          "description" : "Shipping country mapping Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShippingMethodCountryMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingMethodCountryMapping/Delete/{shippingMethodId}/{countryId}" : {
      "delete" : {
        "tags" : [ "ShippingMethodCountryMapping" ],
        "summary" : "Delete the shipping country mapping",
        "parameters" : [ {
          "name" : "shippingMethodId",
          "in" : "path",
          "description" : "The shipping method identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Country identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingWorkflow/GetShoppingCartItemWeight/{cartItemId}" : {
      "get" : {
        "tags" : [ "ShippingWorkflow" ],
        "summary" : "Gets shopping cart item weight (of one item)",
        "parameters" : [ {
          "name" : "cartItemId",
          "in" : "path",
          "description" : "Cart item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ignoreFreeShippedItems",
          "in" : "query",
          "description" : "Whether to ignore the weight of the products marked as \"Free shipping\"",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingWorkflow/GetShoppingCartItemWeight/{productId}" : {
      "post" : {
        "tags" : [ "ShippingWorkflow" ],
        "summary" : "Gets product item weight (of one item)",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ignoreFreeShippedItems",
          "in" : "query",
          "description" : "Whether to ignore the weight of the products marked as \"Free shipping\"",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Selected product attributes in XML",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingWorkflow/GetShippingOptions/{cartIds}/{shippingAddressId}" : {
      "get" : {
        "tags" : [ "ShippingWorkflow" ],
        "summary" : "Gets available shipping options",
        "parameters" : [ {
          "name" : "shoppingCartIds",
          "in" : "query",
          "description" : "Shopping cart identifiers (separator - ;)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shippingAddressId",
          "in" : "path",
          "description" : "Shipping address",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Load records allowed only to a specified customer; pass null to ignore ACL permissions",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "allowedShippingRateComputationMethodSystemName",
          "in" : "query",
          "description" : "Filter by shipping rate computation method identifier; null to load shipping options of all shipping rate computation methods",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Load records allowed only in a specified store; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "cartIds",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetShippingOptionResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingWorkflow/GetPickupPoints/{addressId}" : {
      "get" : {
        "tags" : [ "ShippingWorkflow" ],
        "summary" : "Gets available pickup points",
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "Address identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Load records allowed only to a specified customer; pass null to ignore ACL permissions",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "providerSystemName",
          "in" : "query",
          "description" : "Filter by provider identifier; null to load pickup points of all providers",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Load records allowed only in a specified store; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPickupPointsResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingWorkflow/IsShipEnabled/{cartItemId}" : {
      "get" : {
        "tags" : [ "ShippingWorkflow" ],
        "summary" : "Whether the shopping cart item is ship enabled",
        "parameters" : [ {
          "name" : "cartItemId",
          "in" : "path",
          "description" : "Cart item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingWorkflow/IsFreeShipping/{cartItemId}" : {
      "get" : {
        "tags" : [ "ShippingWorkflow" ],
        "summary" : "Whether the shopping cart item is free shipping",
        "parameters" : [ {
          "name" : "cartItemId",
          "in" : "path",
          "description" : "Cart item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShippingWorkflow/GetAdditionalShippingCharge/{cartItemId}" : {
      "get" : {
        "tags" : [ "ShippingWorkflow" ],
        "summary" : "Get the additional shipping charge",
        "parameters" : [ {
          "name" : "cartItemId",
          "in" : "path",
          "description" : "Cart item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetShoppingCart/{customerId}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Gets shopping cart",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "shoppingCartType",
          "in" : "query",
          "description" : "Shopping cart type; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShoppingCartType"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product identifier; pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "createdFromUtc",
          "in" : "query",
          "description" : "Created date from (UTC); pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdToUtc",
          "in" : "query",
          "description" : "Created date to (UTC); pass null to load all records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShoppingCartItemDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/Delete/{id}" : {
      "delete" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Delete shopping cart item",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Shopping cart item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "resetCheckoutData",
          "in" : "query",
          "description" : "A value indicating whether to reset checkout data",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "ensureOnlyActiveCheckoutAttributes",
          "in" : "query",
          "description" : "A value indicating whether to ensure that only active checkout attributes are attached to the current customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/DeleteExpired" : {
      "delete" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Deletes expired shopping cart items",
        "parameters" : [ {
          "name" : "olderThanUtc",
          "in" : "query",
          "description" : "Older than date and time",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetShoppingCartItemAttributeWarnings/{customerId}/{productId}" : {
      "post" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Validates shopping cart item attributes",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "shoppingCartType",
          "in" : "query",
          "description" : "Shopping cart type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShoppingCartType"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "Quantity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "ignoreNonCombinableAttributes",
          "in" : "query",
          "description" : "A value indicating whether we should ignore non-combinable attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "ignoreConditionMet",
          "in" : "query",
          "description" : "A value indicating whether we should ignore filtering by \"is condition met\" property",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "shoppingCartItemId",
          "in" : "query",
          "description" : "Shopping cart identifier; pass 0 if it's a new item",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string",
                "default" : ""
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string",
                "default" : ""
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string",
                "default" : ""
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string",
                "default" : ""
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetShoppingCartItemGiftCardWarnings/{productId}" : {
      "post" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Validates shopping cart item (gift card)",
        "parameters" : [ {
          "name" : "shoppingCartType",
          "in" : "query",
          "description" : "Shopping cart type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShoppingCartType"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetRentalProductWarnings/{productId}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Validates shopping cart item for rental products",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "rentalStartDate",
          "in" : "query",
          "description" : "Rental start date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "rentalEndDate",
          "in" : "query",
          "description" : "Rental end date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetShoppingCartItemWarnings/{customerId}/{productId}/{storeId}" : {
      "post" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Validates shopping cart item",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "shoppingCartType",
          "in" : "query",
          "description" : "Shopping cart type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShoppingCartType"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerEnteredPrice",
          "in" : "query",
          "description" : "Customer entered price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "rentalStartDate",
          "in" : "query",
          "description" : "Rental start date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "rentalEndDate",
          "in" : "query",
          "description" : "Rental end date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "Quantity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "addRequiredProducts",
          "in" : "query",
          "description" : "Whether to add required products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "shoppingCartItemId",
          "in" : "query",
          "description" : "Shopping cart identifier; pass 0 if it's a new item",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "getStandardWarnings",
          "in" : "query",
          "description" : "A value indicating whether we should validate a product for standard properties",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "getAttributesWarnings",
          "in" : "query",
          "description" : "A value indicating whether we should validate product attributes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "getGiftCardWarnings",
          "in" : "query",
          "description" : "A value indicating whether we should validate gift card properties",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "getRequiredProductWarnings",
          "in" : "query",
          "description" : "A value indicating whether we should validate required products (products which require other products to be added to the cart)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "getRentalWarnings",
          "in" : "query",
          "description" : "A value indicating whether we should validate rental properties",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/AddToCart/{customerId}/{productId}/{storeId}" : {
      "post" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Add a product to shopping cart",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "shoppingCartType",
          "in" : "query",
          "description" : "Shopping cart type",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShoppingCartType"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerEnteredPrice",
          "in" : "query",
          "description" : "The price enter by a customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0
          }
        }, {
          "name" : "rentalStartDate",
          "in" : "query",
          "description" : "Rental start date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "rentalEndDate",
          "in" : "query",
          "description" : "Rental end date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "Quantity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "addRequiredProducts",
          "in" : "query",
          "description" : "Whether to add required products",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/UpdateShoppingCartItem/{customerId}/{shoppingCartItemId}" : {
      "post" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Updates the shopping cart item",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "shoppingCartItemId",
          "in" : "path",
          "description" : "Shopping cart item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerEnteredPrice",
          "in" : "query",
          "description" : "New customer entered price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "rentalStartDate",
          "in" : "query",
          "description" : "Rental start date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "rentalEndDate",
          "in" : "query",
          "description" : "Rental end date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "New shopping cart item quantity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "resetCheckoutData",
          "in" : "query",
          "description" : "A value indicating whether to reset checkout data",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/MigrateShoppingCart/{fromCustomerId}/{toCustomerId}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Migrate shopping cart",
        "parameters" : [ {
          "name" : "fromCustomerId",
          "in" : "path",
          "description" : "From customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "toCustomerId",
          "in" : "path",
          "description" : "To customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeCouponCodes",
          "in" : "query",
          "description" : "A value indicating whether to coupon codes (discount and gift card) should be also re-applied",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetProductsRequiringProduct/{cartItemIds}/{productId}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Gets shopping cart shipping total",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetShoppingCartWarnings/{cartItemIds}" : {
      "post" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Validates whether this shopping cart is valid",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validateCheckoutAttributes",
          "in" : "query",
          "description" : "A value indicating whether to validate checkout attributes",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "Checkout attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetSubTotal/{cartItemId}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Gets the shopping cart item sub total",
        "parameters" : [ {
          "name" : "cartItemId",
          "in" : "path",
          "description" : "Cart item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeDiscounts",
          "in" : "query",
          "description" : "A value indicating whether include discounts or not for price computation",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSubTotalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetUnitPrice/{cartItemId}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Gets the shopping cart item sub total",
        "parameters" : [ {
          "name" : "cartItemId",
          "in" : "path",
          "description" : "Cart item identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeDiscounts",
          "in" : "query",
          "description" : "A value indicating whether include discounts or not for price computation",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetUnitPriceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/FindShoppingCartItemInTheCart/{cartItemIds}/{productId}" : {
      "post" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Finds a shopping cart item in the cart",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Shopping cart ids (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shoppingCartType",
          "in" : "query",
          "description" : "Shopping cart type (Shopping cart - 1, Wishlist - 2)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ShoppingCartType"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerEnteredPrice",
          "in" : "query",
          "description" : "Price entered by a customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0
          }
        }, {
          "name" : "rentalStartDate",
          "in" : "query",
          "description" : "Rental start date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "rentalEndDate",
          "in" : "query",
          "description" : "Rental end date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShoppingCartItemDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/ShoppingCartRequiresShipping/{cartItemIds}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Indicates whether the shopping cart requires shipping",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/ShoppingCartIsRecurring/{cartItemIds}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Gets a value indicating whether shopping cart is recurring",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/ShoppingCartItem/GetRecurringCycleInfo/{cartItemIds}" : {
      "get" : {
        "tags" : [ "ShoppingCartItem" ],
        "summary" : "Get a recurring cycle information",
        "parameters" : [ {
          "name" : "cartItemIds",
          "in" : "path",
          "description" : "Cart item identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRecurringCycleInfoResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/GetSpecificationAttributeByIds/{ids}" : {
      "get" : {
        "tags" : [ "SpecificationAttribute" ],
        "summary" : "Gets specification attributes",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "The specification attribute identifiers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/GetAllWithOptions" : {
      "get" : {
        "tags" : [ "SpecificationAttribute" ],
        "summary" : "Gets specification attributes",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SpecificationAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/GetAllByGroupId" : {
      "get" : {
        "tags" : [ "SpecificationAttribute" ],
        "summary" : "Gets specification attributes by group identifier",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "query",
          "description" : "The specification attribute group identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SpecificationAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/DeleteSpecificationAttributes/{ids}" : {
      "get" : {
        "tags" : [ "SpecificationAttribute" ],
        "summary" : "Deletes specifications attributes",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Specification attributes id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/Delete/{id}" : {
      "delete" : {
        "tags" : [ "SpecificationAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/GetById/{id}" : {
      "get" : {
        "tags" : [ "SpecificationAttribute" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationAttributeDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/GetAll" : {
      "get" : {
        "tags" : [ "SpecificationAttribute" ],
        "summary" : "Gets specification attributes",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationAttributeSpecificationAttributeDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/Create" : {
      "post" : {
        "tags" : [ "SpecificationAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttribute/Update" : {
      "put" : {
        "tags" : [ "SpecificationAttribute" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeGroup/Delete/{id}" : {
      "delete" : {
        "tags" : [ "SpecificationAttributeGroup" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeGroup/GetById/{id}" : {
      "get" : {
        "tags" : [ "SpecificationAttributeGroup" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeGroup/GetAll" : {
      "get" : {
        "tags" : [ "SpecificationAttributeGroup" ],
        "summary" : "Gets specification attribute groups",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationAttributeGroupSpecificationAttributeGroupDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeGroup/GetProductSpecificationAttributeGroups/{productId}" : {
      "get" : {
        "tags" : [ "SpecificationAttributeGroup" ],
        "summary" : "Gets product specification attribute groups",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeGroup/Create" : {
      "post" : {
        "tags" : [ "SpecificationAttributeGroup" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeGroup/Update" : {
      "put" : {
        "tags" : [ "SpecificationAttributeGroup" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/GetSpecificationAttributeOptionsByIds/{ids}" : {
      "get" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "summary" : "Get specification attribute options by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Identifiers",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/GetNotExistingSpecificationAttributeOptions/{ids}" : {
      "get" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "summary" : "Returns a list of IDs of not existing specification attribute options",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "The IDs of the attribute options to check",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/GetSpecificationAttributeOptionsBySpecificationAttribute/{specificationAttributeId}" : {
      "get" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "summary" : "Gets a specification attribute option by specification attribute id",
        "parameters" : [ {
          "name" : "specificationAttributeId",
          "in" : "path",
          "description" : "The specification attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/GetFiltrableSpecificationAttributeOptionsByCategoryId/{categoryId}" : {
      "get" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "summary" : "Gets the filtrable specification attribute options by category id",
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "The category id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/GetFiltrableSpecificationAttributeOptionsByManufacturerId/{manufacturerId}" : {
      "get" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "summary" : "Gets the filtrable specification attribute options by manufacturer id",
        "parameters" : [ {
          "name" : "manufacturerId",
          "in" : "path",
          "description" : "The manufacturer id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/Delete/{id}" : {
      "delete" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/GetById/{id}" : {
      "get" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/Create" : {
      "post" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/SpecificationAttributeOption/Update" : {
      "put" : {
        "tags" : [ "SpecificationAttributeOption" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationAttributeOptionDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StateProvince/GetStateProvinceByAbbreviation" : {
      "get" : {
        "tags" : [ "StateProvince" ],
        "summary" : "Gets a state/province by abbreviation",
        "parameters" : [ {
          "name" : "abbreviation",
          "in" : "query",
          "description" : "The state/province abbreviation",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "Country identifier; pass null to load the state regardless of a country",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateProvinceDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StateProvince/GetStateProvinceByAddress/{addressId}" : {
      "get" : {
        "tags" : [ "StateProvince" ],
        "summary" : "Gets a state/province by address",
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "Address identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateProvinceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StateProvince/GetStateProvincesByCountryId/{countryId}" : {
      "get" : {
        "tags" : [ "StateProvince" ],
        "summary" : "Gets a state/province collection by country identifier",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "description" : "Country identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier. It's used to sort states by localized names (if specified); pass 0 to skip it",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StateProvinceDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StateProvince/Delete/{id}" : {
      "delete" : {
        "tags" : [ "StateProvince" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StateProvince/GetById/{id}" : {
      "get" : {
        "tags" : [ "StateProvince" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateProvinceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StateProvince/GetAll" : {
      "get" : {
        "tags" : [ "StateProvince" ],
        "summary" : "Gets all states/provinces",
        "parameters" : [ {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StateProvinceDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StateProvince/Create" : {
      "post" : {
        "tags" : [ "StateProvince" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateProvinceDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateProvinceDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateProvinceDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateProvinceDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateProvinceDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StateProvince/Update" : {
      "put" : {
        "tags" : [ "StateProvince" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateProvinceDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateProvinceDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateProvinceDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateProvinceDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Store/GetAll" : {
      "get" : {
        "tags" : [ "Store" ],
        "summary" : "Gets all stores",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StoreDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Store/GetById/{id}" : {
      "get" : {
        "tags" : [ "Store" ],
        "summary" : "Gets a store",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StoreDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Store/Create" : {
      "post" : {
        "tags" : [ "Store" ],
        "summary" : "Create a store",
        "requestBody" : {
          "description" : "Store Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StoreDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Store/Update" : {
      "put" : {
        "tags" : [ "Store" ],
        "summary" : "Update a store",
        "requestBody" : {
          "description" : "Store Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Store/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Store" ],
        "summary" : "Delete a store",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Store/ContainsHostValue/{id}" : {
      "get" : {
        "tags" : [ "Store" ],
        "summary" : "Indicates whether a store contains a specified host",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "host",
          "in" : "query",
          "description" : "Host",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Store/GetNotExistingStores/{ids}" : {
      "get" : {
        "tags" : [ "Store" ],
        "summary" : "Returns a list of names of not existing stores",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "The names and/or IDs of the store to check (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StoreMapping/GetStoresIdsWithAccess/{entityId}" : {
      "get" : {
        "tags" : [ "StoreMapping" ],
        "summary" : "Find store identifiers with granted access (mapped to the entity)",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StoreMapping/Authorize/{storeId}/{entityId}" : {
      "post" : {
        "tags" : [ "StoreMapping" ],
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectToAcl",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StoreMapping/Delete/{id}" : {
      "delete" : {
        "tags" : [ "StoreMapping" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StoreMapping/GetStoreMappings/{entityId}" : {
      "get" : {
        "tags" : [ "StoreMapping" ],
        "summary" : "Gets store mapping records",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StoreMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/StoreMapping/Create" : {
      "post" : {
        "tags" : [ "StoreMapping" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreMappingDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreMappingDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreMappingDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StoreMappingDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StoreMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Tax/GetProductPrice/{productId}/{taxCategoryId}/{customerId}" : {
      "get" : {
        "tags" : [ "Tax" ],
        "summary" : "Gets price",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "taxCategoryId",
          "in" : "path",
          "description" : "Tax category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "includingTax",
          "in" : "query",
          "description" : "A value indicating whether calculated price should include tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "priceIncludesTax",
          "in" : "query",
          "description" : "A value indicating whether price already includes tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPriceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Tax/GetShippingPrice/{customerId}" : {
      "get" : {
        "tags" : [ "Tax" ],
        "summary" : "Gets shipping price",
        "parameters" : [ {
          "name" : "price",
          "in" : "query",
          "description" : "Price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "includingTax",
          "in" : "query",
          "description" : "A value indicating whether calculated price should include tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPriceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Tax/GetPaymentMethodAdditionalFee/{customerId}" : {
      "get" : {
        "tags" : [ "Tax" ],
        "summary" : "Gets payment method additional handling fee",
        "parameters" : [ {
          "name" : "price",
          "in" : "query",
          "description" : "Price",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "includingTax",
          "in" : "query",
          "description" : "A value indicating whether calculated price should include tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPriceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Tax/GetCheckoutAttributePrice/{checkoutAttributeId}/{checkoutAttributeValueId}/{customerId}" : {
      "get" : {
        "tags" : [ "Tax" ],
        "summary" : "Gets checkout attribute value price",
        "parameters" : [ {
          "name" : "checkoutAttributeId",
          "in" : "path",
          "description" : "Checkout attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "checkoutAttributeValueId",
          "in" : "path",
          "description" : "Checkout attribute value identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includingTax",
          "in" : "query",
          "description" : "A value indicating whether calculated price should include tax",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPriceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Tax/GetVatNumberStatus" : {
      "get" : {
        "tags" : [ "Tax" ],
        "summary" : "Gets VAT Number status",
        "parameters" : [ {
          "name" : "fullVatNumber",
          "in" : "query",
          "description" : "Two letter ISO code of a country and VAT number (e.g. GB 111 1111 111)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVatNumberStatusResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Tax/GetTaxTotal/{customerId}/{storeId}" : {
      "get" : {
        "tags" : [ "Tax" ],
        "summary" : "Get tax total for the passed shopping cart",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "usePaymentMethodAdditionalFee",
          "in" : "query",
          "description" : "A value indicating whether we should use payment method additional fee when calculating tax",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetTaxTotalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Tax/IsTaxExempt/{productId}/{customerId}" : {
      "get" : {
        "tags" : [ "Tax" ],
        "summary" : "Gets a value indicating whether a product is tax exempt",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TaxCategory/GetAll" : {
      "get" : {
        "tags" : [ "TaxCategory" ],
        "summary" : "Gets all tax categories",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaxCategoryDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TaxCategory/GetById/{id}" : {
      "get" : {
        "tags" : [ "TaxCategory" ],
        "summary" : "Gets a tax category",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Tax category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaxCategoryDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TaxCategory/Create" : {
      "post" : {
        "tags" : [ "TaxCategory" ],
        "summary" : "Create a tax category",
        "requestBody" : {
          "description" : "Tax category Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxCategoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxCategoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxCategoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxCategoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaxCategoryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TaxCategory/Update" : {
      "put" : {
        "tags" : [ "TaxCategory" ],
        "summary" : "Update a tax category",
        "requestBody" : {
          "description" : "Tax category Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxCategoryDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxCategoryDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxCategoryDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxCategoryDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TaxCategory/Delete/{id}" : {
      "delete" : {
        "tags" : [ "TaxCategory" ],
        "summary" : "Delete a tax category",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Tax category identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TierPrices/GetTierPrices/{productId}/{customerId}/{storeId}" : {
      "get" : {
        "tags" : [ "TierPrices" ],
        "summary" : "Gets a product tier prices for customer",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TierPriceDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TierPrices/GetTierPricesByProduct/{productId}" : {
      "get" : {
        "tags" : [ "TierPrices" ],
        "summary" : "Gets a tier prices by product identifier",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TierPriceDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TierPrices/GetPreferredTierPrice/{productId}/{customerId}/{storeId}" : {
      "get" : {
        "tags" : [ "TierPrices" ],
        "summary" : "Gets a preferred tier price",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerId",
          "in" : "path",
          "description" : "Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "Quantity",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TierPriceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TierPrices/Delete/{id}" : {
      "delete" : {
        "tags" : [ "TierPrices" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TierPrices/GetById/{id}" : {
      "get" : {
        "tags" : [ "TierPrices" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TierPriceDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TierPrices/Create" : {
      "post" : {
        "tags" : [ "TierPrices" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TierPriceDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TierPriceDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TierPriceDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TierPriceDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TierPriceDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TierPrices/Update" : {
      "put" : {
        "tags" : [ "TierPrices" ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TierPriceDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TierPriceDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TierPriceDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TierPriceDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Topic/Create" : {
      "post" : {
        "tags" : [ "Topic" ],
        "summary" : "Create topic",
        "requestBody" : {
          "description" : "Topic Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopicDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Topic/Update" : {
      "put" : {
        "tags" : [ "Topic" ],
        "summary" : "Update topic by Id",
        "requestBody" : {
          "description" : "Topic Dto",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Topic/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Topic" ],
        "summary" : "Delete topic",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Topic/GetById/{id}" : {
      "get" : {
        "tags" : [ "Topic" ],
        "summary" : "Gets a topic",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The topic identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopicDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Topic/GetBySystemName" : {
      "get" : {
        "tags" : [ "Topic" ],
        "summary" : "Gets a topic",
        "parameters" : [ {
          "name" : "systemName",
          "in" : "query",
          "description" : "The topic system name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storeId",
          "in" : "query",
          "description" : "Store identifier; pass 0 to ignore filtering by store and load the first one",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopicDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Topic/GetAll/{storeId}" : {
      "get" : {
        "tags" : [ "Topic" ],
        "summary" : "Gets all topics",
        "parameters" : [ {
          "name" : "storeId",
          "in" : "path",
          "description" : "Store identifier; pass 0 to load all records",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Keywords to search into body or title",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ignoreAcl",
          "in" : "query",
          "description" : "A value indicating whether to ignore ACL rules",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden topics",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "onlyIncludedInTopMenu",
          "in" : "query",
          "description" : "A value indicating whether to show only topics which include on the top menu",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TopicDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TopicTemplate/GetAll" : {
      "get" : {
        "tags" : [ "TopicTemplate" ],
        "summary" : "Gets all topic templates",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TopicTemplateDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TopicTemplate/GetById/{id}" : {
      "get" : {
        "tags" : [ "TopicTemplate" ],
        "summary" : "Gets a topic template",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic template identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopicTemplateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TopicTemplate/Create" : {
      "post" : {
        "tags" : [ "TopicTemplate" ],
        "summary" : "Create topic template",
        "requestBody" : {
          "description" : "Topic template Dto",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TopicTemplateDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TopicTemplate/Update" : {
      "put" : {
        "tags" : [ "TopicTemplate" ],
        "summary" : "Upadete topic by Id",
        "requestBody" : {
          "description" : "Topic Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicTemplateDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicTemplateDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicTemplateDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TopicTemplateDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/TopicTemplate/Delete/{id}" : {
      "delete" : {
        "tags" : [ "TopicTemplate" ],
        "summary" : "Delete topic template",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic template identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/GetAll" : {
      "get" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Gets all URL records",
        "parameters" : [ {
          "name" : "slug",
          "in" : "query",
          "description" : "Slug",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language ID; \"null\" to load records with any language; \"0\" to load records with standard language only; otherwise to load records with specify language ID only",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "A value indicating whether to get active records; \"null\" to load all records; \"false\" to load only inactive records; \"true\" to load only active records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UrlRecordUrlRecordDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/GetByIds/{ids}" : {
      "get" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Gets an URL records by identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of URL record identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UrlRecordDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/GetBySlug" : {
      "get" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Gets a URL record by slug",
        "parameters" : [ {
          "name" : "slug",
          "in" : "query",
          "description" : "Slug",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UrlRecordDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/Create" : {
      "post" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Create a URL record",
        "requestBody" : {
          "description" : "URL record Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UrlRecordDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UrlRecordDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UrlRecordDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UrlRecordDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UrlRecordDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/Delete/{ids}" : {
      "delete" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Delete a URL records",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of URL record identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/Update" : {
      "put" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Updates the URL record",
        "requestBody" : {
          "description" : "URL record Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UrlRecordDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UrlRecordDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UrlRecordDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UrlRecordDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/GetActiveSlug/{entityId}/{languageId}" : {
      "get" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Find slug",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityName",
          "in" : "query",
          "description" : "Entity name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "path",
          "description" : "Language identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/GetSeName/{entityId}" : {
      "get" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Get search engine friendly name (slug)",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "description" : "Entity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityName",
          "in" : "query",
          "description" : "Entity name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Language identifier; pass null to use the current language",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "returnDefaultValue",
          "in" : "query",
          "description" : "A value indicating whether to return default value (if language specified one is not found)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "ensureTwoPublishedLanguages",
          "in" : "query",
          "description" : "A value indicating whether to ensure that we have at least two published languages; otherwise, load only default value",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/GetSeName" : {
      "get" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Get SE name",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "convertNonWesternChars",
          "in" : "query",
          "description" : "A value indicating whether non western chars should be converted",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "allowUnicodeCharsInUrls",
          "in" : "query",
          "description" : "A value indicating whether Unicode chars are allowed",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/ValidateSeName/entityId" : {
      "post" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Validate search engine name",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "query",
          "description" : "Entity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityName",
          "in" : "query",
          "description" : "Entity name",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "seName",
          "in" : "query",
          "description" : "Search engine name to validate",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "User-friendly name used to generate sename",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ensureNotEmpty",
          "in" : "query",
          "description" : "Ensure that sename is not empty",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/UrlRecord/SaveSlug/{languageId}/{entityId}" : {
      "post" : {
        "tags" : [ "UrlRecord" ],
        "summary" : "Save slug",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "entityTypeName",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "slug",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/GetAll" : {
      "get" : {
        "tags" : [ "Vendor" ],
        "summary" : "Gets all vendors",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Vendor name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Vendor email",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        }, {
          "name" : "showHidden",
          "in" : "query",
          "description" : "A value indicating whether to show hidden records",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorVendorDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/GetById/{id}" : {
      "get" : {
        "tags" : [ "Vendor" ],
        "summary" : "Gets a vendor by vendor identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The vendor identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/GetByProductId/{id}" : {
      "get" : {
        "tags" : [ "Vendor" ],
        "summary" : "Gets a vendor by product identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The vendor identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/GetByProductIds/{ids}" : {
      "get" : {
        "tags" : [ "Vendor" ],
        "summary" : "Gets a vendor by product identifier",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of vendor identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VendorDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/GetByCustomerIds/{ids}" : {
      "get" : {
        "tags" : [ "Vendor" ],
        "summary" : "Gets a vendors by customers identifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "path",
          "description" : "Array of customer identifiers (separator - ;)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VendorDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Vendor" ],
        "summary" : "Delete a vendor",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Vendor identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/Create" : {
      "post" : {
        "tags" : [ "Vendor" ],
        "summary" : "Create a vendor",
        "requestBody" : {
          "description" : "Vendor Dto",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/Update" : {
      "put" : {
        "tags" : [ "Vendor" ],
        "summary" : "Updates the vendor",
        "requestBody" : {
          "description" : "Vendor Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/GetVendorNoteById/{vendorNoteId}" : {
      "get" : {
        "tags" : [ "Vendor" ],
        "summary" : "Gets a vendor note",
        "parameters" : [ {
          "name" : "vendorNoteId",
          "in" : "path",
          "description" : "The vendor note identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorNoteDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/GetVendorNotesByVendor/{vendorId}" : {
      "get" : {
        "tags" : [ "Vendor" ],
        "summary" : "Gets all vendor notes",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "path",
          "description" : "Vendor identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2147483647
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorNoteVendorNoteDtoPagedListDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/DeleteVendorNote/{id}" : {
      "delete" : {
        "tags" : [ "Vendor" ],
        "summary" : "Deletes a vendor note",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The vendor note id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Vendor/InsertVendorNote" : {
      "put" : {
        "tags" : [ "Vendor" ],
        "summary" : "Inserts a vendor note",
        "requestBody" : {
          "description" : "Vendor note",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorNoteDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorNoteDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorNoteDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorNoteDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttribute/GetAll" : {
      "get" : {
        "tags" : [ "VendorAttribute" ],
        "summary" : "Gets all vendor attributes",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VendorAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttribute/GetById/{id}" : {
      "get" : {
        "tags" : [ "VendorAttribute" ],
        "summary" : "Gets a vendor attributes by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttribute/Create" : {
      "post" : {
        "tags" : [ "VendorAttribute" ],
        "summary" : "Create a vendor attribute",
        "requestBody" : {
          "description" : "Vendor attribute Dto",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorAttributeDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttribute/Update" : {
      "put" : {
        "tags" : [ "VendorAttribute" ],
        "summary" : "Updates the vendor attribute",
        "requestBody" : {
          "description" : "Vendor attribute Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttribute/Delete/{id}" : {
      "delete" : {
        "tags" : [ "VendorAttribute" ],
        "summary" : "Delete a vendor attribute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Vendor attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeFormatter/FormatAttributes" : {
      "post" : {
        "tags" : [ "VendorAttributeFormatter" ],
        "summary" : "Format vendor attributes",
        "parameters" : [ {
          "name" : "separator",
          "in" : "query",
          "description" : "Separator",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "<br />"
          }
        }, {
          "name" : "htmlEncode",
          "in" : "query",
          "description" : "A value indicating whether to encode (HTML) values",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeParser/ParseVendorAttributes" : {
      "post" : {
        "tags" : [ "VendorAttributeParser" ],
        "summary" : "Gets vendor attributes from XML",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VendorAttributeDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeParser/ParseVendorAttributeValues" : {
      "post" : {
        "tags" : [ "VendorAttributeParser" ],
        "summary" : "Get vendor attribute values from XML",
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VendorAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeParser/ParseValues/{attributeId}" : {
      "post" : {
        "tags" : [ "VendorAttributeParser" ],
        "summary" : "Gets values of the selected vendor attribute",
        "parameters" : [ {
          "name" : "attributeId",
          "in" : "path",
          "description" : "Vendor attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeParser/AddVendorAttribute/{vendorAttributeId}" : {
      "post" : {
        "tags" : [ "VendorAttributeParser" ],
        "summary" : "Adds a vendor attribute",
        "parameters" : [ {
          "name" : "vendorAttributeId",
          "in" : "path",
          "description" : "Vendor attribute Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Value",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Attributes in XML format",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeParser/GetAttributeWarnings" : {
      "post" : {
        "tags" : [ "VendorAttributeParser" ],
        "summary" : "Validates vendor attributes",
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/*+json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeValue/GetById/{id}" : {
      "get" : {
        "tags" : [ "VendorAttributeValue" ],
        "summary" : "Gets a vendor attribute value by identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Vendor attribute value identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorAttributeValueDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeValue/GetByVendorAttributeId/{id}" : {
      "get" : {
        "tags" : [ "VendorAttributeValue" ],
        "summary" : "Gets vendor attribute values by vendor attribute identifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The vendor attribute identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VendorAttributeValueDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeValue/Create" : {
      "post" : {
        "tags" : [ "VendorAttributeValue" ],
        "summary" : "Create a vendor attribute value",
        "requestBody" : {
          "description" : "Vendor attribute value Dto",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VendorAttributeValueDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeValue/Update" : {
      "put" : {
        "tags" : [ "VendorAttributeValue" ],
        "summary" : "Updates the vendor attribute value",
        "requestBody" : {
          "description" : "Vendor attribute value Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeValueDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeValueDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeValueDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VendorAttributeValueDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/VendorAttributeValue/Delete/{id}" : {
      "delete" : {
        "tags" : [ "VendorAttributeValue" ],
        "summary" : "Delete a vendor attribute value",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Vendor attribute value identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Warehouse/GetAll" : {
      "get" : {
        "tags" : [ "Warehouse" ],
        "summary" : "Gets all warehouses",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Warehouse name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WarehouseDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Warehouse/GetById/{id}" : {
      "get" : {
        "tags" : [ "Warehouse" ],
        "summary" : "Gets a warehouse",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The warehouse identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WarehouseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Warehouse/Create" : {
      "post" : {
        "tags" : [ "Warehouse" ],
        "summary" : "Create a warehouse",
        "requestBody" : {
          "description" : "Warehouse Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WarehouseDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WarehouseDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WarehouseDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WarehouseDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StoreDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Warehouse/Update" : {
      "put" : {
        "tags" : [ "Warehouse" ],
        "summary" : "Update a warehouse",
        "requestBody" : {
          "description" : "Warehouse Dto model",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WarehouseDto"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WarehouseDto"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WarehouseDto"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WarehouseDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Warehouse/Delete/{id}" : {
      "delete" : {
        "tags" : [ "Warehouse" ],
        "summary" : "Delete a warehouse",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Warehouse identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api-backend/Warehouse/GetNearestWarehouse/{addressId}" : {
      "get" : {
        "tags" : [ "Warehouse" ],
        "summary" : "Get the nearest warehouse for the specified address",
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "Address",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "warehousesIds",
          "in" : "query",
          "description" : "List of warehouses, if null all warehouses are used. (separator - ;)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WarehouseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AclRecordDto" : {
        "type" : "object",
        "properties" : {
          "entity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the entity identifier",
            "format" : "int32"
          },
          "entity_name" : {
            "type" : "string",
            "description" : "Gets or sets the entity name",
            "nullable" : true
          },
          "customer_role_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer role identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an ACL record"
      },
      "ActivityLogActivityLogDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActivityLogDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ActivityLogDto" : {
        "type" : "object",
        "properties" : {
          "activity_log_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the activity log type identifier",
            "format" : "int32"
          },
          "entity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the entity identifier",
            "format" : "int32",
            "nullable" : true
          },
          "entity_name" : {
            "type" : "string",
            "description" : "Gets or sets the entity name",
            "nullable" : true
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "comment" : {
            "type" : "string",
            "description" : "Gets or sets the activity comment",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "ip_address" : {
            "type" : "string",
            "description" : "Gets or sets the IP address",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an activity log record"
      },
      "ActivityLogTypeDto" : {
        "type" : "object",
        "properties" : {
          "system_keyword" : {
            "type" : "string",
            "description" : "Gets or sets the system keyword",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the display name",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the activity log type is enabled"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an activity log type record"
      },
      "AddressAttributeDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "is_required" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the attribute is required"
          },
          "attribute_control_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the attribute control type identifier",
            "format" : "int32"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an address attribute"
      },
      "AddressAttributeValueDto" : {
        "type" : "object",
        "properties" : {
          "address_attribute_id" : {
            "type" : "integer",
            "description" : "Gets or sets the address attribute identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the checkout attribute name",
            "nullable" : true
          },
          "is_pre_selected" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the value is pre-selected"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an address attribute value"
      },
      "AddressDto" : {
        "type" : "object",
        "properties" : {
          "first_name" : {
            "type" : "string",
            "description" : "Gets or sets the first name",
            "nullable" : true
          },
          "last_name" : {
            "type" : "string",
            "description" : "Gets or sets the last name",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "description" : "Gets or sets the email",
            "nullable" : true
          },
          "company" : {
            "type" : "string",
            "description" : "Gets or sets the company",
            "nullable" : true
          },
          "country_id" : {
            "type" : "integer",
            "description" : "Gets or sets the country identifier",
            "format" : "int32",
            "nullable" : true
          },
          "state_province_id" : {
            "type" : "integer",
            "description" : "Gets or sets the state/province identifier",
            "format" : "int32",
            "nullable" : true
          },
          "county" : {
            "type" : "string",
            "description" : "Gets or sets the county",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "description" : "Gets or sets the city",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "description" : "Gets or sets the address 1",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "description" : "Gets or sets the address 2",
            "nullable" : true
          },
          "zip_postal_code" : {
            "type" : "string",
            "description" : "Gets or sets the zip/postal code",
            "nullable" : true
          },
          "phone_number" : {
            "type" : "string",
            "description" : "Gets or sets the phone number",
            "nullable" : true
          },
          "fax_number" : {
            "type" : "string",
            "description" : "Gets or sets the fax number",
            "nullable" : true
          },
          "custom_attributes" : {
            "type" : "string",
            "description" : "Gets or sets the custom attributes (see \"AddressAttribute\" entity for more info)",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an address"
      },
      "AdjustShippingRateResponse" : {
        "type" : "object",
        "properties" : {
          "adjusted_shipping_rate" : {
            "type" : "number",
            "description" : "Adjusted shipping rate",
            "format" : "double"
          },
          "applied_discounts" : {
            "type" : "array",
            "description" : "Applied discounts",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountDto"
            }
          }
        },
        "additionalProperties" : false
      },
      "AffiliateDto" : {
        "type" : "object",
        "properties" : {
          "address_id" : {
            "type" : "integer",
            "description" : "Gets or sets the address identifier",
            "format" : "int32"
          },
          "admin_comment" : {
            "type" : "string",
            "description" : "Gets or sets the admin comment",
            "nullable" : true
          },
          "friendly_url_name" : {
            "type" : "string",
            "description" : "Gets or sets the friendly name for generated affiliate URL (by default affiliate ID is used)",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity has been deleted"
          },
          "active" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is active"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an affiliate"
      },
      "AppliedGiftCardResponseDto" : {
        "type" : "object",
        "properties" : {
          "amount_can_be_used" : {
            "type" : "number",
            "description" : "Gets or sets the used value",
            "format" : "double"
          },
          "gift_card" : {
            "$ref" : "#/components/schemas/GiftCardDto"
          }
        },
        "additionalProperties" : false,
        "description" : "Applied gift card"
      },
      "AreProductAttributesEqualRequest" : {
        "type" : "object",
        "properties" : {
          "attributes_xml1" : {
            "type" : "string",
            "description" : "The attributes of the first product",
            "nullable" : true
          },
          "attributes_xml2" : {
            "type" : "string",
            "description" : "The attributes of the second product",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "AuthenticateAdminRequest" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "AuthenticateResponse" : {
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "customer_id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "token" : {
            "type" : "string"
          }
        },
        "additionalProperties" : false
      },
      "BackInStockSubscriptionBackInStockSubscriptionDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/BackInStockSubscriptionDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "BackInStockSubscriptionDto" : {
        "type" : "object",
        "properties" : {
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a back in stock subscription"
      },
      "BestCustomerReportLineBestCustomerReportLineDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/BestCustomerReportLineDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "BestCustomerReportLineDto" : {
        "type" : "object",
        "properties" : {
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "order_total" : {
            "type" : "number",
            "description" : "Gets or sets the order total",
            "format" : "double"
          },
          "order_count" : {
            "type" : "integer",
            "description" : "Gets or sets the order count",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a best customer report line"
      },
      "BestsellersReportLineBestsellersReportLineDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/BestsellersReportLineDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "BestsellersReportLineDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "total_amount" : {
            "type" : "number",
            "description" : "Gets or sets the total amount",
            "format" : "double"
          },
          "total_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the total quantity",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a best sellers report line"
      },
      "BlogPostBlogPostDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/BlogPostDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "BlogPostDto" : {
        "type" : "object",
        "properties" : {
          "language_id" : {
            "type" : "integer",
            "description" : "Gets or sets the language identifier",
            "format" : "int32"
          },
          "include_in_sitemap" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this blog post should be included in sitemap"
          },
          "title" : {
            "type" : "string",
            "description" : "Gets or sets the blog post title",
            "nullable" : true
          },
          "body" : {
            "type" : "string",
            "description" : "Gets or sets the blog post body",
            "nullable" : true
          },
          "body_overview" : {
            "type" : "string",
            "description" : "Gets or sets the blog post overview. If specified, then it's used on the blog page instead of the \"Body\"",
            "nullable" : true
          },
          "allow_comments" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the blog post comments are allowed"
          },
          "tags" : {
            "type" : "string",
            "description" : "Gets or sets the blog tags",
            "nullable" : true
          },
          "start_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the blog post start date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "end_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the blog post end date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "meta_keywords" : {
            "type" : "string",
            "description" : "Gets or sets the meta keywords",
            "nullable" : true
          },
          "meta_description" : {
            "type" : "string",
            "description" : "Gets or sets the meta description",
            "nullable" : true
          },
          "meta_title" : {
            "type" : "string",
            "description" : "Gets or sets the meta title",
            "nullable" : true
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of entity creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a blog post"
      },
      "CampaignDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "subject" : {
            "type" : "string",
            "description" : "Gets or sets the subject",
            "nullable" : true
          },
          "body" : {
            "type" : "string",
            "description" : "Gets or sets the body",
            "nullable" : true
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier  which subscribers it will be sent to; set 0 for all newsletter subscribers",
            "format" : "int32"
          },
          "customer_role_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer role identifier  which subscribers it will be sent to; set 0 for all newsletter subscribers",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "dont_send_before_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time in UTC before which this email should not be sent",
            "format" : "date-time",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a campaign"
      },
      "CategoryCategoryDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CategoryDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "CategoryDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets the description",
            "nullable" : true
          },
          "category_template_id" : {
            "type" : "integer",
            "description" : "Gets or sets a value of used category template identifier",
            "format" : "int32"
          },
          "meta_keywords" : {
            "type" : "string",
            "description" : "Gets or sets the meta keywords",
            "nullable" : true
          },
          "meta_description" : {
            "type" : "string",
            "description" : "Gets or sets the meta description",
            "nullable" : true
          },
          "meta_title" : {
            "type" : "string",
            "description" : "Gets or sets the meta title",
            "nullable" : true
          },
          "parent_category_id" : {
            "type" : "integer",
            "description" : "Gets or sets the parent category identifier",
            "format" : "int32"
          },
          "picture_id" : {
            "type" : "integer",
            "description" : "Gets or sets the picture identifier",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "description" : "Gets or sets the page size",
            "format" : "int32"
          },
          "allow_customers_to_select_page_size" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether customers can select the page size"
          },
          "page_size_options" : {
            "type" : "string",
            "description" : "Gets or sets the available customer selectable page size options",
            "nullable" : true
          },
          "show_on_homepage" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to show the category on home page"
          },
          "include_in_top_menu" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to include this category in the top menu"
          },
          "subject_to_acl" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is subject to ACL"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is published"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity has been deleted"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance update",
            "format" : "date-time"
          },
          "price_range_filtering" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the price range filtering is enabled"
          },
          "price_from" : {
            "type" : "number",
            "description" : "Gets or sets the \"from\" price",
            "format" : "double"
          },
          "price_to" : {
            "type" : "number",
            "description" : "Gets or sets the \"to\" price",
            "format" : "double"
          },
          "manually_price_range" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the price range should be entered manually"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a category"
      },
      "CategoryTemplateDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the template name",
            "nullable" : true
          },
          "view_path" : {
            "type" : "string",
            "description" : "Gets or sets the view path",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a category template"
      },
      "ChangePasswordResult" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean",
            "description" : "Gets a value indicating whether request has been completed successfully"
          },
          "Errors" : {
            "type" : "array",
            "description" : "Errors",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "CheckoutAttributeDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "text_prompt" : {
            "type" : "string",
            "description" : "Gets or sets the text prompt",
            "nullable" : true
          },
          "is_required" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is required"
          },
          "shippable_product_required" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether shippable products are required in order to display this attribute"
          },
          "is_tax_exempt" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the attribute is marked as tax exempt"
          },
          "tax_category_id" : {
            "type" : "integer",
            "description" : "Gets or sets the tax category identifier",
            "format" : "int32"
          },
          "attribute_control_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the attribute control type identifier",
            "format" : "int32"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "validation_min_length" : {
            "type" : "integer",
            "description" : "Gets or sets the validation rule for minimum length (for textbox and multiline textbox)",
            "format" : "int32",
            "nullable" : true
          },
          "validation_max_length" : {
            "type" : "integer",
            "description" : "Gets or sets the validation rule for maximum length (for textbox and multiline textbox)",
            "format" : "int32",
            "nullable" : true
          },
          "validation_file_allowed_extensions" : {
            "type" : "string",
            "description" : "Gets or sets the validation rule for file allowed extensions (for file upload)",
            "nullable" : true
          },
          "validation_file_maximum_size" : {
            "type" : "integer",
            "description" : "Gets or sets the validation rule for file maximum size in kilobytes (for file upload)",
            "format" : "int32",
            "nullable" : true
          },
          "default_value" : {
            "type" : "string",
            "description" : "Gets or sets the default value (for textbox and multiline textbox)",
            "nullable" : true
          },
          "condition_attribute_xml" : {
            "type" : "string",
            "description" : "Gets or sets a condition (depending on other attribute) when this attribute should be enabled (visible).",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a checkout attribute"
      },
      "CheckoutAttributeValueDto" : {
        "type" : "object",
        "properties" : {
          "checkout_attribute_id" : {
            "type" : "integer",
            "description" : "Gets or sets the checkout attribute mapping identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the checkout attribute name",
            "nullable" : true
          },
          "color_squares_rgb" : {
            "type" : "string",
            "description" : "Gets or sets the color RGB value (used with \"Color squares\" attribute type)",
            "nullable" : true
          },
          "price_adjustment" : {
            "type" : "number",
            "description" : "Gets or sets the price adjustment",
            "format" : "double"
          },
          "weight_adjustment" : {
            "type" : "number",
            "description" : "Gets or sets the weight adjustment",
            "format" : "double"
          },
          "is_pre_selected" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the value is pre-selected"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a checkout attribute value"
      },
      "CountryDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "allows_billing" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether billing is allowed to this country"
          },
          "allows_shipping" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether shipping is allowed to this country"
          },
          "two_letter_iso_code" : {
            "type" : "string",
            "description" : "Gets or sets the two letter ISO code",
            "nullable" : true
          },
          "three_letter_iso_code" : {
            "type" : "string",
            "description" : "Gets or sets the three letter ISO code",
            "nullable" : true
          },
          "numeric_iso_code" : {
            "type" : "integer",
            "description" : "Gets or sets the numeric ISO code",
            "format" : "int32"
          },
          "subject_to_vat" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether customers in this country must be charged EU VAT"
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is published"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a country"
      },
      "CrossSellProductDto" : {
        "type" : "object",
        "properties" : {
          "product_id1" : {
            "type" : "integer",
            "description" : "Gets or sets the first product identifier",
            "format" : "int32"
          },
          "product_id2" : {
            "type" : "integer",
            "description" : "Gets or sets the second product identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a cross-sell product"
      },
      "CurrencyCurrencyDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CurrencyDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "CurrencyDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "currency_code" : {
            "type" : "string",
            "description" : "Gets or sets the currency code",
            "nullable" : true
          },
          "rate" : {
            "type" : "number",
            "description" : "Gets or sets the rate",
            "format" : "double"
          },
          "display_locale" : {
            "type" : "string",
            "description" : "Gets or sets the display locale",
            "nullable" : true
          },
          "custom_formatting" : {
            "type" : "string",
            "description" : "Gets or sets the custom formatting",
            "nullable" : true
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is published"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance update",
            "format" : "date-time"
          },
          "rounding_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the rounding type identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a currency"
      },
      "CustomerAttributeDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "is_required" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the attribute is required"
          },
          "attribute_control_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the attribute control type identifier",
            "format" : "int32"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a customer attribute"
      },
      "CustomerAttributeValueDto" : {
        "type" : "object",
        "properties" : {
          "customer_attribute_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer attribute identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the checkout attribute name",
            "nullable" : true
          },
          "is_pre_selected" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the value is pre-selected"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a customer attribute value"
      },
      "CustomerCustomerDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CustomerDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "CustomerCustomerRoleMappingDto" : {
        "type" : "object",
        "properties" : {
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "customer_role_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer role identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a customer-customer role mapping"
      },
      "CustomerDto" : {
        "type" : "object",
        "properties" : {
          "customer_guid" : {
            "type" : "string",
            "description" : "Gets or sets the customer GUID",
            "format" : "uuid"
          },
          "username" : {
            "type" : "string",
            "description" : "Gets or sets the username",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "description" : "Gets or sets the email",
            "nullable" : true
          },
          "email_to_revalidate" : {
            "type" : "string",
            "description" : "Gets or sets the email that should be re-validated. Used in scenarios when a customer is already registered and wants to change an email address.",
            "nullable" : true
          },
          "admin_comment" : {
            "type" : "string",
            "description" : "Gets or sets the admin comment",
            "nullable" : true
          },
          "is_tax_exempt" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer is tax exempt"
          },
          "affiliate_id" : {
            "type" : "integer",
            "description" : "Gets or sets the affiliate identifier",
            "format" : "int32"
          },
          "vendor_id" : {
            "type" : "integer",
            "description" : "Gets or sets the vendor identifier with which this customer is associated (maganer)",
            "format" : "int32"
          },
          "has_shopping_cart_items" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this customer has some products in the shopping cart\r\n<remarks>The same as if we run ShoppingCartItems.Count > 0\r\nWe use this property for performance optimization:\r\nif this property is set to false, then we do not need to load \"ShoppingCartItems\" navigation property for each page load\r\nIt's used only in a couple of places in the presenation layer\r\n</remarks>"
          },
          "require_re_login" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer is required to re-login"
          },
          "failed_login_attempts" : {
            "type" : "integer",
            "description" : "Gets or sets a value indicating number of failed login attempts (wrong password)",
            "format" : "int32"
          },
          "cannot_login_until_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time until which a customer cannot login (locked out)",
            "format" : "date-time",
            "nullable" : true
          },
          "active" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer is active"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer has been deleted"
          },
          "is_system_account" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer account is system"
          },
          "system_name" : {
            "type" : "string",
            "description" : "Gets or sets the customer system name",
            "nullable" : true
          },
          "last_ip_address" : {
            "type" : "string",
            "description" : "Gets or sets the last IP address",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of entity creation",
            "format" : "date-time"
          },
          "last_login_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of last login",
            "format" : "date-time",
            "nullable" : true
          },
          "last_activity_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of last activity",
            "format" : "date-time"
          },
          "registered_in_store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier in which customer registered",
            "format" : "int32"
          },
          "billing_address_id" : {
            "type" : "integer",
            "description" : "Gets or sets the billing address identifier",
            "format" : "int32",
            "nullable" : true
          },
          "shipping_address_id" : {
            "type" : "integer",
            "description" : "Gets or sets the shipping address identifier",
            "format" : "int32",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a customer"
      },
      "CustomerPasswordDto" : {
        "type" : "object",
        "properties" : {
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "password" : {
            "type" : "string",
            "description" : "Gets or sets the password",
            "nullable" : true
          },
          "password_format_id" : {
            "type" : "integer",
            "description" : "Gets or sets the password format identifier",
            "format" : "int32"
          },
          "password_salt" : {
            "type" : "string",
            "description" : "Gets or sets the password salt",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of entity creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a customer password"
      },
      "CustomerRegistrationResult" : {
        "type" : "object",
        "properties" : {
          "Success" : {
            "type" : "boolean",
            "description" : "Gets a value indicating whether request has been completed successfully"
          },
          "Errors" : {
            "type" : "array",
            "description" : "Errors",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "CustomerRoleCustomerRoleDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CustomerRoleDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "CustomerRoleDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the customer role name",
            "nullable" : true
          },
          "free_shipping" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer role is marked as free shipping"
          },
          "tax_exempt" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer role is marked as tax exempt"
          },
          "active" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer role is active"
          },
          "is_system_role" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer role is system"
          },
          "system_name" : {
            "type" : "string",
            "description" : "Gets or sets the customer role system name",
            "nullable" : true
          },
          "enable_password_lifetime" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customers must change passwords after a specified time"
          },
          "override_tax_display_type" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customers of this role have other tax display type chosen instead of the default one"
          },
          "default_tax_display_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets identifier of the default tax display type (used only with \"OverrideTaxDisplayType\" enabled)",
            "format" : "int32"
          },
          "purchased_with_product_id" : {
            "type" : "integer",
            "description" : "Gets or sets a product identifier that is required by this customer role. \r\nA customer is added to this customer role once a specified product is purchased.",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a customer role"
      },
      "DeliveryDateDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a delivery date"
      },
      "DiscountCategoryMappingDto" : {
        "type" : "object",
        "properties" : {
          "entity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the category identifier",
            "format" : "int32"
          },
          "discount_id" : {
            "type" : "integer",
            "description" : "Gets or sets the discount identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a discount-category mapping class"
      },
      "DiscountDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "admin_comment" : {
            "type" : "string",
            "description" : "Gets or sets the admin comment",
            "nullable" : true
          },
          "discount_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the discount type identifier",
            "format" : "int32"
          },
          "use_percentage" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to use percentage"
          },
          "discount_percentage" : {
            "type" : "number",
            "description" : "Gets or sets the discount percentage",
            "format" : "double"
          },
          "discount_amount" : {
            "type" : "number",
            "description" : "Gets or sets the discount amount",
            "format" : "double"
          },
          "maximum_discount_amount" : {
            "type" : "number",
            "description" : "Gets or sets the maximum discount amount (used with \"UsePercentage\")",
            "format" : "double",
            "nullable" : true
          },
          "start_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the discount start date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "end_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the discount end date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "requires_coupon_code" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether discount requires coupon code"
          },
          "coupon_code" : {
            "type" : "string",
            "description" : "Gets or sets the coupon code",
            "nullable" : true
          },
          "is_cumulative" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether discount can be used simultaneously with other discounts (with the same discount type)"
          },
          "discount_limitation_id" : {
            "type" : "integer",
            "description" : "Gets or sets the discount limitation identifier",
            "format" : "int32"
          },
          "limitation_times" : {
            "type" : "integer",
            "description" : "Gets or sets the discount limitation times (used when Limitation is set to \"N Times Only\" or \"N Times Per Customer\")",
            "format" : "int32"
          },
          "maximum_discounted_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the maximum product quantity which could be discounted\r\nUsed with \"Assigned to products\" or \"Assigned to categories\" type",
            "format" : "int32",
            "nullable" : true
          },
          "applied_to_sub_categories" : {
            "type" : "boolean",
            "description" : "Gets or sets value indicating whether it should be applied to all subcategories or the selected one\r\nUsed with \"Assigned to categories\" type only."
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a discount"
      },
      "DiscountManufacturerMappingDto" : {
        "type" : "object",
        "properties" : {
          "entity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the manufacturer identifier",
            "format" : "int32"
          },
          "discount_id" : {
            "type" : "integer",
            "description" : "Gets or sets the discount identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a discount-manufacturer mapping class"
      },
      "DiscountProductMappingDto" : {
        "type" : "object",
        "properties" : {
          "entity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "discount_id" : {
            "type" : "integer",
            "description" : "Gets or sets the discount identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a discount-product mapping class"
      },
      "DiscountRequirementDto" : {
        "type" : "object",
        "properties" : {
          "discount_id" : {
            "type" : "integer",
            "description" : "Gets or sets the discount identifier",
            "format" : "int32"
          },
          "discount_requirement_rule_system_name" : {
            "type" : "string",
            "description" : "Gets or sets the discount requirement rule system name",
            "nullable" : true
          },
          "parent_id" : {
            "type" : "integer",
            "description" : "Gets or sets the parent requirement identifier",
            "format" : "int32",
            "nullable" : true
          },
          "interaction_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets an interaction type identifier (has a value for the group and null for the child requirements)",
            "format" : "int32",
            "nullable" : true
          },
          "is_group" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this requirement has any child requirements"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a discount requirement"
      },
      "DiscountType" : {
        "type" : "string",
        "enum" : [ "AssignedToOrderTotal", "AssignedToSkus", "AssignedToCategories", "AssignedToManufacturers", "AssignedToShipping", "AssignedToOrderSubTotal" ]
      },
      "DiscountUsageHistoryDiscountUsageHistoryDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountUsageHistoryDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "DiscountUsageHistoryDto" : {
        "type" : "object",
        "properties" : {
          "discount_id" : {
            "type" : "integer",
            "description" : "Gets or sets the discount identifier",
            "format" : "int32"
          },
          "order_id" : {
            "type" : "integer",
            "description" : "Gets or sets the order identifier",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a discount usage history entry"
      },
      "DiscountValidationResult" : {
        "type" : "object",
        "properties" : {
          "is_valid" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether discount is valid"
          },
          "errors" : {
            "type" : "array",
            "description" : "Gets or sets the errors that a customer should see when entering a coupon code (in case if \"IsValid\" is set to \"false\")",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "DownloadDto" : {
        "type" : "object",
        "properties" : {
          "download_guid" : {
            "type" : "string",
            "description" : "Gets or sets a GUID",
            "format" : "uuid"
          },
          "use_download_url" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether DownloadUrl property should be used"
          },
          "download_url" : {
            "type" : "string",
            "description" : "Gets or sets a download URL",
            "nullable" : true
          },
          "download_binary" : {
            "type" : "string",
            "description" : "Gets or sets the download binary",
            "format" : "byte",
            "nullable" : true
          },
          "content_type" : {
            "type" : "string",
            "description" : "The mime-type of the download",
            "nullable" : true
          },
          "filename" : {
            "type" : "string",
            "description" : "The filename of the download",
            "nullable" : true
          },
          "extension" : {
            "type" : "string",
            "description" : "Gets or sets the extension",
            "nullable" : true
          },
          "is_new" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the download is new"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a download"
      },
      "EmailAccountDto" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Gets or sets an email address",
            "nullable" : true
          },
          "display_name" : {
            "type" : "string",
            "description" : "Gets or sets an email display name",
            "nullable" : true
          },
          "host" : {
            "type" : "string",
            "description" : "Gets or sets an email host",
            "nullable" : true
          },
          "port" : {
            "type" : "integer",
            "description" : "Gets or sets an email port",
            "format" : "int32"
          },
          "username" : {
            "type" : "string",
            "description" : "Gets or sets an email user name",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Gets or sets an email password",
            "nullable" : true
          },
          "enable_ssl" : {
            "type" : "boolean",
            "description" : "Gets or sets a value that controls whether the SmtpClient uses Secure Sockets Layer (SSL) to encrypt the connection"
          },
          "use_default_credentials" : {
            "type" : "boolean",
            "description" : "Gets or sets a value that controls whether the default system credentials of the application are sent with requests."
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an email account"
      },
      "ExchangeRateDto" : {
        "type" : "object",
        "properties" : {
          "currency_code" : {
            "type" : "string",
            "description" : "The three letter ISO code for the Exchange Rate, e.g. USD",
            "nullable" : true
          },
          "rate" : {
            "type" : "number",
            "description" : "The conversion rate of this currency from the base currency",
            "format" : "double"
          },
          "updated_on" : {
            "type" : "string",
            "description" : "When was this exchange rate updated from the data source (the data XML feed)",
            "format" : "date-time"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an exchange rate"
      },
      "FinalPriceResponse" : {
        "type" : "object",
        "properties" : {
          "price_without_discounts" : {
            "type" : "number",
            "format" : "double"
          },
          "final_price" : {
            "type" : "number",
            "format" : "double"
          },
          "applied_discount_amount" : {
            "type" : "number",
            "format" : "double"
          },
          "applied_discounts" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountDto"
            }
          }
        },
        "additionalProperties" : false
      },
      "ForumDto" : {
        "type" : "object",
        "properties" : {
          "forum_group_id" : {
            "type" : "integer",
            "description" : "Gets or sets the forum group identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets the description",
            "nullable" : true
          },
          "num_topics" : {
            "type" : "integer",
            "description" : "Gets or sets the number of topics",
            "format" : "int32"
          },
          "num_posts" : {
            "type" : "integer",
            "description" : "Gets or sets the number of posts",
            "format" : "int32"
          },
          "last_topic_id" : {
            "type" : "integer",
            "description" : "Gets or sets the last topic identifier",
            "format" : "int32"
          },
          "last_post_id" : {
            "type" : "integer",
            "description" : "Gets or sets the last post identifier",
            "format" : "int32"
          },
          "last_post_customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the last post customer identifier",
            "format" : "int32"
          },
          "last_post_time" : {
            "type" : "string",
            "description" : "Gets or sets the last post date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance update",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a forum"
      },
      "ForumGroupDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance update",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a forum group"
      },
      "ForumGroupForumGroupDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ForumGroupDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ForumPostDto" : {
        "type" : "object",
        "properties" : {
          "topic_id" : {
            "type" : "integer",
            "description" : "Gets or sets the forum topic identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "text" : {
            "type" : "string",
            "description" : "Gets or sets the text",
            "nullable" : true
          },
          "ip_address" : {
            "type" : "string",
            "description" : "Gets or sets the IP address",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance update",
            "format" : "date-time"
          },
          "vote_count" : {
            "type" : "integer",
            "description" : "Gets or sets the count of votes",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a forum post"
      },
      "ForumPostForumPostDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ForumPostDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ForumPostVoteDto" : {
        "type" : "object",
        "properties" : {
          "forum_post_id" : {
            "type" : "integer",
            "description" : "Gets or sets the forum post identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "is_up" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this vote is up or is down"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a forum post vote"
      },
      "ForumSearchType" : {
        "type" : "string",
        "enum" : [ "All", "TopicTitlesOnly", "PostTextOnly" ]
      },
      "ForumSubscriptionDto" : {
        "type" : "object",
        "properties" : {
          "subscription_guid" : {
            "type" : "string",
            "description" : "Gets or sets the forum subscription identifier",
            "format" : "uuid"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "forum_id" : {
            "type" : "integer",
            "description" : "Gets or sets the forum identifier",
            "format" : "int32"
          },
          "topic_id" : {
            "type" : "integer",
            "description" : "Gets or sets the topic identifier",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a forum subscription item"
      },
      "ForumSubscriptionForumSubscriptionDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ForumSubscriptionDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ForumTopicDto" : {
        "type" : "object",
        "properties" : {
          "forum_id" : {
            "type" : "integer",
            "description" : "Gets or sets the forum identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "topic_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the topic type identifier",
            "format" : "int32"
          },
          "subject" : {
            "type" : "string",
            "description" : "Gets or sets the subject",
            "nullable" : true
          },
          "num_posts" : {
            "type" : "integer",
            "description" : "Gets or sets the number of posts",
            "format" : "int32"
          },
          "views" : {
            "type" : "integer",
            "description" : "Gets or sets the number of views",
            "format" : "int32"
          },
          "last_post_id" : {
            "type" : "integer",
            "description" : "Gets or sets the last post identifier",
            "format" : "int32"
          },
          "last_post_customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the last post customer identifier",
            "format" : "int32"
          },
          "last_post_time" : {
            "type" : "string",
            "description" : "Gets or sets the last post date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance update",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a forum topic"
      },
      "ForumTopicForumTopicDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ForumTopicDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "GdprConsentDto" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Gets or sets the message displayed to customers",
            "nullable" : true
          },
          "is_required" : {
            "type" : "boolean",
            "description" : "Gets or setsa value indicating whether the consent is required"
          },
          "required_message" : {
            "type" : "string",
            "description" : "Gets or sets the message displayed to customers when he/she doesn't agree to this consent",
            "nullable" : true
          },
          "display_during_registration" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this consent is displayed during registrations"
          },
          "display_on_customer_info_page" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this consent is displayed on my account page (customer info)"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a GDPR consent"
      },
      "GdprLogDto" : {
        "type" : "object",
        "properties" : {
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "consent_id" : {
            "type" : "integer",
            "description" : "Gets or sets the consent identifier (0 if not related to any consent)",
            "format" : "int32"
          },
          "customer_info" : {
            "type" : "string",
            "description" : "Gets or sets the customer info (when a customer records is already deleted)",
            "nullable" : true
          },
          "request_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the request type identifier",
            "format" : "int32"
          },
          "request_details" : {
            "type" : "string",
            "description" : "Gets or sets the request details",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of entity creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a GDPR log"
      },
      "GdprLogGdprLogDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GdprLogDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "GdprRequestType" : {
        "type" : "string",
        "enum" : [ "ConsentAgree", "ConsentDisagree", "ExportData", "DeleteCustomer", "ProfileChanged" ]
      },
      "GenericAttributeDto" : {
        "type" : "object",
        "properties" : {
          "entity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the entity identifier",
            "format" : "int32"
          },
          "key_group" : {
            "type" : "string",
            "description" : "Gets or sets the key group",
            "nullable" : true
          },
          "key" : {
            "type" : "string",
            "description" : "Gets or sets the key",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "description" : "Gets or sets the value",
            "nullable" : true
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "created_or_updated_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the created or updated date",
            "format" : "date-time",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a generic attribute"
      },
      "GetPickupPointsResponseDto" : {
        "type" : "object",
        "properties" : {
          "pickup_points" : {
            "type" : "array",
            "description" : "Gets or sets a list of pickup points",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/PickupPointDto"
            }
          },
          "errors" : {
            "type" : "array",
            "description" : "Gets or sets errors",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "success" : {
            "type" : "boolean",
            "description" : "Gets a value indicating whether request has been completed successfully",
            "readOnly" : true
          }
        },
        "additionalProperties" : false
      },
      "GetPictureUrlResponse" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "Picture URL",
            "nullable" : true
          },
          "picture" : {
            "$ref" : "#/components/schemas/PictureDto"
          }
        },
        "additionalProperties" : false
      },
      "GetRecurringCycleInfoResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string",
            "description" : "The error (if exists); otherwise, empty string",
            "nullable" : true
          },
          "cycle_length" : {
            "type" : "integer",
            "description" : "Cycle length",
            "format" : "int32"
          },
          "cycle_period" : {
            "$ref" : "#/components/schemas/RecurringProductCyclePeriod"
          },
          "total_cycles" : {
            "type" : "integer",
            "description" : "Total cycles",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "GetShippingOptionResponseDto" : {
        "type" : "object",
        "properties" : {
          "shipping_options" : {
            "type" : "array",
            "description" : "Gets or sets a list of shipping options",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ShippingOptionDto"
            }
          },
          "shipping_from_multiple_locations" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether shipping is done from multiple locations (warehouses)"
          },
          "errors" : {
            "type" : "array",
            "description" : "Gets or sets errors",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "success" : {
            "type" : "boolean",
            "description" : "Gets a value indicating whether request has been completed successfully",
            "readOnly" : true
          }
        },
        "additionalProperties" : false
      },
      "GetShoppingCartShippingTotalResponse" : {
        "type" : "object",
        "properties" : {
          "shipping_total" : {
            "type" : "number",
            "description" : "Shipping total",
            "format" : "double",
            "nullable" : true
          },
          "tax_rate" : {
            "type" : "number",
            "description" : "Applied tax rate",
            "format" : "double"
          },
          "applied_discounts" : {
            "type" : "array",
            "description" : "Applied discounts",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountDto"
            }
          }
        },
        "additionalProperties" : false
      },
      "GetShoppingCartSubTotalResponse" : {
        "type" : "object",
        "properties" : {
          "discount_amount" : {
            "type" : "number",
            "description" : "Applied discount amount",
            "format" : "double"
          },
          "applied_discounts" : {
            "type" : "array",
            "description" : "Applied discounts",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountDto"
            }
          },
          "sub_total_without_discount" : {
            "type" : "number",
            "description" : "Sub total (without discount)",
            "format" : "double"
          },
          "sub_total_with_discount" : {
            "type" : "number",
            "description" : "Sub total (with discount)",
            "format" : "double"
          },
          "tax_rates" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double"
            },
            "description" : "Tax rates (of order sub total)",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "GetShoppingCartTotalResponse" : {
        "type" : "object",
        "properties" : {
          "shopping_cart_total" : {
            "type" : "number",
            "description" : "Shopping cart total (Null if shopping cart total couldn't be calculated now)",
            "format" : "double",
            "nullable" : true
          },
          "redeemed_reward_points_amount" : {
            "type" : "number",
            "description" : "Discount amount",
            "format" : "double"
          },
          "applied_discounts" : {
            "type" : "array",
            "description" : "Applied discounts",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountDto"
            }
          },
          "applied_gift_cards" : {
            "type" : "array",
            "description" : "Applied gift cards",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/AppliedGiftCardResponseDto"
            }
          },
          "redeemed_reward_points" : {
            "type" : "integer",
            "description" : "Reward points to redeem",
            "format" : "int32"
          },
          "discount_amount" : {
            "type" : "number",
            "description" : "Reward points amount in primary store currency to redeem",
            "format" : "double"
          }
        },
        "additionalProperties" : false
      },
      "GetSubTotalResponse" : {
        "type" : "object",
        "properties" : {
          "sub_total" : {
            "type" : "number",
            "description" : "Sub total",
            "format" : "double"
          },
          "discount_amount" : {
            "type" : "number",
            "description" : "Applied discount amount",
            "format" : "double"
          },
          "applied_discounts" : {
            "type" : "array",
            "description" : "Applied discounts",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountDto"
            }
          },
          "maximum_discount_qty" : {
            "type" : "integer",
            "description" : "Maximum discounted qty",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "GetTaxTotalResponse" : {
        "type" : "object",
        "properties" : {
          "tax_total" : {
            "type" : "number",
            "description" : "Tax total",
            "format" : "double"
          },
          "tax_rates" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double"
            },
            "description" : "Tax rates",
            "nullable" : true
          },
          "errors" : {
            "type" : "array",
            "description" : "Errors",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "success" : {
            "type" : "boolean",
            "description" : "A value indicating whether request has been completed successfully",
            "readOnly" : true
          }
        },
        "additionalProperties" : false
      },
      "GetTaxTotalTaxRateResponse" : {
        "type" : "object",
        "properties" : {
          "tax_total" : {
            "type" : "number",
            "description" : "Tax total",
            "format" : "double"
          },
          "tax_rates" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double"
            },
            "description" : "Tax rates",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "GetUnitPriceResponse" : {
        "type" : "object",
        "properties" : {
          "unit_price" : {
            "type" : "number",
            "description" : "Unit price",
            "format" : "double"
          },
          "discount_amount" : {
            "type" : "number",
            "description" : "Applied discount amount",
            "format" : "double"
          },
          "applied_discounts" : {
            "type" : "array",
            "description" : "Applied discounts",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountDto"
            }
          }
        },
        "additionalProperties" : false
      },
      "GetVatNumberStatusResponse" : {
        "type" : "object",
        "properties" : {
          "vat_number_status" : {
            "$ref" : "#/components/schemas/VatNumberStatus"
          },
          "name" : {
            "type" : "string",
            "description" : "Company name",
            "nullable" : true
          },
          "address" : {
            "type" : "string",
            "description" : "Address",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "GiftCardAttributeResponse" : {
        "type" : "object",
        "properties" : {
          "recipient_name" : {
            "type" : "string",
            "description" : "Recipient name",
            "nullable" : true
          },
          "recipient_email" : {
            "type" : "string",
            "description" : "Recipient email",
            "nullable" : true
          },
          "sender_name" : {
            "type" : "string",
            "description" : "Sender name",
            "nullable" : true
          },
          "sender_email" : {
            "type" : "string",
            "description" : "Sender email",
            "nullable" : true
          },
          "gift_card_message" : {
            "type" : "string",
            "description" : "Message",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a gift card attribute"
      },
      "GiftCardDto" : {
        "type" : "object",
        "properties" : {
          "purchased_with_order_item_id" : {
            "type" : "integer",
            "description" : "Gets or sets the associated order item identifier",
            "format" : "int32",
            "nullable" : true
          },
          "gift_card_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the gift card type identifier",
            "format" : "int32"
          },
          "amount" : {
            "type" : "number",
            "description" : "Gets or sets the amount",
            "format" : "double"
          },
          "is_gift_card_activated" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether gift card is activated"
          },
          "gift_card_coupon_code" : {
            "type" : "string",
            "description" : "Gets or sets a gift card coupon code",
            "nullable" : true
          },
          "recipient_name" : {
            "type" : "string",
            "description" : "Gets or sets a recipient name",
            "nullable" : true
          },
          "recipient_email" : {
            "type" : "string",
            "description" : "Gets or sets a recipient email",
            "nullable" : true
          },
          "sender_name" : {
            "type" : "string",
            "description" : "Gets or sets a sender name",
            "nullable" : true
          },
          "sender_email" : {
            "type" : "string",
            "description" : "Gets or sets a sender email",
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Gets or sets a message",
            "nullable" : true
          },
          "is_recipient_notified" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether recipient is notified"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "GiftCardGiftCardDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/GiftCardDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "GiftCardUsageHistoryDto" : {
        "type" : "object",
        "properties" : {
          "gift_card_id" : {
            "type" : "integer",
            "description" : "Gets or sets the gift card identifier",
            "format" : "int32"
          },
          "used_with_order_id" : {
            "type" : "integer",
            "description" : "Gets or sets the order identifier",
            "format" : "int32"
          },
          "used_value" : {
            "type" : "number",
            "description" : "Gets or sets the used value (amount)",
            "format" : "double"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a gift card usage history entry"
      },
      "GroupByOptions" : {
        "type" : "string",
        "enum" : [ "Day", "Week", "Month" ]
      },
      "Int32StringKeyValuePair" : {
        "type" : "object",
        "properties" : {
          "Key" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Value" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "LanguageDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "language_culture" : {
            "type" : "string",
            "description" : "Gets or sets the language culture",
            "nullable" : true
          },
          "unique_seo_code" : {
            "type" : "string",
            "description" : "Gets or sets the unique SEO code",
            "nullable" : true
          },
          "flag_image_file_name" : {
            "type" : "string",
            "description" : "Gets or sets the flag image file name",
            "nullable" : true
          },
          "rtl" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the language supports \"Right-to-left\""
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "default_currency_id" : {
            "type" : "integer",
            "description" : "Gets or sets the identifier of the default currency for this language; 0 is set when we use the default currency display order",
            "format" : "int32"
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the language is published"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a language"
      },
      "LocaleStringResourceDto" : {
        "type" : "object",
        "properties" : {
          "language_id" : {
            "type" : "integer",
            "description" : "Gets or sets the language identifier",
            "format" : "int32"
          },
          "resource_name" : {
            "type" : "string",
            "description" : "Gets or sets the resource name",
            "nullable" : true
          },
          "resource_value" : {
            "type" : "string",
            "description" : "Gets or sets the resource value",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a locale string resource"
      },
      "ManufacturerDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets the description",
            "nullable" : true
          },
          "manufacturer_template_id" : {
            "type" : "integer",
            "description" : "Gets or sets a value of used manufacturer template identifier",
            "format" : "int32"
          },
          "meta_keywords" : {
            "type" : "string",
            "description" : "Gets or sets the meta keywords",
            "nullable" : true
          },
          "meta_description" : {
            "type" : "string",
            "description" : "Gets or sets the meta description",
            "nullable" : true
          },
          "meta_title" : {
            "type" : "string",
            "description" : "Gets or sets the meta title",
            "nullable" : true
          },
          "picture_id" : {
            "type" : "integer",
            "description" : "Gets or sets the parent picture identifier",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "description" : "Gets or sets the page size",
            "format" : "int32"
          },
          "allow_customers_to_select_page_size" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether customers can select the page size"
          },
          "page_size_options" : {
            "type" : "string",
            "description" : "Gets or sets the available customer selectable page size options",
            "nullable" : true
          },
          "subject_to_acl" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is subject to ACL"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is published"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity has been deleted"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance update",
            "format" : "date-time"
          },
          "price_range_filtering" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the price range filtering is enabled"
          },
          "price_from" : {
            "type" : "number",
            "description" : "Gets or sets the \"from\" price",
            "format" : "double"
          },
          "price_to" : {
            "type" : "number",
            "description" : "Gets or sets the \"to\" price",
            "format" : "double"
          },
          "manually_price_range" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the price range should be entered manually"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a manufacturer"
      },
      "ManufacturerManufacturerDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManufacturerDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ManufacturerTemplateDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the template name",
            "nullable" : true
          },
          "view_path" : {
            "type" : "string",
            "description" : "Gets or sets the view path",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a manufacturer template"
      },
      "MeasureDimensionDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "system_keyword" : {
            "type" : "string",
            "description" : "Gets or sets the system keyword",
            "nullable" : true
          },
          "ratio" : {
            "type" : "number",
            "description" : "Gets or sets the ratio",
            "format" : "double"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a measure dimension"
      },
      "MeasureWeightDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "system_keyword" : {
            "type" : "string",
            "description" : "Gets or sets the system keyword",
            "nullable" : true
          },
          "ratio" : {
            "type" : "number",
            "description" : "Gets or sets the ratio",
            "format" : "double"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a measure weight"
      },
      "MessageTemplateDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "bcc_email_addresses" : {
            "type" : "string",
            "description" : "Gets or sets the BCC Email addresses",
            "nullable" : true
          },
          "subject" : {
            "type" : "string",
            "description" : "Gets or sets the subject",
            "nullable" : true
          },
          "body" : {
            "type" : "string",
            "description" : "Gets or sets the body",
            "nullable" : true
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the template is active"
          },
          "delay_before_send" : {
            "type" : "integer",
            "description" : "Gets or sets the delay before sending message",
            "format" : "int32",
            "nullable" : true
          },
          "delay_period_id" : {
            "type" : "integer",
            "description" : "Gets or sets the period of message delay",
            "format" : "int32"
          },
          "attached_download_id" : {
            "type" : "integer",
            "description" : "Gets or sets the download identifier of attached file",
            "format" : "int32"
          },
          "email_account_id" : {
            "type" : "integer",
            "description" : "Gets or sets the used email account identifier",
            "format" : "int32"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a message template"
      },
      "NewsCommentDto" : {
        "type" : "object",
        "properties" : {
          "comment_title" : {
            "type" : "string",
            "description" : "Gets or sets the comment title",
            "nullable" : true
          },
          "comment_text" : {
            "type" : "string",
            "description" : "Gets or sets the comment text",
            "nullable" : true
          },
          "news_item_id" : {
            "type" : "integer",
            "description" : "Gets or sets the news item identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "is_approved" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the comment is approved"
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a news comment"
      },
      "NewsItemDto" : {
        "type" : "object",
        "properties" : {
          "language_id" : {
            "type" : "integer",
            "description" : "Gets or sets the language identifier",
            "format" : "int32"
          },
          "title" : {
            "type" : "string",
            "description" : "Gets or sets the news title",
            "nullable" : true
          },
          "short" : {
            "type" : "string",
            "description" : "Gets or sets the short text",
            "nullable" : true
          },
          "full" : {
            "type" : "string",
            "description" : "Gets or sets the full text",
            "nullable" : true
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the news item is published"
          },
          "start_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the news item start date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "end_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the news item end date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "allow_comments" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the news post comments are allowed"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "meta_keywords" : {
            "type" : "string",
            "description" : "Gets or sets the meta keywords",
            "nullable" : true
          },
          "meta_description" : {
            "type" : "string",
            "description" : "Gets or sets the meta description",
            "nullable" : true
          },
          "meta_title" : {
            "type" : "string",
            "description" : "Gets or sets the meta title",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of entity creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a news item"
      },
      "NewsItemNewsItemDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/NewsItemDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "NewsLetterSubscriptionDto" : {
        "type" : "object",
        "properties" : {
          "news_letter_subscription_guid" : {
            "type" : "string",
            "description" : "Gets or sets the newsletter subscription GUID",
            "format" : "uuid"
          },
          "email" : {
            "type" : "string",
            "description" : "Gets or sets the subscriber email",
            "nullable" : true
          },
          "active" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether subscription is active"
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier in which a customer has subscribed to newsletter",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time when subscription was created",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents NewsLetterSubscription entity"
      },
      "NewsLetterSubscriptionNewsLetterSubscriptionDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/NewsLetterSubscriptionDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "OrderAverageReportLineResponse" : {
        "type" : "object",
        "properties" : {
          "count_orders" : {
            "type" : "integer",
            "description" : "Gets or sets the count",
            "format" : "int32"
          },
          "sum_shipping_excl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the shipping summary (excluding tax)",
            "format" : "double"
          },
          "order_payment_fee_excl_tax_sum" : {
            "type" : "number",
            "description" : "Gets or sets the payment fee summary (excluding tax)",
            "format" : "double"
          },
          "sum_tax" : {
            "type" : "number",
            "description" : "Gets or sets the tax summary",
            "format" : "double"
          },
          "sum_orders" : {
            "type" : "number",
            "description" : "Gets or sets the order total summary",
            "format" : "double"
          },
          "sum_refunded_amount" : {
            "type" : "number",
            "description" : "Gets or sets the refunded amount summary",
            "format" : "double"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an order average report line"
      },
      "OrderByCountryReportLineResponse" : {
        "type" : "object",
        "properties" : {
          "country_id" : {
            "type" : "integer",
            "description" : "Country identifier; null for unknown country",
            "format" : "int32",
            "nullable" : true
          },
          "total_orders" : {
            "type" : "integer",
            "description" : "Gets or sets the number of orders",
            "format" : "int32"
          },
          "sum_orders" : {
            "type" : "number",
            "description" : "Gets or sets the order total summary",
            "format" : "double"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an \"order by country\" report line"
      },
      "OrderByEnum" : {
        "type" : "string",
        "enum" : [ "OrderByQuantity", "OrderByTotalAmount" ]
      },
      "OrderDto" : {
        "type" : "object",
        "properties" : {
          "order_guid" : {
            "type" : "string",
            "description" : "Gets or sets the order identifier",
            "format" : "uuid"
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "billing_address_id" : {
            "type" : "integer",
            "description" : "Gets or sets the billing address identifier",
            "format" : "int32"
          },
          "shipping_address_id" : {
            "type" : "integer",
            "description" : "Gets or sets the shipping address identifier",
            "format" : "int32",
            "nullable" : true
          },
          "pickup_address_id" : {
            "type" : "integer",
            "description" : "Gets or sets the pickup address identifier",
            "format" : "int32",
            "nullable" : true
          },
          "pickup_in_store" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether a customer chose \"pick up in store\" shipping option"
          },
          "order_status_id" : {
            "type" : "integer",
            "description" : "Gets or sets an order status identifier",
            "format" : "int32"
          },
          "shipping_status_id" : {
            "type" : "integer",
            "description" : "Gets or sets the shipping status identifier",
            "format" : "int32"
          },
          "payment_status_id" : {
            "type" : "integer",
            "description" : "Gets or sets the payment status identifier",
            "format" : "int32"
          },
          "payment_method_system_name" : {
            "type" : "string",
            "description" : "Gets or sets the payment method system name",
            "nullable" : true
          },
          "customer_currency_code" : {
            "type" : "string",
            "description" : "Gets or sets the customer currency code (at the moment of order placing)",
            "nullable" : true
          },
          "currency_rate" : {
            "type" : "number",
            "description" : "Gets or sets the currency rate",
            "format" : "double"
          },
          "customer_tax_display_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer tax display type identifier",
            "format" : "int32"
          },
          "vat_number" : {
            "type" : "string",
            "description" : "Gets or sets the VAT number (the European Union Value Added Tax)",
            "nullable" : true
          },
          "order_subtotal_incl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the order subtotal (include tax)",
            "format" : "double"
          },
          "order_subtotal_excl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the order subtotal (exclude tax)",
            "format" : "double"
          },
          "order_sub_total_discount_incl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the order subtotal discount (include tax)",
            "format" : "double"
          },
          "order_sub_total_discount_excl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the order subtotal discount (exclude tax)",
            "format" : "double"
          },
          "order_shipping_incl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the order shipping (include tax)",
            "format" : "double"
          },
          "order_shipping_excl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the order shipping (exclude tax)",
            "format" : "double"
          },
          "payment_method_additional_fee_incl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the payment method additional fee (incl tax)",
            "format" : "double"
          },
          "payment_method_additional_fee_excl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the payment method additional fee (exclude tax)",
            "format" : "double"
          },
          "tax_rates" : {
            "type" : "string",
            "description" : "Gets or sets the tax rates",
            "nullable" : true
          },
          "order_tax" : {
            "type" : "number",
            "description" : "Gets or sets the order tax",
            "format" : "double"
          },
          "order_discount" : {
            "type" : "number",
            "description" : "Gets or sets the order discount (applied to order total)",
            "format" : "double"
          },
          "order_total" : {
            "type" : "number",
            "description" : "Gets or sets the order total",
            "format" : "double"
          },
          "refunded_amount" : {
            "type" : "number",
            "description" : "Gets or sets the refunded amount",
            "format" : "double"
          },
          "reward_points_history_entry_id" : {
            "type" : "integer",
            "description" : "Gets or sets the reward points history entry identifier when reward points were earned (gained) for placing this order",
            "format" : "int32",
            "nullable" : true
          },
          "checkout_attribute_description" : {
            "type" : "string",
            "description" : "Gets or sets the checkout attribute description",
            "nullable" : true
          },
          "checkout_attributes_xml" : {
            "type" : "string",
            "description" : "Gets or sets the checkout attributes in XML format",
            "nullable" : true
          },
          "customer_language_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer language identifier",
            "format" : "int32"
          },
          "affiliate_id" : {
            "type" : "integer",
            "description" : "Gets or sets the affiliate identifier",
            "format" : "int32"
          },
          "customer_ip" : {
            "type" : "string",
            "description" : "Gets or sets the customer IP address",
            "nullable" : true
          },
          "allow_storing_credit_card_number" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether storing of credit card number is allowed"
          },
          "card_type" : {
            "type" : "string",
            "description" : "Gets or sets the card type",
            "nullable" : true
          },
          "card_name" : {
            "type" : "string",
            "description" : "Gets or sets the card name",
            "nullable" : true
          },
          "card_number" : {
            "type" : "string",
            "description" : "Gets or sets the card number",
            "nullable" : true
          },
          "masked_credit_card_number" : {
            "type" : "string",
            "description" : "Gets or sets the masked credit card number",
            "nullable" : true
          },
          "card_cvv2" : {
            "type" : "string",
            "description" : "Gets or sets the card CVV2",
            "nullable" : true
          },
          "card_expiration_month" : {
            "type" : "string",
            "description" : "Gets or sets the card expiration month",
            "nullable" : true
          },
          "card_expiration_year" : {
            "type" : "string",
            "description" : "Gets or sets the card expiration year",
            "nullable" : true
          },
          "authorization_transaction_id" : {
            "type" : "string",
            "description" : "Gets or sets the authorization transaction identifier",
            "nullable" : true
          },
          "authorization_transaction_code" : {
            "type" : "string",
            "description" : "Gets or sets the authorization transaction code",
            "nullable" : true
          },
          "authorization_transaction_result" : {
            "type" : "string",
            "description" : "Gets or sets the authorization transaction result",
            "nullable" : true
          },
          "capture_transaction_id" : {
            "type" : "string",
            "description" : "Gets or sets the capture transaction identifier",
            "nullable" : true
          },
          "capture_transaction_result" : {
            "type" : "string",
            "description" : "Gets or sets the capture transaction result",
            "nullable" : true
          },
          "subscription_transaction_id" : {
            "type" : "string",
            "description" : "Gets or sets the subscription transaction identifier",
            "nullable" : true
          },
          "paid_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the paid date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "shipping_method" : {
            "type" : "string",
            "description" : "Gets or sets the shipping method",
            "nullable" : true
          },
          "shipping_rate_computation_method_system_name" : {
            "type" : "string",
            "description" : "Gets or sets the shipping rate computation method identifier or the pickup point provider identifier (if PickupInStore is true)",
            "nullable" : true
          },
          "custom_values_xml" : {
            "type" : "string",
            "description" : "Gets or sets the serialized CustomValues (values from ProcessPaymentRequest)",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity has been deleted"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of order creation",
            "format" : "date-time"
          },
          "custom_order_number" : {
            "type" : "string",
            "description" : "Gets or sets the custom order number without prefix",
            "nullable" : true
          },
          "redeemed_reward_points_entry_id" : {
            "type" : "integer",
            "description" : "Gets or sets the reward points history record (spent by a customer when placing this order)",
            "format" : "int32",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an order"
      },
      "OrderItemDto" : {
        "type" : "object",
        "properties" : {
          "order_item_guid" : {
            "type" : "string",
            "description" : "Gets or sets the order item identifier",
            "format" : "uuid"
          },
          "order_id" : {
            "type" : "integer",
            "description" : "Gets or sets the order identifier",
            "format" : "int32"
          },
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity",
            "format" : "int32"
          },
          "unit_price_incl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the unit price in primary store currency (include tax)",
            "format" : "double"
          },
          "unit_price_excl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the unit price in primary store currency (exclude tax)",
            "format" : "double"
          },
          "price_incl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the price in primary store currency (include tax)",
            "format" : "double"
          },
          "price_excl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the price in primary store currency (exclude tax)",
            "format" : "double"
          },
          "discount_amount_incl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the discount amount (include tax)",
            "format" : "double"
          },
          "discount_amount_excl_tax" : {
            "type" : "number",
            "description" : "Gets or sets the discount amount (exclude tax)",
            "format" : "double"
          },
          "original_product_cost" : {
            "type" : "number",
            "description" : "Gets or sets the original cost of this order item (when an order was placed), qty 1",
            "format" : "double"
          },
          "attribute_description" : {
            "type" : "string",
            "description" : "Gets or sets the attribute description",
            "nullable" : true
          },
          "attributes_xml" : {
            "type" : "string",
            "description" : "Gets or sets the product attributes in XML format",
            "nullable" : true
          },
          "download_count" : {
            "type" : "integer",
            "description" : "Gets or sets the download count",
            "format" : "int32"
          },
          "is_download_activated" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether download is activated"
          },
          "license_download_id" : {
            "type" : "integer",
            "description" : "Gets or sets a license download identifier (in case this is a downloadable product)",
            "format" : "int32",
            "nullable" : true
          },
          "item_weight" : {
            "type" : "number",
            "description" : "Gets or sets the total weight of one item\r\nIt's nullable for compatibility with the previous version of nopCommerce where was no such property",
            "format" : "double",
            "nullable" : true
          },
          "rental_start_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the rental product start date (null if it's not a rental product)",
            "format" : "date-time",
            "nullable" : true
          },
          "rental_end_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the rental product end date (null if it's not a rental product)",
            "format" : "date-time",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an order item"
      },
      "OrderNoteDto" : {
        "type" : "object",
        "properties" : {
          "order_id" : {
            "type" : "integer",
            "description" : "Gets or sets the order identifier",
            "format" : "int32"
          },
          "note" : {
            "type" : "string",
            "description" : "Gets or sets the note",
            "nullable" : true
          },
          "download_id" : {
            "type" : "integer",
            "description" : "Gets or sets the attached file (download) identifier",
            "format" : "int32"
          },
          "display_to_customer" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether a customer can see a note"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of order note creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an order note"
      },
      "OrderOrderDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/OrderDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "OrderStatus" : {
        "type" : "string",
        "enum" : [ "Pending", "Processing", "Complete", "Cancelled" ]
      },
      "ParseCheckoutAttributeValuesResponse" : {
        "type" : "object",
        "properties" : {
          "attribute" : {
            "$ref" : "#/components/schemas/CheckoutAttributeDto"
          },
          "values" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/CheckoutAttributeValueDto"
            }
          }
        },
        "additionalProperties" : false
      },
      "PasswordFormat" : {
        "type" : "string",
        "enum" : [ "Clear", "Hashed", "Encrypted" ]
      },
      "PaymentStatus" : {
        "type" : "string",
        "enum" : [ "Pending", "Authorized", "Paid", "PartiallyRefunded", "Refunded", "Voided" ]
      },
      "PermissionRecordCustomerRoleMappingDto" : {
        "type" : "object",
        "properties" : {
          "permission_record_id" : {
            "type" : "integer",
            "description" : "Gets or sets the permission record identifier",
            "format" : "int32"
          },
          "customer_role_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer role identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a permission record-customer role mapping Dto"
      },
      "PermissionRecordDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the permission name",
            "nullable" : true
          },
          "system_name" : {
            "type" : "string",
            "description" : "Gets or sets the permission system name",
            "nullable" : true
          },
          "category" : {
            "type" : "string",
            "description" : "Gets or sets the permission category",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a permission record"
      },
      "PickupPointDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets a name",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets a description",
            "nullable" : true
          },
          "provider_system_name" : {
            "type" : "string",
            "description" : "Gets or sets a system name of the pickup point provider",
            "nullable" : true
          },
          "address" : {
            "type" : "string",
            "description" : "Gets or sets an address",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "description" : "Gets or sets a city",
            "nullable" : true
          },
          "county" : {
            "type" : "string",
            "description" : "Gets or sets a county",
            "nullable" : true
          },
          "state_abbreviation" : {
            "type" : "string",
            "description" : "Gets or sets a state abbreviation",
            "nullable" : true
          },
          "country_code" : {
            "type" : "string",
            "description" : "Gets or sets a two-letter ISO country code",
            "nullable" : true
          },
          "zip_postal_code" : {
            "type" : "string",
            "description" : "Gets or sets a zip postal code",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "description" : "Gets or sets a latitude",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "description" : "Gets or sets a longitude",
            "format" : "double",
            "nullable" : true
          },
          "pickup_fee" : {
            "type" : "number",
            "description" : "Gets or sets a fee for the pickup",
            "format" : "double"
          },
          "opening_hours" : {
            "type" : "string",
            "description" : "Gets or sets an opening hours",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "transit_days" : {
            "type" : "integer",
            "description" : "Gets or sets a transit days",
            "format" : "int32",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Pickup point"
      },
      "PictureBinaryDto" : {
        "type" : "object",
        "properties" : {
          "binary_data" : {
            "type" : "string",
            "description" : "Gets or sets the picture binary",
            "format" : "byte",
            "nullable" : true
          },
          "picture_id" : {
            "type" : "integer",
            "description" : "Gets or sets the picture identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a picture binary data"
      },
      "PictureDto" : {
        "type" : "object",
        "properties" : {
          "mime_type" : {
            "type" : "string",
            "description" : "Gets or sets the picture mime type",
            "nullable" : true
          },
          "seo_filename" : {
            "type" : "string",
            "description" : "Gets or sets the SEO friendly filename of the picture",
            "nullable" : true
          },
          "alt_attribute" : {
            "type" : "string",
            "description" : "Gets or sets the \"alt\" attribute for \"img\" HTML element. If empty, then a default rule will be used (e.g. product name)",
            "nullable" : true
          },
          "title_attribute" : {
            "type" : "string",
            "description" : "Gets or sets the \"title\" attribute for \"img\" HTML element. If empty, then a default rule will be used (e.g. product name)",
            "nullable" : true
          },
          "is_new" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the picture is new"
          },
          "virtual_path" : {
            "type" : "string",
            "description" : "Gets or sets the picture virtual path",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a picture"
      },
      "PicturePictureDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/PictureDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "PictureType" : {
        "type" : "string",
        "enum" : [ "Entity", "Avatar" ]
      },
      "PlaceOrderResultDto" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "Gets a value indicating whether request has been completed successfully"
          },
          "errors" : {
            "type" : "array",
            "description" : "Errors",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "placed_order" : {
            "$ref" : "#/components/schemas/OrderDto"
          }
        },
        "additionalProperties" : false
      },
      "PluginDescriptorDto" : {
        "type" : "object",
        "properties" : {
          "group" : {
            "type" : "string",
            "description" : "Gets or sets the plugin group",
            "nullable" : true
          },
          "friendly_name" : {
            "type" : "string",
            "description" : "Gets or sets the plugin friendly name",
            "nullable" : true
          },
          "supported_versions" : {
            "type" : "array",
            "description" : "Gets or sets the supported versions of nopCommerce",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "author" : {
            "type" : "string",
            "description" : "Gets or sets the author",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "assembly_file_name" : {
            "type" : "string",
            "description" : "Gets or sets the name of the assembly file",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets the description",
            "nullable" : true
          },
          "limited_to_stores" : {
            "type" : "array",
            "description" : "Gets or sets the list of store identifiers in which this plugin is available. If empty, then this plugin is available in all stores",
            "nullable" : true,
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "limited_to_customer_roles" : {
            "type" : "array",
            "description" : "Gets or sets the list of customer role identifiers for which this plugin is available. If empty, then this plugin is available for all ones.",
            "nullable" : true,
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "depends_on" : {
            "type" : "array",
            "description" : "Gets or sets the list of plugins' system name that this plugin depends on",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          },
          "system_name" : {
            "type" : "string",
            "description" : "Gets or sets the plugin system name",
            "nullable" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Gets or sets the version",
            "nullable" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a plugin descriptor"
      },
      "PollAnswerDto" : {
        "type" : "object",
        "properties" : {
          "poll_id" : {
            "type" : "integer",
            "description" : "Gets or sets the poll identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the poll answer name",
            "nullable" : true
          },
          "number_of_votes" : {
            "type" : "integer",
            "description" : "Gets or sets the current number of votes",
            "format" : "int32"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a poll answer"
      },
      "PollAnswerPollAnswerDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/PollAnswerDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "PollDto" : {
        "type" : "object",
        "properties" : {
          "language_id" : {
            "type" : "integer",
            "description" : "Gets or sets the language identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "system_keyword" : {
            "type" : "string",
            "description" : "Gets or sets the system keyword",
            "nullable" : true
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is published"
          },
          "show_on_homepage" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity should be shown on home page"
          },
          "allow_guests_to_vote" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the anonymous votes are allowed"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "start_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the poll start date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "end_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the poll end date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a poll"
      },
      "PollPollDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/PollDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "PollVotingRecordDto" : {
        "type" : "object",
        "properties" : {
          "poll_answer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the poll answer identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a poll voting record"
      },
      "PollVotingRecordPollVotingRecordDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/PollVotingRecordDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "PredefinedProductAttributeValueDto" : {
        "type" : "object",
        "properties" : {
          "product_attribute_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product attribute identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the product attribute name",
            "nullable" : true
          },
          "price_adjustment" : {
            "type" : "number",
            "description" : "Gets or sets the price adjustment",
            "format" : "double"
          },
          "price_adjustment_use_percentage" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether \"price adjustment\" is specified as percentage"
          },
          "weight_adjustment" : {
            "type" : "number",
            "description" : "Gets or sets the weight adjustment",
            "format" : "double"
          },
          "cost" : {
            "type" : "number",
            "description" : "Gets or sets the attribute value cost",
            "format" : "double"
          },
          "is_pre_selected" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the value is pre-selected"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a predefined (default) product attribute value"
      },
      "PrivateMessageDto" : {
        "type" : "object",
        "properties" : {
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "from_customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier who sent the message",
            "format" : "int32"
          },
          "to_customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier who should receive the message",
            "format" : "int32"
          },
          "subject" : {
            "type" : "string",
            "description" : "Gets or sets the subject",
            "nullable" : true
          },
          "text" : {
            "type" : "string",
            "description" : "Gets or sets the text",
            "nullable" : true
          },
          "is_read" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether message is read"
          },
          "is_deleted_by_author" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether message is deleted by author"
          },
          "is_deleted_by_recipient" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether message is deleted by recipient"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a private message"
      },
      "PrivateMessagePrivateMessageDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/PrivateMessageDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ProblemDetails" : {
        "type" : "object",
        "properties" : {
          "Type" : {
            "type" : "string",
            "nullable" : true
          },
          "Title" : {
            "type" : "string",
            "nullable" : true
          },
          "Status" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "Detail" : {
            "type" : "string",
            "nullable" : true
          },
          "Instance" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "additionalProperties" : { }
      },
      "ProcessPaymentRequestDto" : {
        "type" : "object",
        "properties" : {
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets a store identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets a customer identifier",
            "format" : "int32"
          },
          "order_guid" : {
            "type" : "string",
            "description" : "Gets or sets an order unique identifier. Used when order is not saved yet (payment gateways that do not redirect a customer to a third-party URL)",
            "format" : "uuid"
          },
          "order_guid_generated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets a datetime when \"OrderGuid\" property was generated (used for security purposes)",
            "format" : "date-time",
            "nullable" : true
          },
          "order_total" : {
            "type" : "number",
            "description" : "Gets or sets an order total",
            "format" : "double"
          },
          "payment_method_system_name" : {
            "type" : "string",
            "description" : "/// <summary>\r\nGets or sets a payment method identifier\r\n</summary>",
            "nullable" : true
          },
          "credit_card_type" : {
            "type" : "string",
            "description" : "Gets or sets a credit card type (Visa, Master Card, etc...). We leave it empty if not used by a payment gateway",
            "nullable" : true
          },
          "credit_card_name" : {
            "type" : "string",
            "description" : "Gets or sets a credit card owner name",
            "nullable" : true
          },
          "credit_card_number" : {
            "type" : "string",
            "description" : "Gets or sets a credit card number",
            "nullable" : true
          },
          "credit_card_expire_year" : {
            "type" : "integer",
            "description" : "Gets or sets a credit card expire year",
            "format" : "int32"
          },
          "credit_card_expire_month" : {
            "type" : "integer",
            "description" : "Gets or sets a credit card expire month",
            "format" : "int32"
          },
          "credit_card_cvv2" : {
            "type" : "string",
            "description" : "Gets or sets a credit card CVV2 (Card Verification Value)",
            "nullable" : true
          },
          "initial_order" : {
            "$ref" : "#/components/schemas/OrderDto"
          },
          "recurring_cycle_length" : {
            "type" : "integer",
            "description" : "Gets or sets the cycle length",
            "format" : "int32"
          },
          "recurring_cycle_period" : {
            "type" : "integer",
            "description" : "Gets or sets the cycle period",
            "format" : "int32"
          },
          "recurring_total_cycles" : {
            "type" : "integer",
            "description" : "Gets or sets the total cycles",
            "format" : "int32"
          },
          "custom_values" : {
            "type" : "object",
            "additionalProperties" : { },
            "description" : "You can store any custom value in this property",
            "nullable" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a payment info holder"
      },
      "ProductAttributeCombinationDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "attributes_xml" : {
            "type" : "string",
            "description" : "Gets or sets the attributes",
            "nullable" : true
          },
          "stock_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the stock quantity",
            "format" : "int32"
          },
          "allow_out_of_stock_orders" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to allow orders when out of stock"
          },
          "sku" : {
            "type" : "string",
            "description" : "Gets or sets the SKU",
            "nullable" : true
          },
          "manufacturer_part_number" : {
            "type" : "string",
            "description" : "Gets or sets the manufacturer part number",
            "nullable" : true
          },
          "gtin" : {
            "type" : "string",
            "description" : "Gets or sets the Global Trade Item Number (GTIN). These identifiers include UPC (in North America), EAN (in Europe), JAN (in Japan), and ISBN (for books).",
            "nullable" : true
          },
          "overridden_price" : {
            "type" : "number",
            "description" : "Gets or sets the attribute combination price. This way a store owner can override the default product price when this attribute combination is added to the cart. For example, you can give a discount this way.",
            "format" : "double",
            "nullable" : true
          },
          "notify_admin_for_quantity_below" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity when admin should be notified",
            "format" : "int32"
          },
          "picture_id" : {
            "type" : "integer",
            "description" : "Gets or sets the identifier of picture associated with this combination",
            "format" : "int32"
          },
          "min_stock_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the minimum stock quantity",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product attribute combination"
      },
      "ProductAttributeCombinationProductAttributeCombinationDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductAttributeCombinationDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ProductAttributeDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets the description",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product attribute"
      },
      "ProductAttributeMappingDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "product_attribute_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product attribute identifier",
            "format" : "int32"
          },
          "text_prompt" : {
            "type" : "string",
            "description" : "Gets or sets a value a text prompt",
            "nullable" : true
          },
          "is_required" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is required"
          },
          "attribute_control_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the attribute control type identifier",
            "format" : "int32"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "validation_min_length" : {
            "type" : "integer",
            "description" : "Gets or sets the validation rule for minimum length (for textbox and multiline textbox)",
            "format" : "int32",
            "nullable" : true
          },
          "validation_max_length" : {
            "type" : "integer",
            "description" : "Gets or sets the validation rule for maximum length (for textbox and multiline textbox)",
            "format" : "int32",
            "nullable" : true
          },
          "validation_file_allowed_extensions" : {
            "type" : "string",
            "description" : "Gets or sets the validation rule for file allowed extensions (for file upload)",
            "nullable" : true
          },
          "validation_file_maximum_size" : {
            "type" : "integer",
            "description" : "Gets or sets the validation rule for file maximum size in kilobytes (for file upload)",
            "format" : "int32",
            "nullable" : true
          },
          "default_value" : {
            "type" : "string",
            "description" : "Gets or sets the default value (for textbox and multiline textbox)",
            "nullable" : true
          },
          "condition_attribute_xml" : {
            "type" : "string",
            "description" : "Gets or sets a condition (depending on other attribute) when this attribute should be enabled (visible).\r\nLeave empty (or null) to enable this attribute.\r\nConditional attributes that only appear if a previous attribute is selected, such as having an option \r\nfor personalizing clothing with a name and only providing the text input box if the \"Personalize\" radio button is checked.",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product attribute mapping"
      },
      "ProductAttributeProductAttributeDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductAttributeDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ProductAttributeValueDto" : {
        "type" : "object",
        "properties" : {
          "product_attribute_mapping_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product attribute mapping identifier",
            "format" : "int32"
          },
          "attribute_value_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the attribute value type identifier",
            "format" : "int32"
          },
          "associated_product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the associated product identifier (used only with AttributeValueType.AssociatedToProduct)",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the product attribute name",
            "nullable" : true
          },
          "color_squares_rgb" : {
            "type" : "string",
            "description" : "Gets or sets the color RGB value (used with \"Color squares\" attribute type)",
            "nullable" : true
          },
          "image_squares_picture_id" : {
            "type" : "integer",
            "description" : "Gets or sets the picture ID for image square (used with \"Image squares\" attribute type)",
            "format" : "int32"
          },
          "price_adjustment" : {
            "type" : "number",
            "description" : "Gets or sets the price adjustment (used only with AttributeValueType.Simple)",
            "format" : "double"
          },
          "price_adjustment_use_percentage" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether \"price adjustment\" is specified as percentage (used only with AttributeValueType.Simple)"
          },
          "weight_adjustment" : {
            "type" : "number",
            "description" : "Gets or sets the weight adjustment (used only with AttributeValueType.Simple)",
            "format" : "double"
          },
          "cost" : {
            "type" : "number",
            "description" : "Gets or sets the attribute value cost (used only with AttributeValueType.Simple)",
            "format" : "double"
          },
          "customer_enters_qty" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the customer can enter the quantity of associated product (used only with AttributeValueType.AssociatedToProduct)"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity of associated product (used only with AttributeValueType.AssociatedToProduct)",
            "format" : "int32"
          },
          "is_pre_selected" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the value is pre-selected"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "picture_id" : {
            "type" : "integer",
            "description" : "Gets or sets the picture (identifier) associated with this value. This picture should replace a product main picture once clicked (selected).",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product attribute value"
      },
      "ProductAvailabilityRangeDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product availability range"
      },
      "ProductCategoryDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "category_id" : {
            "type" : "integer",
            "description" : "Gets or sets the category identifier",
            "format" : "int32"
          },
          "is_featured_product" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product is featured"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product category mapping"
      },
      "ProductCategoryProductCategoryDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductCategoryDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ProductDto" : {
        "type" : "object",
        "properties" : {
          "product_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product type identifier",
            "format" : "int32"
          },
          "parent_grouped_product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the parent product identifier. It's used to identify associated products (only with \"grouped\" products)",
            "format" : "int32"
          },
          "visible_individually" : {
            "type" : "boolean",
            "description" : "Gets or sets the values indicating whether this product is visible in catalog or search results.\r\nIt's used when this product is associated to some \"grouped\" one\r\nThis way associated products could be accessed/added/etc only from a grouped product details page"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "short_description" : {
            "type" : "string",
            "description" : "Gets or sets the short description",
            "nullable" : true
          },
          "full_description" : {
            "type" : "string",
            "description" : "Gets or sets the full description",
            "nullable" : true
          },
          "admin_comment" : {
            "type" : "string",
            "description" : "Gets or sets the admin comment",
            "nullable" : true
          },
          "product_template_id" : {
            "type" : "integer",
            "description" : "Gets or sets a value of used product template identifier",
            "format" : "int32"
          },
          "vendor_id" : {
            "type" : "integer",
            "description" : "Gets or sets a vendor identifier",
            "format" : "int32"
          },
          "show_on_homepage" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to show the product on home page"
          },
          "meta_keywords" : {
            "type" : "string",
            "description" : "Gets or sets the meta keywords",
            "nullable" : true
          },
          "meta_description" : {
            "type" : "string",
            "description" : "Gets or sets the meta description",
            "nullable" : true
          },
          "meta_title" : {
            "type" : "string",
            "description" : "Gets or sets the meta title",
            "nullable" : true
          },
          "allow_customer_reviews" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product allows customer reviews"
          },
          "approved_rating_sum" : {
            "type" : "integer",
            "description" : "Gets or sets the rating sum (approved reviews)",
            "format" : "int32"
          },
          "not_approved_rating_sum" : {
            "type" : "integer",
            "description" : "Gets or sets the rating sum (not approved reviews)",
            "format" : "int32"
          },
          "approved_total_reviews" : {
            "type" : "integer",
            "description" : "Gets or sets the total rating votes (approved reviews)",
            "format" : "int32"
          },
          "not_approved_total_reviews" : {
            "type" : "integer",
            "description" : "Gets or sets the total rating votes (not approved reviews)",
            "format" : "int32"
          },
          "subject_to_acl" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is subject to ACL"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "sku" : {
            "type" : "string",
            "description" : "Gets or sets the SKU",
            "nullable" : true
          },
          "manufacturer_part_number" : {
            "type" : "string",
            "description" : "Gets or sets the manufacturer part number",
            "nullable" : true
          },
          "gtin" : {
            "type" : "string",
            "description" : "Gets or sets the Global Trade Item Number (GTIN). These identifiers include UPC (in North America), EAN (in Europe), JAN (in Japan), and ISBN (for books).",
            "nullable" : true
          },
          "is_gift_card" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product is gift card"
          },
          "gift_card_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the gift card type identifier",
            "format" : "int32"
          },
          "overridden_gift_card_amount" : {
            "type" : "number",
            "description" : "Gets or sets gift card amount that can be used after purchase. If not specified, then product price will be used.",
            "format" : "double",
            "nullable" : true
          },
          "require_other_products" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product requires that other products are added to the cart (Product X requires Product Y)"
          },
          "required_product_ids" : {
            "type" : "string",
            "description" : "Gets or sets a required product identifiers (comma separated)",
            "nullable" : true
          },
          "automatically_add_required_products" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether required products are automatically added to the cart"
          },
          "is_download" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product is download"
          },
          "download_id" : {
            "type" : "integer",
            "description" : "Gets or sets the download identifier",
            "format" : "int32"
          },
          "unlimited_downloads" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this downloadable product can be downloaded unlimited number of times"
          },
          "max_number_of_downloads" : {
            "type" : "integer",
            "description" : "Gets or sets the maximum number of downloads",
            "format" : "int32"
          },
          "download_expiration_days" : {
            "type" : "integer",
            "description" : "Gets or sets the number of days during customers keeps access to the file.",
            "format" : "int32",
            "nullable" : true
          },
          "download_activation_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the download activation type",
            "format" : "int32"
          },
          "has_sample_download" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product has a sample download file"
          },
          "sample_download_id" : {
            "type" : "integer",
            "description" : "Gets or sets the sample download identifier",
            "format" : "int32"
          },
          "has_user_agreement" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product has user agreement"
          },
          "user_agreement_text" : {
            "type" : "string",
            "description" : "Gets or sets the text of license agreement",
            "nullable" : true
          },
          "is_recurring" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product is recurring"
          },
          "recurring_cycle_length" : {
            "type" : "integer",
            "description" : "Gets or sets the cycle length",
            "format" : "int32"
          },
          "recurring_cycle_period_id" : {
            "type" : "integer",
            "description" : "Gets or sets the cycle period",
            "format" : "int32"
          },
          "recurring_total_cycles" : {
            "type" : "integer",
            "description" : "Gets or sets the total cycles",
            "format" : "int32"
          },
          "is_rental" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product is rental"
          },
          "rental_price_length" : {
            "type" : "integer",
            "description" : "Gets or sets the rental length for some period (price for this period)",
            "format" : "int32"
          },
          "rental_price_period_id" : {
            "type" : "integer",
            "description" : "Gets or sets the rental period (price for this period)",
            "format" : "int32"
          },
          "is_ship_enabled" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is ship enabled"
          },
          "is_free_shipping" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is free shipping"
          },
          "ship_separately" : {
            "type" : "boolean",
            "description" : "Gets or sets a value this product should be shipped separately (each item)"
          },
          "additional_shipping_charge" : {
            "type" : "number",
            "description" : "Gets or sets the additional shipping charge",
            "format" : "double"
          },
          "delivery_date_id" : {
            "type" : "integer",
            "description" : "Gets or sets a delivery date identifier",
            "format" : "int32"
          },
          "is_tax_exempt" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product is marked as tax exempt"
          },
          "tax_category_id" : {
            "type" : "integer",
            "description" : "Gets or sets the tax category identifier",
            "format" : "int32"
          },
          "is_telecommunications_or_broadcasting_or_electronic_services" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product is telecommunications or broadcasting or electronic services"
          },
          "manage_inventory_method_id" : {
            "type" : "integer",
            "description" : "Gets or sets a value indicating how to manage inventory",
            "format" : "int32"
          },
          "product_availability_range_id" : {
            "type" : "integer",
            "description" : "Gets or sets a product availability range identifier",
            "format" : "int32"
          },
          "use_multiple_warehouses" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether multiple warehouses are used for this product"
          },
          "warehouse_id" : {
            "type" : "integer",
            "description" : "Gets or sets a warehouse identifier",
            "format" : "int32"
          },
          "stock_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the stock quantity",
            "format" : "int32"
          },
          "display_stock_availability" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to display stock availability"
          },
          "display_stock_quantity" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to display stock quantity"
          },
          "min_stock_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the minimum stock quantity",
            "format" : "int32"
          },
          "low_stock_activity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the low stock activity identifier",
            "format" : "int32"
          },
          "notify_admin_for_quantity_below" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity when admin should be notified",
            "format" : "int32"
          },
          "backorder_mode_id" : {
            "type" : "integer",
            "description" : "Gets or sets a value backorder mode identifier",
            "format" : "int32"
          },
          "allow_back_in_stock_subscriptions" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to back in stock subscriptions are allowed"
          },
          "order_minimum_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the order minimum quantity",
            "format" : "int32"
          },
          "order_maximum_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the order maximum quantity",
            "format" : "int32"
          },
          "allowed_quantities" : {
            "type" : "string",
            "description" : "Gets or sets the comma separated list of allowed quantities. null or empty if any quantity is allowed",
            "nullable" : true
          },
          "allow_adding_only_existing_attribute_combinations" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether we allow adding to the cart/wishlist only attribute combinations that exist and have stock greater than zero.\r\nThis option is used only when we have \"manage inventory\" set to \"track inventory by product attributes\""
          },
          "not_returnable" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this product is returnable (a customer is allowed to submit return request with this product)"
          },
          "disable_buy_button" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to disable buy (Add to cart) button"
          },
          "disable_wishlist_button" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to disable \"Add to wishlist\" button"
          },
          "available_for_pre_order" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this item is available for Pre-Order"
          },
          "pre_order_availability_start_date_time_utc" : {
            "type" : "string",
            "description" : "Gets or sets the start date and time of the product availability (for pre-order products)",
            "format" : "date-time",
            "nullable" : true
          },
          "call_for_price" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether to show \"Call for Pricing\" or \"Call for quote\" instead of price"
          },
          "price" : {
            "type" : "number",
            "description" : "Gets or sets the price",
            "format" : "double"
          },
          "old_price" : {
            "type" : "number",
            "description" : "Gets or sets the old price",
            "format" : "double"
          },
          "product_cost" : {
            "type" : "number",
            "description" : "Gets or sets the product cost",
            "format" : "double"
          },
          "customer_enters_price" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether a customer enters price"
          },
          "minimum_customer_entered_price" : {
            "type" : "number",
            "description" : "Gets or sets the minimum price entered by a customer",
            "format" : "double"
          },
          "maximum_customer_entered_price" : {
            "type" : "number",
            "description" : "Gets or sets the maximum price entered by a customer",
            "format" : "double"
          },
          "baseprice_enabled" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether base price (PAngV) is enabled. Used by German users."
          },
          "baseprice_amount" : {
            "type" : "number",
            "description" : "Gets or sets an amount in product for PAngV",
            "format" : "double"
          },
          "baseprice_unit_id" : {
            "type" : "integer",
            "description" : "Gets or sets a unit of product for PAngV (MeasureWeight entity)",
            "format" : "int32"
          },
          "baseprice_base_amount" : {
            "type" : "number",
            "description" : "Gets or sets a reference amount for PAngV",
            "format" : "double"
          },
          "baseprice_base_unit_id" : {
            "type" : "integer",
            "description" : "Gets or sets a reference unit for PAngV (MeasureWeight entity)",
            "format" : "int32"
          },
          "mark_as_new" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this product is marked as new"
          },
          "mark_as_new_start_date_time_utc" : {
            "type" : "string",
            "description" : "Gets or sets the start date and time of the new product (set product as \"New\" from date). Leave empty to ignore this property",
            "format" : "date-time",
            "nullable" : true
          },
          "mark_as_new_end_date_time_utc" : {
            "type" : "string",
            "description" : "Gets or sets the end date and time of the new product (set product as \"New\" to date). Leave empty to ignore this property",
            "format" : "date-time",
            "nullable" : true
          },
          "has_tier_prices" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this product has tier prices configured\r\n<remarks>The same as if we run TierPrices.Count > 0\r\nWe use this property for performance optimization:\r\nif this property is set to false, then we do not need to load tier prices navigation property\r\n</remarks>"
          },
          "has_discounts_applied" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether this product has discounts applied\r\n<remarks>The same as if we run AppliedDiscounts.Count > 0\r\nWe use this property for performance optimization:\r\nif this property is set to false, then we do not need to load Applied Discounts navigation property\r\n</remarks>"
          },
          "weight" : {
            "type" : "number",
            "description" : "Gets or sets the weight",
            "format" : "double"
          },
          "length" : {
            "type" : "number",
            "description" : "Gets or sets the length",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Gets or sets the width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Gets or sets the height",
            "format" : "double"
          },
          "available_start_date_time_utc" : {
            "type" : "string",
            "description" : "Gets or sets the available start date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "available_end_date_time_utc" : {
            "type" : "string",
            "description" : "Gets or sets the available end date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets a display order.\r\nThis value is used when sorting associated products (used with \"grouped\" products)\r\nThis value is used when sorting home page products",
            "format" : "int32"
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is published"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity has been deleted"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of product creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of product update",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product"
      },
      "ProductManufacturerDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "manufacturer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the manufacturer identifier",
            "format" : "int32"
          },
          "is_featured_product" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the product is featured"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product manufacturer mapping"
      },
      "ProductManufacturerProductManufacturerDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductManufacturerDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ProductPictureDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "picture_id" : {
            "type" : "integer",
            "description" : "Gets or sets the picture identifier",
            "format" : "int32"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product picture mapping"
      },
      "ProductPriceResponse" : {
        "type" : "object",
        "properties" : {
          "price" : {
            "type" : "number",
            "description" : "Price",
            "format" : "double"
          },
          "tax_rate" : {
            "type" : "number",
            "description" : "Tax rate",
            "format" : "double"
          }
        },
        "additionalProperties" : false
      },
      "ProductProductDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ProductProductTagMappingDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "product_tag_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product tag identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product-product tag mapping"
      },
      "ProductReviewDto" : {
        "type" : "object",
        "properties" : {
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "is_approved" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the content is approved"
          },
          "title" : {
            "type" : "string",
            "description" : "Gets or sets the title",
            "nullable" : true
          },
          "review_text" : {
            "type" : "string",
            "description" : "Gets or sets the review text",
            "nullable" : true
          },
          "reply_text" : {
            "type" : "string",
            "description" : "Gets or sets the reply text",
            "nullable" : true
          },
          "customer_notified_of_reply" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether the customer is already notified of the reply to review"
          },
          "rating" : {
            "type" : "integer",
            "description" : "Review rating",
            "format" : "int32"
          },
          "helpful_yes_total" : {
            "type" : "integer",
            "description" : "Review helpful votes total",
            "format" : "int32"
          },
          "helpful_no_total" : {
            "type" : "integer",
            "description" : "Review not helpful votes total",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product review"
      },
      "ProductReviewProductReviewDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductReviewDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ProductReviewReviewTypeMappingDto" : {
        "type" : "object",
        "properties" : {
          "product_review_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product review identifier",
            "format" : "int32"
          },
          "review_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the review type identifier",
            "format" : "int32"
          },
          "rating" : {
            "type" : "integer",
            "description" : "Gets or sets the rating",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product review and review type mapping"
      },
      "ProductSortingEnum" : {
        "type" : "string",
        "enum" : [ "Position", "NameAsc", "NameDesc", "PriceAsc", "PriceDesc", "CreatedOn" ]
      },
      "ProductSpecificationAttributeDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "attribute_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the attribute type ID",
            "format" : "int32"
          },
          "specification_attribute_option_id" : {
            "type" : "integer",
            "description" : "Gets or sets the specification attribute identifier",
            "format" : "int32"
          },
          "custom_value" : {
            "type" : "string",
            "description" : "Gets or sets the custom value",
            "nullable" : true
          },
          "allow_filtering" : {
            "type" : "boolean",
            "description" : "Gets or sets whether the attribute can be filtered by"
          },
          "show_on_product_page" : {
            "type" : "boolean",
            "description" : "Gets or sets whether the attribute will be shown on the product page"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product specification attribute"
      },
      "ProductTagDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product tag"
      },
      "ProductTemplateDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the template name",
            "nullable" : true
          },
          "view_path" : {
            "type" : "string",
            "description" : "Gets or sets the view path",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "ignored_product_types" : {
            "type" : "string",
            "description" : "Gets or sets a comma-separated list of product type identifiers NOT supported by this template",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a product template"
      },
      "ProductType" : {
        "type" : "string",
        "enum" : [ "SimpleProduct", "GroupedProduct" ]
      },
      "ProductWarehouseInventoryDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "warehouse_id" : {
            "type" : "integer",
            "description" : "Gets or sets the warehouse identifier",
            "format" : "int32"
          },
          "stock_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the stock quantity",
            "format" : "int32"
          },
          "reserved_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the reserved quantity (ordered but not shipped yet)",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a record to manage product inventory per warehouse"
      },
      "QueuedEmailDto" : {
        "type" : "object",
        "properties" : {
          "priority_id" : {
            "type" : "integer",
            "description" : "Gets or sets the priority",
            "format" : "int32"
          },
          "from" : {
            "type" : "string",
            "description" : "Gets or sets the From property (email address)",
            "nullable" : true
          },
          "from_name" : {
            "type" : "string",
            "description" : "Gets or sets the FromName property",
            "nullable" : true
          },
          "to" : {
            "type" : "string",
            "description" : "Gets or sets the To property (email address)",
            "nullable" : true
          },
          "to_name" : {
            "type" : "string",
            "description" : "Gets or sets the ToName property",
            "nullable" : true
          },
          "reply_to" : {
            "type" : "string",
            "description" : "Gets or sets the ReplyTo property (email address)",
            "nullable" : true
          },
          "reply_to_name" : {
            "type" : "string",
            "description" : "Gets or sets the ReplyToName property",
            "nullable" : true
          },
          "cc" : {
            "type" : "string",
            "description" : "Gets or sets the CC",
            "nullable" : true
          },
          "bcc" : {
            "type" : "string",
            "description" : "Gets or sets the BCC",
            "nullable" : true
          },
          "subject" : {
            "type" : "string",
            "description" : "Gets or sets the subject",
            "nullable" : true
          },
          "body" : {
            "type" : "string",
            "description" : "Gets or sets the body",
            "nullable" : true
          },
          "attachment_file_path" : {
            "type" : "string",
            "description" : "Gets or sets the attachment file path (full file path)",
            "nullable" : true
          },
          "attachment_file_name" : {
            "type" : "string",
            "description" : "Gets or sets the attachment file name. If specified, then this file name will be sent to a recipient. Otherwise, \"AttachmentFilePath\" name will be used.",
            "nullable" : true
          },
          "attached_download_id" : {
            "type" : "integer",
            "description" : "Gets or sets the download identifier of attached file",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of item creation in UTC",
            "format" : "date-time"
          },
          "dont_send_before_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time in UTC before which this email should not be sent",
            "format" : "date-time",
            "nullable" : true
          },
          "sent_tries" : {
            "type" : "integer",
            "description" : "Gets or sets the send tries",
            "format" : "int32"
          },
          "sent_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the sent date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "email_account_id" : {
            "type" : "integer",
            "description" : "Gets or sets the used email account identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an email item"
      },
      "QueuedEmailQueuedEmailDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/QueuedEmailDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "RecurringPaymentDto" : {
        "type" : "object",
        "properties" : {
          "cycle_length" : {
            "type" : "integer",
            "description" : "Gets or sets the cycle length",
            "format" : "int32"
          },
          "cycle_period_id" : {
            "type" : "integer",
            "description" : "Gets or sets the cycle period identifier",
            "format" : "int32"
          },
          "total_cycles" : {
            "type" : "integer",
            "description" : "Gets or sets the total cycles",
            "format" : "int32"
          },
          "start_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the start date",
            "format" : "date-time"
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the payment is active"
          },
          "last_payment_failed" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the last payment failed"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity has been deleted"
          },
          "initial_order_id" : {
            "type" : "integer",
            "description" : "Gets or sets the initial order identifier",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of payment creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a recurring payment"
      },
      "RecurringPaymentHistoryDto" : {
        "type" : "object",
        "properties" : {
          "recurring_payment_id" : {
            "type" : "integer",
            "description" : "Gets or sets the recurring payment identifier",
            "format" : "int32"
          },
          "order_id" : {
            "type" : "integer",
            "description" : "Gets or sets the order identifier",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of entity creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a recurring payment history"
      },
      "RecurringPaymentRecurringPaymentDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RecurringPaymentDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "RecurringPaymentType" : {
        "type" : "string",
        "enum" : [ "NotSupported", "Manual", "Automatic" ]
      },
      "RecurringProductCyclePeriod" : {
        "type" : "string",
        "enum" : [ "Days", "Weeks", "Months", "Years" ]
      },
      "RelatedProductDto" : {
        "type" : "object",
        "properties" : {
          "product_id1" : {
            "type" : "integer",
            "description" : "Gets or sets the first product identifier",
            "format" : "int32"
          },
          "product_id2" : {
            "type" : "integer",
            "description" : "Gets or sets the second product identifier",
            "format" : "int32"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a related product"
      },
      "ReturnRequestActionDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a return request action"
      },
      "ReturnRequestDto" : {
        "type" : "object",
        "properties" : {
          "custom_number" : {
            "type" : "string",
            "description" : "Custom number of return request",
            "nullable" : true
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "order_item_id" : {
            "type" : "integer",
            "description" : "Gets or sets the order item identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity",
            "format" : "int32"
          },
          "returned_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity returned to stock",
            "format" : "int32"
          },
          "reason_for_return" : {
            "type" : "string",
            "description" : "Gets or sets the reason to return",
            "nullable" : true
          },
          "requested_action" : {
            "type" : "string",
            "description" : "Gets or sets the requested action",
            "nullable" : true
          },
          "customer_comments" : {
            "type" : "string",
            "description" : "Gets or sets the customer comments",
            "nullable" : true
          },
          "uploaded_file_id" : {
            "type" : "integer",
            "description" : "Gets or sets identifier of the file (Download) uploaded by the customer",
            "format" : "int32"
          },
          "staff_notes" : {
            "type" : "string",
            "description" : "Gets or sets the staff notes",
            "nullable" : true
          },
          "return_request_status_id" : {
            "type" : "integer",
            "description" : "Gets or sets the return status identifier",
            "format" : "int32"
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of entity creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of entity update",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a return request"
      },
      "ReturnRequestReasonDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a return request reason"
      },
      "ReturnRequestReturnRequestDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ReturnRequestDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ReturnRequestStatus" : {
        "type" : "string",
        "enum" : [ "Pending", "Received", "ReturnAuthorized", "ItemsRepaired", "ItemsRefunded", "RequestRejected", "Cancelled" ]
      },
      "ReviewTypeDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets the description",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "visible_to_all_customers" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the review type is visible to all customers"
          },
          "is_required" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the review type is required"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a review type"
      },
      "RewardPointsHistoryDto" : {
        "type" : "object",
        "properties" : {
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier in which these reward points were awarded or redeemed",
            "format" : "int32"
          },
          "points" : {
            "type" : "integer",
            "description" : "Gets or sets the points redeemed/added",
            "format" : "int32"
          },
          "points_balance" : {
            "type" : "integer",
            "description" : "Gets or sets the points balance",
            "format" : "int32",
            "nullable" : true
          },
          "used_amount" : {
            "type" : "number",
            "description" : "Gets or sets the used amount",
            "format" : "double"
          },
          "message" : {
            "type" : "string",
            "description" : "Gets or sets the message",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "end_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time when the points will no longer be valid",
            "format" : "date-time",
            "nullable" : true
          },
          "valid_points" : {
            "type" : "integer",
            "description" : "Gets or sets the number of valid points that have not yet spent (only for positive amount of points)",
            "format" : "int32",
            "nullable" : true
          },
          "used_with_order" : {
            "type" : "string",
            "description" : "Used with order",
            "format" : "uuid",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a reward point history entry"
      },
      "RewardPointsHistoryRewardPointsHistoryDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/RewardPointsHistoryDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "RoundingType" : {
        "type" : "string",
        "enum" : [ "Rounding001", "Rounding005Up", "Rounding005Down", "Rounding01Up", "Rounding01Down", "Rounding05", "Rounding1", "Rounding1Up" ]
      },
      "SalesSummaryReportLineDto" : {
        "type" : "object",
        "properties" : {
          "summary" : {
            "type" : "string",
            "nullable" : true
          },
          "number_of_orders" : {
            "type" : "integer",
            "format" : "int32"
          },
          "profit" : {
            "type" : "number",
            "format" : "double"
          },
          "profit_str" : {
            "type" : "string",
            "nullable" : true
          },
          "shipping" : {
            "type" : "string",
            "nullable" : true
          },
          "tax" : {
            "type" : "string",
            "nullable" : true
          },
          "order_total" : {
            "type" : "string",
            "nullable" : true
          },
          "summary_type" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents sales summary report line"
      },
      "SalesSummaryReportLineSalesSummaryReportLineDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/SalesSummaryReportLineDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ScheduleTaskDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "seconds" : {
            "type" : "integer",
            "description" : "Gets or sets the run period (in seconds)",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets or sets the type of appropriate IScheduleTask class",
            "nullable" : true
          },
          "last_enabled_utc" : {
            "type" : "string",
            "description" : "Gets or sets the datetime when task was enabled last time",
            "format" : "date-time",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether a task is enabled"
          },
          "stop_on_error" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether a task should be stopped on some error"
          },
          "last_start_utc" : {
            "type" : "string",
            "description" : "Gets or sets the datetime when it was started last time",
            "format" : "date-time",
            "nullable" : true
          },
          "last_end_utc" : {
            "type" : "string",
            "description" : "Gets or sets the datetime when it was finished last time (no matter failed is success)",
            "format" : "date-time",
            "nullable" : true
          },
          "last_success_utc" : {
            "type" : "string",
            "description" : "Gets or sets the datetime when it was successfully finished last time",
            "format" : "date-time",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a schedule task"
      },
      "SearchTermDto" : {
        "type" : "object",
        "properties" : {
          "keyword" : {
            "type" : "string",
            "description" : "Gets or sets the keyword",
            "nullable" : true
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Gets or sets search count",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Search term record"
      },
      "SearchTermReportLineDto" : {
        "type" : "object",
        "properties" : {
          "keyword" : {
            "type" : "string",
            "description" : "Gets or sets the keyword",
            "nullable" : true
          },
          "count" : {
            "type" : "integer",
            "description" : "Gets or sets search count",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Search term record (for statistics)"
      },
      "SearchTermReportLineSearchTermReportLineDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/SearchTermReportLineDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ShipmentDto" : {
        "type" : "object",
        "properties" : {
          "order_id" : {
            "type" : "integer",
            "description" : "Gets or sets the order identifier",
            "format" : "int32"
          },
          "tracking_number" : {
            "type" : "string",
            "description" : "Gets or sets the tracking number of this shipment",
            "nullable" : true
          },
          "total_weight" : {
            "type" : "number",
            "description" : "Gets or sets the total weight of this shipment\r\nIt's nullable for compatibility with the previous version of nopCommerce where was no such property",
            "format" : "double",
            "nullable" : true
          },
          "shipped_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the shipped date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "delivery_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the delivery date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "ready_for_pickup_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the ready for pickup date and time",
            "format" : "date-time",
            "nullable" : true
          },
          "admin_comment" : {
            "type" : "string",
            "description" : "Gets or sets the admin comment",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the entity creation date",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a shipment"
      },
      "ShipmentItemDto" : {
        "type" : "object",
        "properties" : {
          "shipment_id" : {
            "type" : "integer",
            "description" : "Gets or sets the shipment identifier",
            "format" : "int32"
          },
          "order_item_id" : {
            "type" : "integer",
            "description" : "Gets or sets the order item identifier",
            "format" : "int32"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity",
            "format" : "int32"
          },
          "warehouse_id" : {
            "type" : "integer",
            "description" : "Gets or sets the warehouse identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a shipment item"
      },
      "ShipmentShipmentDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ShipmentDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "ShippingMethodCountryMappingDto" : {
        "required" : [ "country_id", "shipping_method_id" ],
        "type" : "object",
        "properties" : {
          "shipping_method_id" : {
            "type" : "integer",
            "description" : "Gets or sets the shipping method identifier",
            "format" : "int32"
          },
          "country_id" : {
            "type" : "integer",
            "description" : "Gets or sets the country identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a shipping method country mapping"
      },
      "ShippingMethodDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets the description",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a shipping method"
      },
      "ShippingOptionDto" : {
        "type" : "object",
        "properties" : {
          "shipping_rate_computation_method_system_name" : {
            "type" : "string",
            "description" : "Gets or sets the system name of shipping rate computation method",
            "nullable" : true
          },
          "rate" : {
            "type" : "number",
            "description" : "Gets or sets a shipping rate (without discounts, additional shipping charges, etc)",
            "format" : "double"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets a shipping option name",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets a shipping option description",
            "nullable" : true
          },
          "transit_days" : {
            "type" : "integer",
            "description" : "Gets or sets a transit days",
            "format" : "int32",
            "nullable" : true
          },
          "is_pickup_in_store" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating if it's pickup in store shipping option"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets a display order",
            "format" : "int32",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "ShippingStatus" : {
        "type" : "string",
        "enum" : [ "ShippingNotRequired", "NotYetShipped", "PartiallyShipped", "Shipped", "Delivered" ]
      },
      "ShoppingCartItemDto" : {
        "type" : "object",
        "properties" : {
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "shopping_cart_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the shopping cart type identifier",
            "format" : "int32"
          },
          "customer_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer identifier",
            "format" : "int32"
          },
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "attributes_xml" : {
            "type" : "string",
            "description" : "Gets or sets the product attributes in XML format",
            "nullable" : true
          },
          "customer_entered_price" : {
            "type" : "number",
            "description" : "Gets or sets the price enter by a customer",
            "format" : "double"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity",
            "format" : "int32"
          },
          "rental_start_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the rental product start date (null if it's not a rental product)",
            "format" : "date-time",
            "nullable" : true
          },
          "rental_end_date_utc" : {
            "type" : "string",
            "description" : "Gets or sets the rental product end date (null if it's not a rental product)",
            "format" : "date-time",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "updated_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance update",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a shopping cart item"
      },
      "ShoppingCartType" : {
        "type" : "string",
        "enum" : [ "ShoppingCart", "Wishlist" ]
      },
      "SpecificationAttributeDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "specification_attribute_group_id" : {
            "type" : "integer",
            "description" : "Gets or sets the specification attribute group identifier",
            "format" : "int32",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a specification attribute"
      },
      "SpecificationAttributeGroupDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a specification attribute group"
      },
      "SpecificationAttributeGroupSpecificationAttributeGroupDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/SpecificationAttributeGroupDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "SpecificationAttributeOptionDto" : {
        "type" : "object",
        "properties" : {
          "specification_attribute_id" : {
            "type" : "integer",
            "description" : "Gets or sets the specification attribute identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "color_squares_rgb" : {
            "type" : "string",
            "description" : "Gets or sets the color RGB value (used when you want to display \"Color squares\" instead of text)",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a specification attribute option"
      },
      "SpecificationAttributeSpecificationAttributeDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/SpecificationAttributeDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "StateProvinceDto" : {
        "type" : "object",
        "properties" : {
          "country_id" : {
            "type" : "integer",
            "description" : "Gets or sets the country identifier",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "abbreviation" : {
            "type" : "string",
            "description" : "Gets or sets the abbreviation",
            "nullable" : true
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is published"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a state province"
      },
      "StockQuantityHistoryDto" : {
        "type" : "object",
        "properties" : {
          "quantity_adjustment" : {
            "type" : "integer",
            "description" : "Gets or sets the stock quantity adjustment",
            "format" : "int32"
          },
          "stock_quantity" : {
            "type" : "integer",
            "description" : "Gets or sets current stock quantity",
            "format" : "int32"
          },
          "message" : {
            "type" : "string",
            "description" : "Gets or sets the message",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of instance creation",
            "format" : "date-time"
          },
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "combination_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product attribute combination identifier",
            "format" : "int32",
            "nullable" : true
          },
          "warehouse_id" : {
            "type" : "integer",
            "description" : "Gets or sets the warehouse identifier",
            "format" : "int32",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a stock quantity change entry"
      },
      "StockQuantityHistoryStockQuantityHistoryDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/StockQuantityHistoryDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "StoreDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the store name",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "description" : "Gets or sets the store URL",
            "nullable" : true
          },
          "ssl_enabled" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether SSL is enabled"
          },
          "hosts" : {
            "type" : "string",
            "description" : "Gets or sets the comma separated list of possible HTTP_HOST values",
            "nullable" : true
          },
          "default_language_id" : {
            "type" : "integer",
            "description" : "Gets or sets the identifier of the default language for this store; 0 is set when we use the default language display order",
            "format" : "int32"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "company_name" : {
            "type" : "string",
            "description" : "Gets or sets the company name",
            "nullable" : true
          },
          "company_address" : {
            "type" : "string",
            "description" : "Gets or sets the company address",
            "nullable" : true
          },
          "company_phone_number" : {
            "type" : "string",
            "description" : "Gets or sets the store phone number",
            "nullable" : true
          },
          "company_vat" : {
            "type" : "string",
            "description" : "Gets or sets the company VAT (used in Europe Union countries)",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a store"
      },
      "StoreMappingDto" : {
        "type" : "object",
        "properties" : {
          "entity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the entity identifier",
            "format" : "int32"
          },
          "entity_name" : {
            "type" : "string",
            "description" : "Gets or sets the entity name",
            "nullable" : true
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a store mapping record"
      },
      "TaxCategoryDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a tax category"
      },
      "TierPriceDto" : {
        "type" : "object",
        "properties" : {
          "product_id" : {
            "type" : "integer",
            "description" : "Gets or sets the product identifier",
            "format" : "int32"
          },
          "store_id" : {
            "type" : "integer",
            "description" : "Gets or sets the store identifier (0 - all stores)",
            "format" : "int32"
          },
          "customer_role_id" : {
            "type" : "integer",
            "description" : "Gets or sets the customer role identifier",
            "format" : "int32",
            "nullable" : true
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Gets or sets the quantity",
            "format" : "int32"
          },
          "price" : {
            "type" : "number",
            "description" : "Gets or sets the price",
            "format" : "double"
          },
          "start_date_time_utc" : {
            "type" : "string",
            "description" : "Gets or sets the start date and time in UTC",
            "format" : "date-time",
            "nullable" : true
          },
          "end_date_time_utc" : {
            "type" : "string",
            "description" : "Gets or sets the end date and time in UTC",
            "format" : "date-time",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a tier price"
      },
      "TopicDto" : {
        "type" : "object",
        "properties" : {
          "system_name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "include_in_sitemap" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this topic should be included in sitemap"
          },
          "include_in_top_menu" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this topic should be included in top menu"
          },
          "include_in_footer_column1" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this topic should be included in footer (column 1)"
          },
          "include_in_footer_column2" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this topic should be included in footer (column 1)"
          },
          "include_in_footer_column3" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this topic should be included in footer (column 1)"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "accessible_when_store_closed" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this topic is accessible when a store is closed"
          },
          "is_password_protected" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether this topic is password protected"
          },
          "password" : {
            "type" : "string",
            "description" : "Gets or sets the password",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Gets or sets the title",
            "nullable" : true
          },
          "body" : {
            "type" : "string",
            "description" : "Gets or sets the body",
            "nullable" : true
          },
          "published" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is published"
          },
          "topic_template_id" : {
            "type" : "integer",
            "description" : "Gets or sets a value of used topic template identifier",
            "format" : "int32"
          },
          "meta_keywords" : {
            "type" : "string",
            "description" : "Gets or sets the meta keywords",
            "nullable" : true
          },
          "meta_description" : {
            "type" : "string",
            "description" : "Gets or sets the meta description",
            "nullable" : true
          },
          "meta_title" : {
            "type" : "string",
            "description" : "Gets or sets the meta title",
            "nullable" : true
          },
          "subject_to_acl" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is subject to ACL"
          },
          "limited_to_stores" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is limited/restricted to certain stores"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a topic"
      },
      "TopicTemplateDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the template name",
            "nullable" : true
          },
          "view_path" : {
            "type" : "string",
            "description" : "Gets or sets the view path",
            "nullable" : true
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a topic template"
      },
      "UpdateOrderParametersDto" : {
        "type" : "object",
        "properties" : {
          "updated_order" : {
            "$ref" : "#/components/schemas/OrderDto"
          },
          "updated_order_item" : {
            "$ref" : "#/components/schemas/OrderItemDto"
          },
          "price_incl_tax" : {
            "type" : "number",
            "description" : "The price of item with tax",
            "format" : "double"
          },
          "price_excl_tax" : {
            "type" : "number",
            "description" : "The price of item without tax",
            "format" : "double"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "The quantity",
            "format" : "int32"
          },
          "discount_amount_incl_tax" : {
            "type" : "number",
            "description" : "The amount of discount with tax",
            "format" : "double"
          },
          "discount_amount_excl_tax" : {
            "type" : "number",
            "description" : "The amount of discount without tax",
            "format" : "double"
          },
          "sub_total_incl_tax" : {
            "type" : "number",
            "description" : "Subtotal of item with tax",
            "format" : "double"
          },
          "sub_total_excl_tax" : {
            "type" : "number",
            "description" : "Subtotal of item without tax",
            "format" : "double"
          },
          "warnings" : {
            "type" : "array",
            "description" : "Warnings",
            "nullable" : true,
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "applied_discounts" : {
            "type" : "array",
            "description" : "Applied discounts",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/DiscountDto"
            }
          },
          "pickup_point" : {
            "$ref" : "#/components/schemas/PickupPointDto"
          }
        },
        "additionalProperties" : false
      },
      "UrlRecordDto" : {
        "type" : "object",
        "properties" : {
          "entity_id" : {
            "type" : "integer",
            "description" : "Gets or sets the entity identifier",
            "format" : "int32"
          },
          "entity_name" : {
            "type" : "string",
            "description" : "Gets or sets the entity name",
            "nullable" : true
          },
          "slug" : {
            "type" : "string",
            "description" : "Gets or sets the slug",
            "nullable" : true
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "Gets or sets the value indicating whether the record is active"
          },
          "language_id" : {
            "type" : "integer",
            "description" : "Gets or sets the language identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents an URL record"
      },
      "UrlRecordUrlRecordDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/UrlRecordDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "VatNumberStatus" : {
        "type" : "string",
        "enum" : [ "Unknown", "Empty", "Valid", "Invalid" ]
      },
      "VendorAttributeDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "is_required" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the attribute is required"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "attribute_control_type_id" : {
            "type" : "integer",
            "description" : "Gets or sets the attribute control type identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a vendor attribute"
      },
      "VendorAttributeValueDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "is_pre_selected" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the value is pre-selected"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "vendor_attribute_id" : {
            "type" : "integer",
            "description" : "Gets or sets the vendor attribute identifier",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a vendor attribute value"
      },
      "VendorDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "description" : "Gets or sets the email",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Gets or sets the description",
            "nullable" : true
          },
          "picture_id" : {
            "type" : "integer",
            "description" : "Gets or sets the picture identifier",
            "format" : "int32"
          },
          "address_id" : {
            "type" : "integer",
            "description" : "Gets or sets the address identifier",
            "format" : "int32"
          },
          "admin_comment" : {
            "type" : "string",
            "description" : "Gets or sets the admin comment",
            "nullable" : true
          },
          "active" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity is active"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the entity has been deleted"
          },
          "display_order" : {
            "type" : "integer",
            "description" : "Gets or sets the display order",
            "format" : "int32"
          },
          "meta_keywords" : {
            "type" : "string",
            "description" : "Gets or sets the meta keywords",
            "nullable" : true
          },
          "meta_description" : {
            "type" : "string",
            "description" : "Gets or sets the meta description",
            "nullable" : true
          },
          "meta_title" : {
            "type" : "string",
            "description" : "Gets or sets the meta title",
            "nullable" : true
          },
          "page_size" : {
            "type" : "integer",
            "description" : "Gets or sets the page size",
            "format" : "int32"
          },
          "allow_customers_to_select_page_size" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether customers can select the page size"
          },
          "page_size_options" : {
            "type" : "string",
            "description" : "Gets or sets the available customer selectable page size options",
            "nullable" : true
          },
          "price_range_filtering" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the price range filtering is enabled"
          },
          "price_from" : {
            "type" : "number",
            "description" : "Gets or sets the \"from\" price",
            "format" : "double"
          },
          "price_to" : {
            "type" : "number",
            "description" : "Gets or sets the \"to\" price",
            "format" : "double"
          },
          "manually_price_range" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the price range should be entered manually"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a vendor"
      },
      "VendorNoteDto" : {
        "type" : "object",
        "properties" : {
          "vendor_id" : {
            "type" : "integer",
            "description" : "Gets or sets the vendor identifier",
            "format" : "int32"
          },
          "note" : {
            "type" : "string",
            "description" : "Gets or sets the note",
            "nullable" : true
          },
          "created_on_utc" : {
            "type" : "string",
            "description" : "Gets or sets the date and time of vendor note creation",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "VendorNoteVendorNoteDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VendorNoteDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "VendorVendorDtoPagedListDto" : {
        "type" : "object",
        "properties" : {
          "total_count" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "total_pages" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "has_previous_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "has_next_page" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "items" : {
            "type" : "array",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/VendorDto"
            }
          },
          "page_index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page_size" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false
      },
      "WarehouseDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the warehouse name",
            "nullable" : true
          },
          "admin_comment" : {
            "type" : "string",
            "description" : "Gets or sets the admin comment",
            "nullable" : true
          },
          "address_id" : {
            "type" : "integer",
            "description" : "Gets or sets the address identifier of the warehouse",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "additionalProperties" : false,
        "description" : "Represents a warehouse"
      }
    }
  }
}